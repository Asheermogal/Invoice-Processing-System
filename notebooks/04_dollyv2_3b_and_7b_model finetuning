{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":103376,"status":"ok","timestamp":1721586322110,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"HThvjy4ToWS7","outputId":"8a996ce1-7de4-4c6b-b68b-bff4fe0b655c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.42.4)\n","Collecting datasets\n","  Downloading datasets-2.20.0-py3-none-any.whl (547 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m547.8/547.8 kB\u001b[0m \u001b[31m11.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.15.4)\n","Requirement already satisfied: huggingface-hub\u003c1.0,\u003e=0.23.2 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.23.5)\n","Requirement already satisfied: numpy\u003c2.0,\u003e=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.25.2)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (24.1)\n","Requirement already satisfied: pyyaml\u003e=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2024.5.15)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.31.0)\n","Requirement already satisfied: safetensors\u003e=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.3)\n","Requirement already satisfied: tokenizers\u003c0.20,\u003e=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.1)\n","Requirement already satisfied: tqdm\u003e=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.4)\n","Collecting pyarrow\u003e=15.0.0 (from datasets)\n","  Downloading pyarrow-17.0.0-cp310-cp310-manylinux_2_28_x86_64.whl (39.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m39.9/39.9 MB\u001b[0m \u001b[31m40.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyarrow-hotfix in /usr/local/lib/python3.10/dist-packages (from datasets) (0.6)\n","Collecting dill\u003c0.3.9,\u003e=0.3.0 (from datasets)\n","  Downloading dill-0.3.8-py3-none-any.whl (116 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m116.3/116.3 kB\u001b[0m \u001b[31m14.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.0.3)\n","Collecting requests (from transformers)\n","  Downloading requests-2.32.3-py3-none-any.whl (64 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m64.9/64.9 kB\u001b[0m \u001b[31m6.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting xxhash (from datasets)\n","  Downloading xxhash-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (194 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m194.1/194.1 kB\u001b[0m \u001b[31m15.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting multiprocess (from datasets)\n","  Downloading multiprocess-0.70.16-py310-none-any.whl (134 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m134.8/134.8 kB\u001b[0m \u001b[31m18.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: fsspec[http]\u003c=2024.5.0,\u003e=2023.1.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (2023.6.0)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.9.5)\n","Requirement already satisfied: aiosignal\u003e=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (1.3.1)\n","Requirement already satisfied: attrs\u003e=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (23.2.0)\n","Requirement already satisfied: frozenlist\u003e=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (1.4.1)\n","Requirement already satisfied: multidict\u003c7.0,\u003e=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (6.0.5)\n","Requirement already satisfied: yarl\u003c2.0,\u003e=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (1.9.4)\n","Requirement already satisfied: async-timeout\u003c5.0,\u003e=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (4.0.3)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003c1.0,\u003e=0.23.2-\u003etransformers) (4.12.2)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (2024.7.4)\n","Requirement already satisfied: python-dateutil\u003e=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003edatasets) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003edatasets) (2023.4)\n","Requirement already satisfied: tzdata\u003e=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003edatasets) (2024.1)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.2-\u003epandas-\u003edatasets) (1.16.0)\n","Installing collected packages: xxhash, requests, pyarrow, dill, multiprocess, datasets\n","  Attempting uninstall: requests\n","    Found existing installation: requests 2.31.0\n","    Uninstalling requests-2.31.0:\n","      Successfully uninstalled requests-2.31.0\n","  Attempting uninstall: pyarrow\n","    Found existing installation: pyarrow 14.0.2\n","    Uninstalling pyarrow-14.0.2:\n","      Successfully uninstalled pyarrow-14.0.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","cudf-cu12 24.4.1 requires pyarrow\u003c15.0.0a0,\u003e=14.0.1, but you have pyarrow 17.0.0 which is incompatible.\n","google-colab 1.0.0 requires requests==2.31.0, but you have requests 2.32.3 which is incompatible.\n","ibis-framework 8.0.0 requires pyarrow\u003c16,\u003e=2, but you have pyarrow 17.0.0 which is incompatible.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed datasets-2.20.0 dill-0.3.8 multiprocess-0.70.16 pyarrow-17.0.0 requests-2.32.3 xxhash-3.4.1\n","Collecting peft\n","  Downloading peft-0.11.1-py3-none-any.whl (251 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m251.6/251.6 kB\u001b[0m \u001b[31m7.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy\u003e=1.17 in /usr/local/lib/python3.10/dist-packages (from peft) (1.25.2)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from peft) (24.1)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from peft) (5.9.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from peft) (6.0.1)\n","Requirement already satisfied: torch\u003e=1.13.0 in /usr/local/lib/python3.10/dist-packages (from peft) (2.3.1+cu121)\n","Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (from peft) (4.42.4)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from peft) (4.66.4)\n","Requirement already satisfied: accelerate\u003e=0.21.0 in /usr/local/lib/python3.10/dist-packages (from peft) (0.32.1)\n","Requirement already satisfied: safetensors in /usr/local/lib/python3.10/dist-packages (from peft) (0.4.3)\n","Requirement already satisfied: huggingface-hub\u003e=0.17.0 in /usr/local/lib/python3.10/dist-packages (from peft) (0.23.5)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft) (3.15.4)\n","Requirement already satisfied: fsspec\u003e=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft) (2023.6.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft) (2.32.3)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft) (1.13.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft) (3.1.4)\n","Collecting nvidia-cuda-nvrtc-cu12==12.1.105 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cuda_nvrtc_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (23.7 MB)\n","Collecting nvidia-cuda-runtime-cu12==12.1.105 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cuda_runtime_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (823 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.1.105 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cuda_cupti_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (14.1 MB)\n","Collecting nvidia-cudnn-cu12==8.9.2.26 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cudnn_cu12-8.9.2.26-py3-none-manylinux1_x86_64.whl (731.7 MB)\n","Collecting nvidia-cublas-cu12==12.1.3.1 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cublas_cu12-12.1.3.1-py3-none-manylinux1_x86_64.whl (410.6 MB)\n","Collecting nvidia-cufft-cu12==11.0.2.54 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cufft_cu12-11.0.2.54-py3-none-manylinux1_x86_64.whl (121.6 MB)\n","Collecting nvidia-curand-cu12==10.3.2.106 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_curand_cu12-10.3.2.106-py3-none-manylinux1_x86_64.whl (56.5 MB)\n","Collecting nvidia-cusolver-cu12==11.4.5.107 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cusolver_cu12-11.4.5.107-py3-none-manylinux1_x86_64.whl (124.2 MB)\n","Collecting nvidia-cusparse-cu12==12.1.0.106 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_cusparse_cu12-12.1.0.106-py3-none-manylinux1_x86_64.whl (196.0 MB)\n","Collecting nvidia-nccl-cu12==2.20.5 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_nccl_cu12-2.20.5-py3-none-manylinux2014_x86_64.whl (176.2 MB)\n","Collecting nvidia-nvtx-cu12==12.1.105 (from torch\u003e=1.13.0-\u003epeft)\n","  Using cached nvidia_nvtx_cu12-12.1.105-py3-none-manylinux1_x86_64.whl (99 kB)\n","Requirement already satisfied: triton==2.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft) (2.3.1)\n","Collecting nvidia-nvjitlink-cu12 (from nvidia-cusolver-cu12==11.4.5.107-\u003etorch\u003e=1.13.0-\u003epeft)\n","  Downloading nvidia_nvjitlink_cu12-12.5.82-py3-none-manylinux2014_x86_64.whl (21.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.3/21.3 MB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers-\u003epeft) (2024.5.15)\n","Requirement already satisfied: tokenizers\u003c0.20,\u003e=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers-\u003epeft) (0.19.1)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003etorch\u003e=1.13.0-\u003epeft) (2.1.5)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft) (2024.7.4)\n","Requirement already satisfied: mpmath\u003c1.4,\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy-\u003etorch\u003e=1.13.0-\u003epeft) (1.3.0)\n","Installing collected packages: nvidia-nvtx-cu12, nvidia-nvjitlink-cu12, nvidia-nccl-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, peft\n","Successfully installed nvidia-cublas-cu12-12.1.3.1 nvidia-cuda-cupti-cu12-12.1.105 nvidia-cuda-nvrtc-cu12-12.1.105 nvidia-cuda-runtime-cu12-12.1.105 nvidia-cudnn-cu12-8.9.2.26 nvidia-cufft-cu12-11.0.2.54 nvidia-curand-cu12-10.3.2.106 nvidia-cusolver-cu12-11.4.5.107 nvidia-cusparse-cu12-12.1.0.106 nvidia-nccl-cu12-2.20.5 nvidia-nvjitlink-cu12-12.5.82 nvidia-nvtx-cu12-12.1.105 peft-0.11.1\n","Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.42.4)\n","Requirement already satisfied: datasets in /usr/local/lib/python3.10/dist-packages (2.20.0)\n","Requirement already satisfied: accelerate in /usr/local/lib/python3.10/dist-packages (0.32.1)\n","Collecting bitsandbytes\n","  Downloading bitsandbytes-0.43.1-py3-none-manylinux_2_24_x86_64.whl (119.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m119.8/119.8 MB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.15.4)\n","Requirement already satisfied: huggingface-hub\u003c1.0,\u003e=0.23.2 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.23.5)\n","Requirement already satisfied: numpy\u003c2.0,\u003e=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.25.2)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (24.1)\n","Requirement already satisfied: pyyaml\u003e=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2024.5.15)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.32.3)\n","Requirement already satisfied: safetensors\u003e=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.3)\n","Requirement already satisfied: tokenizers\u003c0.20,\u003e=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.1)\n","Requirement already satisfied: tqdm\u003e=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.4)\n","Requirement already satisfied: pyarrow\u003e=15.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (17.0.0)\n","Requirement already satisfied: pyarrow-hotfix in /usr/local/lib/python3.10/dist-packages (from datasets) (0.6)\n","Requirement already satisfied: dill\u003c0.3.9,\u003e=0.3.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (0.3.8)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (from datasets) (2.0.3)\n","Requirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from datasets) (3.4.1)\n","Requirement already satisfied: multiprocess in /usr/local/lib/python3.10/dist-packages (from datasets) (0.70.16)\n","Requirement already satisfied: fsspec[http]\u003c=2024.5.0,\u003e=2023.1.0 in /usr/local/lib/python3.10/dist-packages (from datasets) (2023.6.0)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from datasets) (3.9.5)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate) (5.9.5)\n","Requirement already satisfied: torch\u003e=1.10.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (2.3.1+cu121)\n","Requirement already satisfied: aiosignal\u003e=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (1.3.1)\n","Requirement already satisfied: attrs\u003e=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (23.2.0)\n","Requirement already satisfied: frozenlist\u003e=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (1.4.1)\n","Requirement already satisfied: multidict\u003c7.0,\u003e=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (6.0.5)\n","Requirement already satisfied: yarl\u003c2.0,\u003e=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (1.9.4)\n","Requirement already satisfied: async-timeout\u003c5.0,\u003e=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp-\u003edatasets) (4.0.3)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003c1.0,\u003e=0.23.2-\u003etransformers) (4.12.2)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (2024.7.4)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (1.13.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (3.1.4)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (8.9.2.26)\n","Requirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.3.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (11.0.2.54)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (10.3.2.106)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (11.4.5.107)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.0.106)\n","Requirement already satisfied: nvidia-nccl-cu12==2.20.5 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (2.20.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: triton==2.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (2.3.1)\n","Requirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107-\u003etorch\u003e=1.10.0-\u003eaccelerate) (12.5.82)\n","Requirement already satisfied: python-dateutil\u003e=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003edatasets) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003edatasets) (2023.4)\n","Requirement already satisfied: tzdata\u003e=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas-\u003edatasets) (2024.1)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.2-\u003epandas-\u003edatasets) (1.16.0)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003etorch\u003e=1.10.0-\u003eaccelerate) (2.1.5)\n","Requirement already satisfied: mpmath\u003c1.4,\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy-\u003etorch\u003e=1.10.0-\u003eaccelerate) (1.3.0)\n","Installing collected packages: bitsandbytes\n","Successfully installed bitsandbytes-0.43.1\n","Collecting git+https://github.com/huggingface/peft.git\n","  Cloning https://github.com/huggingface/peft.git to /tmp/pip-req-build-emggz4o7\n","  Running command git clone --filter=blob:none --quiet https://github.com/huggingface/peft.git /tmp/pip-req-build-emggz4o7\n","  Resolved https://github.com/huggingface/peft.git to commit e02b938e0246e94aa9b4ead39087e2171b94b355\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: numpy\u003e=1.17 in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (1.25.2)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (24.1)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (5.9.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (6.0.1)\n","Requirement already satisfied: torch\u003e=1.13.0 in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (2.3.1+cu121)\n","Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (4.42.4)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (4.66.4)\n","Requirement already satisfied: accelerate\u003e=0.21.0 in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (0.32.1)\n","Requirement already satisfied: safetensors in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (0.4.3)\n","Requirement already satisfied: huggingface-hub\u003e=0.17.0 in /usr/local/lib/python3.10/dist-packages (from peft==0.11.2.dev0) (0.23.5)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (3.15.4)\n","Requirement already satisfied: fsspec\u003e=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (2023.6.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (2.32.3)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (1.13.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (3.1.4)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.1.105)\n","Requirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (8.9.2.26)\n","Requirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.1.3.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (11.0.2.54)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (10.3.2.106)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (11.4.5.107)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.1.0.106)\n","Requirement already satisfied: nvidia-nccl-cu12==2.20.5 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (2.20.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.1.105)\n","Requirement already satisfied: triton==2.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (2.3.1)\n","Requirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107-\u003etorch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (12.5.82)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers-\u003epeft==0.11.2.dev0) (2024.5.15)\n","Requirement already satisfied: tokenizers\u003c0.20,\u003e=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers-\u003epeft==0.11.2.dev0) (0.19.1)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003etorch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (2.1.5)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub\u003e=0.17.0-\u003epeft==0.11.2.dev0) (2024.7.4)\n","Requirement already satisfied: mpmath\u003c1.4,\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy-\u003etorch\u003e=1.13.0-\u003epeft==0.11.2.dev0) (1.3.0)\n","Building wheels for collected packages: peft\n","  Building wheel for peft (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for peft: filename=peft-0.11.2.dev0-py3-none-any.whl size=294153 sha256=d02ba1d08a70e8b5fcd660a0d5082f7f956defd9a62abf54e61980f573db0890\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-w2no76pj/wheels/d7/c7/de/1368fac8590e1b103ddc2ec2a28ad51d83aded1a3830e8a087\n","Successfully built peft\n","Installing collected packages: peft\n","  Attempting uninstall: peft\n","    Found existing installation: peft 0.11.1\n","    Uninstalling peft-0.11.1:\n","      Successfully uninstalled peft-0.11.1\n","Successfully installed peft-0.11.2.dev0\n","Requirement already satisfied: huggingface_hub in /usr/local/lib/python3.10/dist-packages (0.23.5)\n","Collecting huggingface_hub\n","  Downloading huggingface_hub-0.24.0-py3-none-any.whl (419 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m419.0/419.0 kB\u001b[0m \u001b[31m10.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (3.15.4)\n","Requirement already satisfied: fsspec\u003e=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (2023.6.0)\n","Requirement already satisfied: packaging\u003e=20.9 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (24.1)\n","Requirement already satisfied: pyyaml\u003e=5.1 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (6.0.1)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (2.32.3)\n","Requirement already satisfied: tqdm\u003e=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (4.66.4)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface_hub) (4.12.2)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface_hub) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface_hub) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface_hub) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface_hub) (2024.7.4)\n","Installing collected packages: huggingface_hub\n","  Attempting uninstall: huggingface_hub\n","    Found existing installation: huggingface-hub 0.23.5\n","    Uninstalling huggingface-hub-0.23.5:\n","      Successfully uninstalled huggingface-hub-0.23.5\n","Successfully installed huggingface_hub-0.24.0\n"]}],"source":["# Install the peft library, if it's available via pip (if it's not, you'll need to find the appropriate way to install it)\n","!pip install peft\n","!pip install transformers datasets accelerate bitsandbytes\n","!pip install git+https://github.com/huggingface/peft.git\n","!pip install --upgrade huggingface_hub"]},{"cell_type":"markdown","metadata":{"id":"6t5hDoFTwKeE"},"source":["# 3B model finetuning"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-yHKB8nJvzMR"},"outputs":[],"source":["# Import necessary libraries\n","import os\n","import time\n","import json\n","import torch\n","from transformers import AutoTokenizer, AutoModelForCausalLM, TrainingArguments, Trainer, BitsAndBytesConfig, TrainerCallback\n","from datasets import load_dataset\n","from transformers.trainer_utils import get_last_checkpoint\n","from peft import LoraConfig, get_peft_model, prepare_model_for_kbit_training\n","from google.colab import drive\n","\n","# Mount Google Drive\n","print(\"Mounting Google Drive...\")\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":154,"status":"ok","timestamp":1721288746890,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"-Ua_im1Ov83i","outputId":"c4974a0c-8536-4ba0-9b62-1c43a73ad25f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Created directory: /content/drive/MyDrive/invoice_extraction_project\n","Created directory: /content/drive/MyDrive/invoice_extraction_project/results\n","Created directory: /content/drive/MyDrive/invoice_extraction_project/fine_tuned_model\n","Created directory: /content/drive/MyDrive/invoice_extraction_project/checkpoints\n","Directories set up. Output will be saved to /content/drive/MyDrive/invoice_extraction_project\n"]}],"source":["# Set up directories\n","base_dir = \"/content/drive/MyDrive/invoice_extraction_project\"\n","output_dir = f\"{base_dir}/results\"\n","model_save_dir = f\"{base_dir}/fine_tuned_model\"\n","checkpoint_dir = f\"{base_dir}/checkpoints\"\n","\n","# Create directories if they don't exist\n","for dir in [base_dir, output_dir, model_save_dir, checkpoint_dir]:\n","    os.makedirs(dir, exist_ok=True)\n","    print(f\"Created directory: {dir}\")\n","\n","print(f\"Directories set up. Output will be saved to {base_dir}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6194,"status":"ok","timestamp":1721289054238,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"ciXqXyIqwH_Y","outputId":"ca7a6fdd-7816-47e8-cf7b-acd14994de25"},"outputs":[{"name":"stdout","output_type":"stream","text":["Loading dataset...\n"]},{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]},{"name":"stdout","output_type":"stream","text":["Dataset loaded. Train size: 2043, Validation size: 70\n","Initializing tokenizer and model...\n","Warning: 'use_reentrant' parameter not supported. Enabling gradient checkpointing without it.\n","Tokenizer and model initialized.\n"]}],"source":["# Load dataset\n","print(\"Loading dataset...\")\n","dataset = load_dataset(\"mychen76/invoices-and-receipts_ocr_v1\")\n","print(f\"Dataset loaded. Train size: {len(dataset['train'])}, Validation size: {len(dataset['valid'])}\")\n","\n","# Initialize tokenizer and model\n","print(\"Initializing tokenizer and model...\")\n","model_name = \"databricks/dolly-v2-3b\"\n","tokenizer = AutoTokenizer.from_pretrained(model_name)\n","tokenizer.pad_token = tokenizer.eos_token\n","\n","# Quantization configuration\n","bnb_config = BitsAndBytesConfig(\n","    load_in_4bit=True,\n","    bnb_4bit_use_double_quant=True,\n","    bnb_4bit_quant_type=\"nf4\",\n","    bnb_4bit_compute_dtype=torch.bfloat16\n",")\n","\n","model = AutoModelForCausalLM.from_pretrained(\n","    model_name,\n","    quantization_config=bnb_config,\n","    device_map=\"auto\",\n","    use_cache=False\n",")\n","model = prepare_model_for_kbit_training(model)\n","\n","# Enable gradient checkpointing\n","try:\n","    model.gradient_checkpointing_enable(use_reentrant=False)\n","except TypeError:\n","    print(\"Warning: 'use_reentrant' parameter not supported. Enabling gradient checkpointing without it.\")\n","    model.gradient_checkpointing_enable()\n","\n","print(\"Tokenizer and model initialized.\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":175,"status":"ok","timestamp":1721289161704,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"05W8MQORwarA","outputId":"2b17c8d5-7f6b-432f-8d85-f04c98791fae"},"outputs":[{"name":"stdout","output_type":"stream","text":["Applying preprocessing to the dataset...\n","Preprocessing complete.\n"]}],"source":["# Preprocess function\n","def preprocess_data(examples):\n","    inputs = []\n","    targets = []\n","    for raw_data, parsed_data in zip(examples['raw_data'], examples['parsed_data']):\n","        raw_data = json.loads(raw_data) if isinstance(raw_data, str) else raw_data\n","        parsed_data = json.loads(parsed_data) if isinstance(parsed_data, str) else parsed_data\n","        ocr_text = ' '.join(raw_data['ocr_words']) if 'ocr_words' in raw_data else \"\"\n","        parsed_json = json.dumps(parsed_data)\n","        input_text = f\"Extract information from this invoice:\\n{ocr_text}\\n\\nExtracted information:\"\n","        target_text = parsed_json\n","        inputs.append(input_text)\n","        targets.append(target_text)\n","\n","    model_inputs = tokenizer(inputs, max_length=512, padding=\"max_length\", truncation=True)\n","    labels = tokenizer(targets, max_length=512, padding=\"max_length\", truncation=True)\n","    model_inputs[\"labels\"] = labels[\"input_ids\"]\n","    return model_inputs\n","\n","print(\"Applying preprocessing to the dataset...\")\n","tokenized_datasets = dataset.map(preprocess_data, batched=True, remove_columns=dataset[\"train\"].column_names)\n","print(\"Preprocessing complete.\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":163,"status":"ok","timestamp":1721289165026,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"Qk7XnUUGwfJJ","outputId":"b2a2319b-f53e-4ad1-b02d-1c2f466cb16b"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Sample preprocessed data:\n","Input: Extract information from this invoice:\n","['I n v o i c e   n o :   4 0 3 7 8 1 7 0 ',  'D a t e   o f   i s s u e : ',  '1 0 / 1 5 / 2 0 1 2 ',  'S e l l e r : ',  'C l i e n t : ',  'P a t e l,   T h o m p s o n   a n d   M o n t g o m e r y ',  'J a c k s o n,   O d o n n e l l   a n d   J a c k s o n. ',  '3 5 6   K y l e   V i s t a ',  '2 6 7   J o h n   T r a c k   S u i t e   8 4 1 ',  'N e w   J a m e s,   M A   4 6 2 2 8 ',  'J e n n i f e r v i l l e,   P A   9 8 6 0 1 ',  'T a x   I d :   9 5 8 - 7 4 - 3 5 1 1 ',  'T a x   I d :   9 9 8 - 8 7 - 7 7 2 3 ',  'I B A N :   G B 7 7 W R B Q 3 1 9 6 5 1 2 8 4 1 4 0 0 6 ',  'I T E M S ',  'U M ',  'N o. ',  'D e s c r i p t i o n ',  'Q t y ',  'N e t   p r i c e ',  'N e t   w o r t h ',  'V A T   [ % ] ',  'G r o s s ',  'w o r t h ',   \"   L e e d's   W i n e   C o m p a n i o n   B o t t l e \",  '1, 0 0 ',  'e a c h ',  '7, 5 0 ',  '7, 5 0 ',  '1 0 % ',  '8, 2 5 ',  'C o r\n","Target: {\"xml\": \"\", \"json\": \"{'header': {'invoice_no': '40378170', 'invoice_date': '10/15/2012','seller': 'Patel, Thompson and Montgomery 356 Kyle Vista New James, MA 46228', 'client': 'Jackson, Odonnell and Jackson 267 John Track Suite 841 Jenniferville, PA 98601','seller_tax_id': '958-74-3511', 'client_tax_id': '998-87-7723', 'iban': 'GB77WRBQ31965128414006'}, 'items': [{'item_desc': \\\"Leed's Wine Companion Bottle Corkscrew Opener Gift Box Set with Foil Cutter\\\", 'item_qty': '1,00', 'item_net_price': '7,50', 'item_net_worth': '7,50', 'item_vat': '10%', 'item_gross_worth': '8,25'}],'summary': {'total_net_worth': '$7,50', 'total_vat': '$0,75', 'total_gross_worth': '$8,25'}}\", \"kie\": \"\"}\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\u003c|endoftext|\u003e\n"]}],"source":["# Print sample input and output\n","print(\"\\nSample preprocessed data:\")\n","sample = tokenized_datasets[\"train\"][0]\n","print(f\"Input: {tokenizer.decode(sample['input_ids'])}\")\n","print(f\"Target: {tokenizer.decode(sample['labels'])}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":181,"status":"ok","timestamp":1721289167898,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"4seA_WBAwitP","outputId":"90e1146e-0f3d-4494-f68f-f6400a47f1b1"},"outputs":[{"name":"stdout","output_type":"stream","text":["Applying LoRA to the model...\n","trainable params: 20,971,520 || all params: 2,796,057,600 || trainable%: 0.7500\n"]}],"source":["# LoRA configuration\n","lora_config = LoraConfig(\n","    r=16,\n","    lora_alpha=32,\n","    target_modules=[\"query_key_value\", \"dense\", \"dense_h_to_4h\", \"dense_4h_to_h\"],\n","    lora_dropout=0.05,\n","    bias=\"none\",\n","    task_type=\"CAUSAL_LM\"\n",")\n","\n","print(\"Applying LoRA to the model...\")\n","model = get_peft_model(model, lora_config)\n","model.print_trainable_parameters()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":160,"status":"ok","timestamp":1721289190183,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"vtsveubYwmkx","outputId":"15288c75-899b-46b7-a67d-eb8c980bd6c5"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/transformers/training_args.py:1494: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n","  warnings.warn(\n"]}],"source":["# Training arguments\n","training_args = TrainingArguments(\n","    output_dir=output_dir,\n","    num_train_epochs=3,\n","    per_device_train_batch_size=4,\n","    gradient_accumulation_steps=4,\n","    learning_rate=2e-5,\n","    fp16=True,\n","    save_steps=100,\n","    logging_steps=10,\n","    evaluation_strategy=\"steps\",\n","    eval_steps=100,\n","    save_total_limit=3,\n","    load_best_model_at_end=True,\n","    report_to=\"tensorboard\",\n","    gradient_checkpointing=True,  # Enable gradient checkpointing\n","    optim=\"adamw_torch\"  # Use AdamW optimizer\n",")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"rhKIRveKwqCF"},"outputs":[],"source":["# Custom callback for time estimation\n","class TimeEstimationCallback(TrainerCallback):\n","    def __init__(self, num_examples):\n","        self.num_examples = num_examples\n","        self.start_time = None\n","        self.step_times = []\n","\n","    def on_train_begin(self, args, state, control, **kwargs):\n","        self.start_time = time.time()\n","\n","    def on_step_end(self, args, state, control, **kwargs):\n","        if state.global_step \u003e 0:\n","            step_time = (time.time() - self.start_time) / state.global_step\n","            self.step_times.append(step_time)\n","            if len(self.step_times) \u003e 10:\n","                self.step_times.pop(0)\n","            avg_step_time = sum(self.step_times) / len(self.step_times)\n","            remaining_steps = args.num_train_epochs * (self.num_examples // args.per_device_train_batch_size) - state.global_step\n","            estimated_time = remaining_steps * avg_step_time / 3600  # in hours\n","            print(f\"\\nEstimated remaining time: {estimated_time:.2f} hours\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":5265121,"status":"ok","timestamp":1721294460095,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"iO4MC9ZjwsGt","outputId":"b3e79e83-0dab-43fa-bd72-aeb5aea4f8c8"},"outputs":[{"name":"stdout","output_type":"stream","text":["Initializing Trainer...\n","Starting training...\n","No checkpoint found. Starting training from scratch.\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["\n","Estimated remaining time: 6.38 hours\n"]},{"data":{"text/html":["\n","    \u003cdiv\u003e\n","      \n","      \u003cprogress value='381' max='381' style='width:300px; height:20px; vertical-align: middle;'\u003e\u003c/progress\u003e\n","      [381/381 1:27:29, Epoch 2/3]\n","    \u003c/div\u003e\n","    \u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n"," \u003ctr style=\"text-align: left;\"\u003e\n","      \u003cth\u003eStep\u003c/th\u003e\n","      \u003cth\u003eTraining Loss\u003c/th\u003e\n","      \u003cth\u003eValidation Loss\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e4.753500\u003c/td\u003e\n","      \u003ctd\u003e5.070503\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","      \u003ctd\u003e4.352100\u003c/td\u003e\n","      \u003ctd\u003e4.631046\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e300\u003c/td\u003e\n","      \u003ctd\u003e4.108500\u003c/td\u003e\n","      \u003ctd\u003e4.490265\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\u003cp\u003e"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["\n","Estimated remaining time: 6.32 hours\n","\n","Estimated remaining time: 6.24 hours\n","\n","Estimated remaining time: 6.17 hours\n","\n","Estimated remaining time: 6.12 hours\n","\n","Estimated remaining time: 6.07 hours\n","\n","Estimated remaining time: 6.04 hours\n","\n","Estimated remaining time: 6.01 hours\n","\n","Estimated remaining time: 5.99 hours\n","\n","Estimated remaining time: 5.97 hours\n","\n","Estimated remaining time: 5.92 hours\n","\n","Estimated remaining time: 5.87 hours\n","\n","Estimated remaining time: 5.84 hours\n","\n","Estimated remaining time: 5.83 hours\n","\n","Estimated remaining time: 5.82 hours\n","\n","Estimated remaining time: 5.81 hours\n","\n","Estimated remaining time: 5.81 hours\n","\n","Estimated remaining time: 5.80 hours\n","\n","Estimated remaining time: 5.79 hours\n","\n","Estimated remaining time: 5.79 hours\n","\n","Estimated remaining time: 5.78 hours\n","\n","Estimated remaining time: 5.77 hours\n","\n","Estimated remaining time: 5.77 hours\n","\n","Estimated remaining time: 5.76 hours\n","\n","Estimated remaining time: 5.76 hours\n","\n","Estimated remaining time: 5.75 hours\n","\n","Estimated remaining time: 5.75 hours\n","\n","Estimated remaining time: 5.74 hours\n","\n","Estimated remaining time: 5.74 hours\n","\n","Estimated remaining time: 5.74 hours\n","\n","Estimated remaining time: 5.73 hours\n","\n","Estimated remaining time: 5.73 hours\n","\n","Estimated remaining time: 5.72 hours\n","\n","Estimated remaining time: 5.72 hours\n","\n","Estimated remaining time: 5.71 hours\n","\n","Estimated remaining time: 5.71 hours\n","\n","Estimated remaining time: 5.71 hours\n","\n","Estimated remaining time: 5.70 hours\n","\n","Estimated remaining time: 5.70 hours\n","\n","Estimated remaining time: 5.69 hours\n","\n","Estimated remaining time: 5.69 hours\n","\n","Estimated remaining time: 5.68 hours\n","\n","Estimated remaining time: 5.68 hours\n","\n","Estimated remaining time: 5.67 hours\n","\n","Estimated remaining time: 5.67 hours\n","\n","Estimated remaining time: 5.67 hours\n","\n","Estimated remaining time: 5.66 hours\n","\n","Estimated remaining time: 5.66 hours\n","\n","Estimated remaining time: 5.65 hours\n","\n","Estimated remaining time: 5.65 hours\n","\n","Estimated remaining time: 5.64 hours\n","\n","Estimated remaining time: 5.64 hours\n","\n","Estimated remaining time: 5.64 hours\n","\n","Estimated remaining time: 5.63 hours\n","\n","Estimated remaining time: 5.63 hours\n","\n","Estimated remaining time: 5.62 hours\n","\n","Estimated remaining time: 5.62 hours\n","\n","Estimated remaining time: 5.62 hours\n","\n","Estimated remaining time: 5.61 hours\n","\n","Estimated remaining time: 5.61 hours\n","\n","Estimated remaining time: 5.60 hours\n","\n","Estimated remaining time: 5.60 hours\n","\n","Estimated remaining time: 5.60 hours\n","\n","Estimated remaining time: 5.59 hours\n","\n","Estimated remaining time: 5.59 hours\n","\n","Estimated remaining time: 5.58 hours\n","\n","Estimated remaining time: 5.58 hours\n","\n","Estimated remaining time: 5.58 hours\n","\n","Estimated remaining time: 5.57 hours\n","\n","Estimated remaining time: 5.57 hours\n","\n","Estimated remaining time: 5.56 hours\n","\n","Estimated remaining time: 5.56 hours\n","\n","Estimated remaining time: 5.56 hours\n","\n","Estimated remaining time: 5.55 hours\n","\n","Estimated remaining time: 5.55 hours\n","\n","Estimated remaining time: 5.54 hours\n","\n","Estimated remaining time: 5.54 hours\n","\n","Estimated remaining time: 5.54 hours\n","\n","Estimated remaining time: 5.53 hours\n","\n","Estimated remaining time: 5.53 hours\n","\n","Estimated remaining time: 5.52 hours\n","\n","Estimated remaining time: 5.52 hours\n","\n","Estimated remaining time: 5.52 hours\n","\n","Estimated remaining time: 5.51 hours\n","\n","Estimated remaining time: 5.51 hours\n","\n","Estimated remaining time: 5.51 hours\n","\n","Estimated remaining time: 5.50 hours\n","\n","Estimated remaining time: 5.50 hours\n","\n","Estimated remaining time: 5.49 hours\n","\n","Estimated remaining time: 5.49 hours\n","\n","Estimated remaining time: 5.49 hours\n","\n","Estimated remaining time: 5.48 hours\n","\n","Estimated remaining time: 5.48 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.45 hours\n","\n","Estimated remaining time: 5.45 hours\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["\n","Estimated remaining time: 5.45 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.48 hours\n","\n","Estimated remaining time: 5.48 hours\n","\n","Estimated remaining time: 5.48 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.47 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.46 hours\n","\n","Estimated remaining time: 5.45 hours\n","\n","Estimated remaining time: 5.45 hours\n","\n","Estimated remaining time: 5.44 hours\n","\n","Estimated remaining time: 5.44 hours\n","\n","Estimated remaining time: 5.43 hours\n","\n","Estimated remaining time: 5.43 hours\n","\n","Estimated remaining time: 5.42 hours\n","\n","Estimated remaining time: 5.42 hours\n","\n","Estimated remaining time: 5.42 hours\n","\n","Estimated remaining time: 5.41 hours\n","\n","Estimated remaining time: 5.41 hours\n","\n","Estimated remaining time: 5.40 hours\n","\n","Estimated remaining time: 5.40 hours\n","\n","Estimated remaining time: 5.39 hours\n","\n","Estimated remaining time: 5.39 hours\n","\n","Estimated remaining time: 5.38 hours\n","\n","Estimated remaining time: 5.38 hours\n","\n","Estimated remaining time: 5.37 hours\n","\n","Estimated remaining time: 5.37 hours\n","\n","Estimated remaining time: 5.36 hours\n","\n","Estimated remaining time: 5.36 hours\n","\n","Estimated remaining time: 5.35 hours\n","\n","Estimated remaining time: 5.35 hours\n","\n","Estimated remaining time: 5.35 hours\n","\n","Estimated remaining time: 5.34 hours\n","\n","Estimated remaining time: 5.34 hours\n","\n","Estimated remaining time: 5.33 hours\n","\n","Estimated remaining time: 5.33 hours\n","\n","Estimated remaining time: 5.32 hours\n","\n","Estimated remaining time: 5.32 hours\n","\n","Estimated remaining time: 5.31 hours\n","\n","Estimated remaining time: 5.31 hours\n","\n","Estimated remaining time: 5.31 hours\n","\n","Estimated remaining time: 5.30 hours\n","\n","Estimated remaining time: 5.30 hours\n","\n","Estimated remaining time: 5.29 hours\n","\n","Estimated remaining time: 5.29 hours\n","\n","Estimated remaining time: 5.29 hours\n","\n","Estimated remaining time: 5.28 hours\n","\n","Estimated remaining time: 5.28 hours\n","\n","Estimated remaining time: 5.27 hours\n","\n","Estimated remaining time: 5.27 hours\n","\n","Estimated remaining time: 5.26 hours\n","\n","Estimated remaining time: 5.26 hours\n","\n","Estimated remaining time: 5.26 hours\n","\n","Estimated remaining time: 5.25 hours\n","\n","Estimated remaining time: 5.25 hours\n","\n","Estimated remaining time: 5.24 hours\n","\n","Estimated remaining time: 5.24 hours\n","\n","Estimated remaining time: 5.24 hours\n","\n","Estimated remaining time: 5.23 hours\n","\n","Estimated remaining time: 5.23 hours\n","\n","Estimated remaining time: 5.22 hours\n","\n","Estimated remaining time: 5.22 hours\n","\n","Estimated remaining time: 5.21 hours\n","\n","Estimated remaining time: 5.21 hours\n","\n","Estimated remaining time: 5.21 hours\n","\n","Estimated remaining time: 5.20 hours\n","\n","Estimated remaining time: 5.20 hours\n","\n","Estimated remaining time: 5.19 hours\n","\n","Estimated remaining time: 5.19 hours\n","\n","Estimated remaining time: 5.19 hours\n","\n","Estimated remaining time: 5.18 hours\n","\n","Estimated remaining time: 5.18 hours\n","\n","Estimated remaining time: 5.17 hours\n","\n","Estimated remaining time: 5.17 hours\n","\n","Estimated remaining time: 5.17 hours\n","\n","Estimated remaining time: 5.16 hours\n","\n","Estimated remaining time: 5.16 hours\n","\n","Estimated remaining time: 5.15 hours\n","\n","Estimated remaining time: 5.15 hours\n","\n","Estimated remaining time: 5.14 hours\n","\n","Estimated remaining time: 5.14 hours\n","\n","Estimated remaining time: 5.14 hours\n","\n","Estimated remaining time: 5.13 hours\n","\n","Estimated remaining time: 5.13 hours\n","\n","Estimated remaining time: 5.12 hours\n","\n","Estimated remaining time: 5.12 hours\n","\n","Estimated remaining time: 5.12 hours\n","\n","Estimated remaining time: 5.11 hours\n","\n","Estimated remaining time: 5.11 hours\n","\n","Estimated remaining time: 5.10 hours\n","\n","Estimated remaining time: 5.10 hours\n","\n","Estimated remaining time: 5.10 hours\n","\n","Estimated remaining time: 5.09 hours\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.09 hours\n","\n","Estimated remaining time: 5.08 hours\n","\n","Estimated remaining time: 5.08 hours\n","\n","Estimated remaining time: 5.08 hours\n","\n","Estimated remaining time: 5.07 hours\n","\n","Estimated remaining time: 5.07 hours\n","\n","Estimated remaining time: 5.06 hours\n","\n","Estimated remaining time: 5.06 hours\n","\n","Estimated remaining time: 5.06 hours\n","\n","Estimated remaining time: 5.05 hours\n","\n","Estimated remaining time: 5.05 hours\n","\n","Estimated remaining time: 5.04 hours\n","\n","Estimated remaining time: 5.04 hours\n","\n","Estimated remaining time: 5.03 hours\n","\n","Estimated remaining time: 5.03 hours\n","\n","Estimated remaining time: 5.03 hours\n","\n","Estimated remaining time: 5.02 hours\n","\n","Estimated remaining time: 5.02 hours\n","\n","Estimated remaining time: 5.01 hours\n","\n","Estimated remaining time: 5.01 hours\n","\n","Estimated remaining time: 5.00 hours\n","\n","Estimated remaining time: 5.00 hours\n","\n","Estimated remaining time: 5.00 hours\n","\n","Estimated remaining time: 4.99 hours\n","\n","Estimated remaining time: 4.99 hours\n","\n","Estimated remaining time: 4.98 hours\n","\n","Estimated remaining time: 4.98 hours\n","\n","Estimated remaining time: 4.97 hours\n","\n","Estimated remaining time: 4.97 hours\n","\n","Estimated remaining time: 4.97 hours\n","\n","Estimated remaining time: 4.96 hours\n","\n","Estimated remaining time: 4.96 hours\n","\n","Estimated remaining time: 4.95 hours\n","\n","Estimated remaining time: 4.95 hours\n","\n","Estimated remaining time: 4.95 hours\n","\n","Estimated remaining time: 4.94 hours\n","\n","Estimated remaining time: 4.94 hours\n","\n","Estimated remaining time: 4.93 hours\n","\n","Estimated remaining time: 4.93 hours\n","\n","Estimated remaining time: 4.92 hours\n","\n","Estimated remaining time: 4.92 hours\n","\n","Estimated remaining time: 4.92 hours\n","\n","Estimated remaining time: 4.91 hours\n","\n","Estimated remaining time: 4.91 hours\n","\n","Estimated remaining time: 4.90 hours\n","\n","Estimated remaining time: 4.90 hours\n","\n","Estimated remaining time: 4.90 hours\n","\n","Estimated remaining time: 4.89 hours\n","\n","Estimated remaining time: 4.89 hours\n","\n","Estimated remaining time: 4.88 hours\n","\n","Estimated remaining time: 4.88 hours\n","\n","Estimated remaining time: 4.88 hours\n","\n","Estimated remaining time: 4.87 hours\n","\n","Estimated remaining time: 4.87 hours\n","\n","Estimated remaining time: 4.86 hours\n","\n","Estimated remaining time: 4.86 hours\n","\n","Estimated remaining time: 4.85 hours\n","\n","Estimated remaining time: 4.85 hours\n","\n","Estimated remaining time: 4.85 hours\n","\n","Estimated remaining time: 4.84 hours\n","\n","Estimated remaining time: 4.84 hours\n","\n","Estimated remaining time: 4.83 hours\n","\n","Estimated remaining time: 4.83 hours\n","\n","Estimated remaining time: 4.83 hours\n","\n","Estimated remaining time: 4.82 hours\n","\n","Estimated remaining time: 4.82 hours\n","\n","Estimated remaining time: 4.81 hours\n","\n","Estimated remaining time: 4.81 hours\n","\n","Estimated remaining time: 4.81 hours\n","\n","Estimated remaining time: 4.80 hours\n","\n","Estimated remaining time: 4.80 hours\n","\n","Estimated remaining time: 4.79 hours\n","\n","Estimated remaining time: 4.79 hours\n","\n","Estimated remaining time: 4.79 hours\n","\n","Estimated remaining time: 4.78 hours\n","\n","Estimated remaining time: 4.78 hours\n","\n","Estimated remaining time: 4.77 hours\n","\n","Estimated remaining time: 4.77 hours\n","\n","Estimated remaining time: 4.77 hours\n","\n","Estimated remaining time: 4.76 hours\n","\n","Estimated remaining time: 4.76 hours\n","\n","Estimated remaining time: 4.75 hours\n","\n","Estimated remaining time: 4.75 hours\n","\n","Estimated remaining time: 4.75 hours\n","\n","Estimated remaining time: 4.74 hours\n","\n","Estimated remaining time: 4.74 hours\n","\n","Estimated remaining time: 4.73 hours\n","\n","Estimated remaining time: 4.73 hours\n","\n","Estimated remaining time: 4.73 hours\n","\n","Estimated remaining time: 4.72 hours\n","\n","Estimated remaining time: 4.72 hours\n","\n","Estimated remaining time: 4.71 hours\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["\n","Estimated remaining time: 4.71 hours\n","\n","Estimated remaining time: 4.71 hours\n","\n","Estimated remaining time: 4.71 hours\n","\n","Estimated remaining time: 4.71 hours\n","\n","Estimated remaining time: 4.70 hours\n","\n","Estimated remaining time: 4.70 hours\n","\n","Estimated remaining time: 4.70 hours\n","\n","Estimated remaining time: 4.70 hours\n","\n","Estimated remaining time: 4.70 hours\n","\n","Estimated remaining time: 4.70 hours\n","\n","Estimated remaining time: 4.69 hours\n","\n","Estimated remaining time: 4.69 hours\n","\n","Estimated remaining time: 4.68 hours\n","\n","Estimated remaining time: 4.68 hours\n","\n","Estimated remaining time: 4.67 hours\n","\n","Estimated remaining time: 4.67 hours\n","\n","Estimated remaining time: 4.67 hours\n","\n","Estimated remaining time: 4.66 hours\n","\n","Estimated remaining time: 4.66 hours\n","\n","Estimated remaining time: 4.65 hours\n","\n","Estimated remaining time: 4.65 hours\n","\n","Estimated remaining time: 4.65 hours\n","\n","Estimated remaining time: 4.64 hours\n","\n","Estimated remaining time: 4.64 hours\n","\n","Estimated remaining time: 4.63 hours\n","\n","Estimated remaining time: 4.63 hours\n","\n","Estimated remaining time: 4.63 hours\n","\n","Estimated remaining time: 4.62 hours\n","\n","Estimated remaining time: 4.62 hours\n","\n","Estimated remaining time: 4.61 hours\n","\n","Estimated remaining time: 4.61 hours\n","\n","Estimated remaining time: 4.61 hours\n","\n","Estimated remaining time: 4.60 hours\n","\n","Estimated remaining time: 4.60 hours\n","\n","Estimated remaining time: 4.59 hours\n","\n","Estimated remaining time: 4.59 hours\n","\n","Estimated remaining time: 4.59 hours\n","\n","Estimated remaining time: 4.58 hours\n","\n","Estimated remaining time: 4.58 hours\n","\n","Estimated remaining time: 4.57 hours\n","\n","Estimated remaining time: 4.57 hours\n","\n","Estimated remaining time: 4.57 hours\n","\n","Estimated remaining time: 4.56 hours\n","\n","Estimated remaining time: 4.56 hours\n","\n","Estimated remaining time: 4.55 hours\n","\n","Estimated remaining time: 4.55 hours\n","\n","Estimated remaining time: 4.55 hours\n","\n","Estimated remaining time: 4.54 hours\n","\n","Estimated remaining time: 4.54 hours\n","\n","Estimated remaining time: 4.53 hours\n","\n","Estimated remaining time: 4.53 hours\n","\n","Estimated remaining time: 4.53 hours\n","\n","Estimated remaining time: 4.52 hours\n","\n","Estimated remaining time: 4.52 hours\n","\n","Estimated remaining time: 4.51 hours\n","\n","Estimated remaining time: 4.51 hours\n","\n","Estimated remaining time: 4.51 hours\n","\n","Estimated remaining time: 4.50 hours\n","\n","Estimated remaining time: 4.50 hours\n","\n","Estimated remaining time: 4.49 hours\n","\n","Estimated remaining time: 4.49 hours\n","\n","Estimated remaining time: 4.49 hours\n","\n","Estimated remaining time: 4.48 hours\n","\n","Estimated remaining time: 4.48 hours\n","\n","Estimated remaining time: 4.47 hours\n","\n","Estimated remaining time: 4.47 hours\n","\n","Estimated remaining time: 4.47 hours\n","\n","Estimated remaining time: 4.46 hours\n","\n","Estimated remaining time: 4.46 hours\n","\n","Estimated remaining time: 4.45 hours\n","\n","Estimated remaining time: 4.45 hours\n","\n","Estimated remaining time: 4.45 hours\n","\n","Estimated remaining time: 4.44 hours\n","\n","Estimated remaining time: 4.44 hours\n","\n","Estimated remaining time: 4.43 hours\n","\n","Estimated remaining time: 4.43 hours\n","\n","Estimated remaining time: 4.43 hours\n","\n","Estimated remaining time: 4.42 hours\n","\n","Estimated remaining time: 4.42 hours\n","\n","Estimated remaining time: 4.41 hours\n","\n","Estimated remaining time: 4.41 hours\n"]}],"source":["# Initialize Trainer\n","print(\"Initializing Trainer...\")\n","trainer = Trainer(\n","    model=model,\n","    args=training_args,\n","    train_dataset=tokenized_datasets[\"train\"],\n","    eval_dataset=tokenized_datasets[\"valid\"],\n","    callbacks=[TimeEstimationCallback(len(tokenized_datasets[\"train\"]))]\n",")\n","\n","# Start training\n","print(\"Starting training...\")\n","# Check if there's a checkpoint to resume from\n","last_checkpoint = get_last_checkpoint(training_args.output_dir)\n","if last_checkpoint is not None:\n","    print(f\"Resuming training from checkpoint: {last_checkpoint}\")\n","    trainer.train(resume_from_checkpoint=last_checkpoint)\n","else:\n","    print(\"No checkpoint found. Starting training from scratch.\")\n","    trainer.train()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":72},"executionInfo":{"elapsed":17794,"status":"ok","timestamp":1721294477888,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"dCtiaLjowyug","outputId":"79f6eb83-abff-43b9-c9d6-195dbd786dad"},"outputs":[{"name":"stdout","output_type":"stream","text":["Evaluating the model...\n"]},{"data":{"text/html":["\n","    \u003cdiv\u003e\n","      \n","      \u003cprogress value='9' max='9' style='width:300px; height:20px; vertical-align: middle;'\u003e\u003c/progress\u003e\n","      [9/9 00:15]\n","    \u003c/div\u003e\n","    "],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Evaluation results: {'eval_loss': 4.490265369415283, 'eval_runtime': 17.7228, 'eval_samples_per_second': 3.95, 'eval_steps_per_second': 0.508, 'epoch': 2.9823874755381605}\n"]}],"source":["# Evaluate the model\n","print(\"Evaluating the model...\")\n","eval_results = trainer.evaluate()\n","print(f\"Evaluation results: {eval_results}\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1721294477888,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"uUvtFd1Iwz5q","outputId":"6b5a873a-bda9-4c56-cb62-4c6d2bbf3439"},"outputs":[{"name":"stdout","output_type":"stream","text":["Script execution complete.\n"]}],"source":["# Save evaluation results\n","with open(f\"{output_dir}/eval_results.json\", \"w\") as f:\n","    json.dump(eval_results, f)\n","\n","print(\"Script execution complete.\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":181,"status":"ok","timestamp":1721298138068,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"aYsg5AAMXG17","outputId":"b809a130-2d8e-426f-edff-422722a52a52"},"outputs":[{"name":"stdout","output_type":"stream","text":["invoice_extraction_project/\n","    results/\n","        eval_results.json\n","        runs/\n","            Jul18_07-46-08_c6691ff2e9b8/\n","                events.out.tfevents.1721288782.c6691ff2e9b8.683.0\n","            Jul18_07-48-29_c6691ff2e9b8/\n","                events.out.tfevents.1721288920.c6691ff2e9b8.683.1\n","            Jul18_07-53-08_c6691ff2e9b8/\n","                events.out.tfevents.1721289194.c6691ff2e9b8.683.2\n","                events.out.tfevents.1721294476.c6691ff2e9b8.683.3\n","        checkpoint-200/\n","            README.md\n","            adapter_model.safetensors\n","            adapter_config.json\n","            training_args.bin\n","            optimizer.pt\n","            scheduler.pt\n","            rng_state.pth\n","            trainer_state.json\n","        checkpoint-300/\n","            README.md\n","            adapter_model.safetensors\n","            adapter_config.json\n","            training_args.bin\n","            optimizer.pt\n","            scheduler.pt\n","            rng_state.pth\n","            trainer_state.json\n","        checkpoint-381/\n","            README.md\n","            adapter_model.safetensors\n","            adapter_config.json\n","            training_args.bin\n","            optimizer.pt\n","            scheduler.pt\n","            rng_state.pth\n","            trainer_state.json\n","    fine_tuned_model/\n","    checkpoints/\n"]}],"source":["import os\n","\n","def list_folder_structure(startpath):\n","    for root, dirs, files in os.walk(startpath):\n","        level = root.replace(startpath, '').count(os.sep)\n","        indent = ' ' * 4 * (level)\n","        print(f\"{indent}{os.path.basename(root)}/\")\n","        subindent = ' ' * 4 * (level + 1)\n","        for f in files:\n","            print(f\"{subindent}{f}\")\n","\n","# Specify folder path here to see the structure.\n","folder_path = '/content/drive/MyDrive/invoice_extraction_project'\n","list_folder_structure(folder_path)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":47850,"status":"ok","timestamp":1721298619318,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"G-6VOfwZYrlK","outputId":"8a0f76bc-25c5-4875-c323-e05548bc99c0"},"outputs":[{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]},{"name":"stdout","output_type":"stream","text":["Fine-tuned model and tokenizer saved to /content/drive/MyDrive/invoice_extraction_project/fine_tuned_model\n"]}],"source":["# Ensure we have the necessary imports\n","from transformers import AutoModelForCausalLM, AutoTokenizer\n","from peft import PeftModel, PeftConfig\n","import torch\n","\n","# Define the path where you want to save the model\n","save_directory = \"/content/drive/MyDrive/invoice_extraction_project/fine_tuned_model\"\n","\n","# Load the base model and tokenizer\n","base_model_name = \"databricks/dolly-v2-3b\"  # Make sure this matches the base model you used\n","base_model = AutoModelForCausalLM.from_pretrained(base_model_name)\n","tokenizer = AutoTokenizer.from_pretrained(base_model_name)\n","\n","# Load the LoRA config and model\n","peft_model_path = \"/content/drive/MyDrive/invoice_extraction_project/results/checkpoint-381\"  # Use the path to your last checkpoint\n","config = PeftConfig.from_pretrained(peft_model_path)\n","model = PeftModel.from_pretrained(base_model, peft_model_path)\n","\n","# Merge the LoRA weights with the base model\n","merged_model = model.merge_and_unload()\n","\n","# Save the merged model\n","merged_model.save_pretrained(save_directory)\n","\n","# Save the tokenizer\n","tokenizer.save_pretrained(save_directory)\n","\n","print(f\"Fine-tuned model and tokenizer saved to {save_directory}\")\n","\n","# Optionally, if you want to push the model to Hugging Face Hub\n","# from huggingface_hub import HfApi, HfFolder\n","# api = HfApi()\n","# api.upload_folder(\n","#     folder_path=save_directory,\n","#     repo_id=\"your-username/your-model-name\",\n","#     repo_type=\"model\",\n","# )\n","# print(\"Model pushed to Hugging Face Hub\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":76253,"status":"ok","timestamp":1721371132679,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"BBobe8k2d4jL","outputId":"1d0af203-b211-46b6-c038-e9a3bf8c4753"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting python-dotenv\n","  Downloading python_dotenv-1.0.1-py3-none-any.whl (19 kB)\n","Installing collected packages: python-dotenv\n","Successfully installed python-dotenv-1.0.1\n","Get:1 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,626 B]\n","Get:2 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease [1,581 B]\n","Get:3 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  Packages [859 kB]\n","Hit:4 http://archive.ubuntu.com/ubuntu jammy InRelease\n","Get:5 http://security.ubuntu.com/ubuntu jammy-security InRelease [129 kB]\n","Get:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [128 kB]\n","Hit:7 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\n","Hit:8 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease\n","Ign:9 https://r2u.stat.illinois.edu/ubuntu jammy InRelease\n","Get:10 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [127 kB]\n","Hit:11 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease\n","Get:12 https://r2u.stat.illinois.edu/ubuntu jammy Release [5,713 B]\n","Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [2,781 kB]\n","Get:14 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1,128 kB]\n","Get:15 https://r2u.stat.illinois.edu/ubuntu jammy Release.gpg [793 B]\n","Get:16 https://r2u.stat.illinois.edu/ubuntu jammy/main all Packages [8,193 kB]\n","Get:17 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2,329 kB]\n","Get:18 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,419 kB]\n","Get:19 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [33.7 kB]\n","Get:20 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [2,064 kB]\n","Get:21 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [2,707 kB]\n","Get:22 https://r2u.stat.illinois.edu/ubuntu jammy/main amd64 Packages [2,547 kB]\n","Fetched 24.5 MB in 5s (5,039 kB/s)\n","Reading package lists... Done\n","W: Skipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\n","Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following additional packages will be installed:\n","  tesseract-ocr-eng tesseract-ocr-osd\n","The following NEW packages will be installed:\n","  tesseract-ocr tesseract-ocr-eng tesseract-ocr-osd\n","0 upgraded, 3 newly installed, 0 to remove and 54 not upgraded.\n","Need to get 4,816 kB of archives.\n","After this operation, 15.6 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-eng all 1:4.00~git30-7274cfa-1.1 [1,591 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr-osd all 1:4.00~git30-7274cfa-1.1 [2,990 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu jammy/universe amd64 tesseract-ocr amd64 4.1.1-2.1build1 [236 kB]\n","Fetched 4,816 kB in 2s (2,487 kB/s)\n","Selecting previously unselected package tesseract-ocr-eng.\n","(Reading database ... 123586 files and directories currently installed.)\n","Preparing to unpack .../tesseract-ocr-eng_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-eng (1:4.00~git30-7274cfa-1.1) ...\n","Selecting previously unselected package tesseract-ocr-osd.\n","Preparing to unpack .../tesseract-ocr-osd_1%3a4.00~git30-7274cfa-1.1_all.deb ...\n","Unpacking tesseract-ocr-osd (1:4.00~git30-7274cfa-1.1) ...\n","Selecting previously unselected package tesseract-ocr.\n","Preparing to unpack .../tesseract-ocr_4.1.1-2.1build1_amd64.deb ...\n","Unpacking tesseract-ocr (4.1.1-2.1build1) ...\n","Setting up tesseract-ocr-eng (1:4.00~git30-7274cfa-1.1) ...\n","Setting up tesseract-ocr-osd (1:4.00~git30-7274cfa-1.1) ...\n","Setting up tesseract-ocr (4.1.1-2.1build1) ...\n","Processing triggers for man-db (2.10.2-1) ...\n","Collecting pytesseract\n","  Downloading pytesseract-0.3.10-py3-none-any.whl (14 kB)\n","Requirement already satisfied: packaging\u003e=21.3 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (24.1)\n","Requirement already satisfied: Pillow\u003e=8.0.0 in /usr/local/lib/python3.10/dist-packages (from pytesseract) (9.4.0)\n","Installing collected packages: pytesseract\n","Successfully installed pytesseract-0.3.10\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (9.4.0)\n","Collecting pypdfium2\n","  Downloading pypdfium2-4.30.0-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.8 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.8/2.8 MB\u001b[0m \u001b[31m45.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pypdfium2\n","Successfully installed pypdfium2-4.30.0\n","Collecting streamlit\n","  Downloading streamlit-1.36.0-py2.py3-none-any.whl (8.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m8.6/8.6 MB\u001b[0m \u001b[31m31.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: altair\u003c6,\u003e=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.2.2)\n","Requirement already satisfied: blinker\u003c2,\u003e=1.0.0 in /usr/lib/python3/dist-packages (from streamlit) (1.4)\n","Requirement already satisfied: cachetools\u003c6,\u003e=4.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (5.4.0)\n","Requirement already satisfied: click\u003c9,\u003e=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.1.7)\n","Requirement already satisfied: numpy\u003c3,\u003e=1.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (1.25.2)\n","Requirement already satisfied: packaging\u003c25,\u003e=20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (24.1)\n","Requirement already satisfied: pandas\u003c3,\u003e=1.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.0.3)\n","Requirement already satisfied: pillow\u003c11,\u003e=7.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (9.4.0)\n","Requirement already satisfied: protobuf\u003c6,\u003e=3.20 in /usr/local/lib/python3.10/dist-packages (from streamlit) (3.20.3)\n","Requirement already satisfied: pyarrow\u003e=7.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (17.0.0)\n","Requirement already satisfied: requests\u003c3,\u003e=2.27 in /usr/local/lib/python3.10/dist-packages (from streamlit) (2.32.3)\n","Requirement already satisfied: rich\u003c14,\u003e=10.14.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (13.7.1)\n","Requirement already satisfied: tenacity\u003c9,\u003e=8.1.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (8.5.0)\n","Requirement already satisfied: toml\u003c2,\u003e=0.10.1 in /usr/local/lib/python3.10/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions\u003c5,\u003e=4.3.0 in /usr/local/lib/python3.10/dist-packages (from streamlit) (4.12.2)\n","Collecting gitpython!=3.1.19,\u003c4,\u003e=3.0.7 (from streamlit)\n","  Downloading GitPython-3.1.43-py3-none-any.whl (207 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.3/207.3 kB\u001b[0m \u001b[31m31.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting pydeck\u003c1,\u003e=0.8.0b4 (from streamlit)\n","  Downloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m95.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tornado\u003c7,\u003e=6.0.3 in /usr/local/lib/python3.10/dist-packages (from streamlit) (6.3.3)\n","Collecting watchdog\u003c5,\u003e=2.1.5 (from streamlit)\n","  Downloading watchdog-4.0.1-py3-none-manylinux2014_x86_64.whl (83 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m83.0/83.0 kB\u001b[0m \u001b[31m13.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: entrypoints in /usr/local/lib/python3.10/dist-packages (from altair\u003c6,\u003e=4.0-\u003estreamlit) (0.4)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from altair\u003c6,\u003e=4.0-\u003estreamlit) (3.1.4)\n","Requirement already satisfied: jsonschema\u003e=3.0 in /usr/local/lib/python3.10/dist-packages (from altair\u003c6,\u003e=4.0-\u003estreamlit) (4.19.2)\n","Requirement already satisfied: toolz in /usr/local/lib/python3.10/dist-packages (from altair\u003c6,\u003e=4.0-\u003estreamlit) (0.12.1)\n","Collecting gitdb\u003c5,\u003e=4.0.1 (from gitpython!=3.1.19,\u003c4,\u003e=3.0.7-\u003estreamlit)\n","  Downloading gitdb-4.0.11-py3-none-any.whl (62 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m62.7/62.7 kB\u001b[0m \u001b[31m10.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: python-dateutil\u003e=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas\u003c3,\u003e=1.3.0-\u003estreamlit) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas\u003c3,\u003e=1.3.0-\u003estreamlit) (2023.4)\n","Requirement already satisfied: tzdata\u003e=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas\u003c3,\u003e=1.3.0-\u003estreamlit) (2024.1)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3,\u003e=2.27-\u003estreamlit) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3,\u003e=2.27-\u003estreamlit) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3,\u003e=2.27-\u003estreamlit) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests\u003c3,\u003e=2.27-\u003estreamlit) (2024.7.4)\n","Requirement already satisfied: markdown-it-py\u003e=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich\u003c14,\u003e=10.14.0-\u003estreamlit) (3.0.0)\n","Requirement already satisfied: pygments\u003c3.0.0,\u003e=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich\u003c14,\u003e=10.14.0-\u003estreamlit) (2.16.1)\n","Collecting smmap\u003c6,\u003e=3.0.1 (from gitdb\u003c5,\u003e=4.0.1-\u003egitpython!=3.1.19,\u003c4,\u003e=3.0.7-\u003estreamlit)\n","  Downloading smmap-5.0.1-py3-none-any.whl (24 kB)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003ealtair\u003c6,\u003e=4.0-\u003estreamlit) (2.1.5)\n","Requirement already satisfied: attrs\u003e=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema\u003e=3.0-\u003ealtair\u003c6,\u003e=4.0-\u003estreamlit) (23.2.0)\n","Requirement already satisfied: jsonschema-specifications\u003e=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema\u003e=3.0-\u003ealtair\u003c6,\u003e=4.0-\u003estreamlit) (2023.12.1)\n","Requirement already satisfied: referencing\u003e=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema\u003e=3.0-\u003ealtair\u003c6,\u003e=4.0-\u003estreamlit) (0.35.1)\n","Requirement already satisfied: rpds-py\u003e=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema\u003e=3.0-\u003ealtair\u003c6,\u003e=4.0-\u003estreamlit) (0.19.0)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py\u003e=2.2.0-\u003erich\u003c14,\u003e=10.14.0-\u003estreamlit) (0.1.2)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.2-\u003epandas\u003c3,\u003e=1.3.0-\u003estreamlit) (1.16.0)\n","Installing collected packages: watchdog, smmap, pydeck, gitdb, gitpython, streamlit\n","Successfully installed gitdb-4.0.11 gitpython-3.1.43 pydeck-0.9.1 smmap-5.0.1 streamlit-1.36.0 watchdog-4.0.1\n","Requirement already satisfied: pandas in /usr/local/lib/python3.10/dist-packages (2.0.3)\n","Requirement already satisfied: python-dateutil\u003e=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas) (2.8.2)\n","Requirement already satisfied: pytz\u003e=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2023.4)\n","Requirement already satisfied: tzdata\u003e=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas) (2024.1)\n","Requirement already satisfied: numpy\u003e=1.21.0 in /usr/local/lib/python3.10/dist-packages (from pandas) (1.25.2)\n","Requirement already satisfied: six\u003e=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil\u003e=2.8.2-\u003epandas) (1.16.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (2.32.3)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests) (2024.7.4)\n","Requirement already satisfied: torch in /usr/local/lib/python3.10/dist-packages (2.3.1+cu121)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch) (3.15.4)\n","Requirement already satisfied: typing-extensions\u003e=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch) (1.13.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch) (3.1.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch) (2023.6.0)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch) (12.1.105)\n","Requirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch) (8.9.2.26)\n","Requirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch) (12.1.3.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch) (11.0.2.54)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch) (10.3.2.106)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch) (11.4.5.107)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch) (12.1.0.106)\n","Requirement already satisfied: nvidia-nccl-cu12==2.20.5 in /usr/local/lib/python3.10/dist-packages (from torch) (2.20.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch) (12.1.105)\n","Requirement already satisfied: triton==2.3.1 in /usr/local/lib/python3.10/dist-packages (from torch) (2.3.1)\n","Requirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107-\u003etorch) (12.5.82)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003etorch) (2.1.5)\n","Requirement already satisfied: mpmath\u003c1.4,\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy-\u003etorch) (1.3.0)\n","Requirement already satisfied: transformers in /usr/local/lib/python3.10/dist-packages (4.42.4)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from transformers) (3.15.4)\n","Requirement already satisfied: huggingface-hub\u003c1.0,\u003e=0.23.2 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.24.0)\n","Requirement already satisfied: numpy\u003c2.0,\u003e=1.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (1.25.2)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from transformers) (24.1)\n","Requirement already satisfied: pyyaml\u003e=5.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (6.0.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.10/dist-packages (from transformers) (2024.5.15)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from transformers) (2.32.3)\n","Requirement already satisfied: safetensors\u003e=0.4.1 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.4.3)\n","Requirement already satisfied: tokenizers\u003c0.20,\u003e=0.19 in /usr/local/lib/python3.10/dist-packages (from transformers) (0.19.1)\n","Requirement already satisfied: tqdm\u003e=4.27 in /usr/local/lib/python3.10/dist-packages (from transformers) (4.66.4)\n","Requirement already satisfied: fsspec\u003e=2023.5.0 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003c1.0,\u003e=0.23.2-\u003etransformers) (2023.6.0)\n","Requirement already satisfied: typing-extensions\u003e=3.7.4.3 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub\u003c1.0,\u003e=0.23.2-\u003etransformers) (4.12.2)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003etransformers) (2024.7.4)\n","Collecting jsonformer\n","  Downloading jsonformer-0.12.0-py3-none-any.whl (6.6 kB)\n","Requirement already satisfied: termcolor\u003c3.0.0,\u003e=2.3.0 in /usr/local/lib/python3.10/dist-packages (from jsonformer) (2.4.0)\n","Installing collected packages: jsonformer\n","Successfully installed jsonformer-0.12.0\n","Requirement already satisfied: accelerate in /usr/local/lib/python3.10/dist-packages (0.32.1)\n","Requirement already satisfied: numpy\u003c2.0.0,\u003e=1.17 in /usr/local/lib/python3.10/dist-packages (from accelerate) (1.25.2)\n","Requirement already satisfied: packaging\u003e=20.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (24.1)\n","Requirement already satisfied: psutil in /usr/local/lib/python3.10/dist-packages (from accelerate) (5.9.5)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from accelerate) (6.0.1)\n","Requirement already satisfied: torch\u003e=1.10.0 in /usr/local/lib/python3.10/dist-packages (from accelerate) (2.3.1+cu121)\n","Requirement already satisfied: huggingface-hub in /usr/local/lib/python3.10/dist-packages (from accelerate) (0.24.0)\n","Requirement already satisfied: safetensors\u003e=0.3.1 in /usr/local/lib/python3.10/dist-packages (from accelerate) (0.4.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (3.15.4)\n","Requirement already satisfied: typing-extensions\u003e=4.8.0 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (4.12.2)\n","Requirement already satisfied: sympy in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (1.13.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (3.3)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (3.1.4)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (2023.6.0)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: nvidia-cudnn-cu12==8.9.2.26 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (8.9.2.26)\n","Requirement already satisfied: nvidia-cublas-cu12==12.1.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.3.1)\n","Requirement already satisfied: nvidia-cufft-cu12==11.0.2.54 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (11.0.2.54)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.2.106 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (10.3.2.106)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.4.5.107 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (11.4.5.107)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.1.0.106 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.0.106)\n","Requirement already satisfied: nvidia-nccl-cu12==2.20.5 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (2.20.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.1.105 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (12.1.105)\n","Requirement already satisfied: triton==2.3.1 in /usr/local/lib/python3.10/dist-packages (from torch\u003e=1.10.0-\u003eaccelerate) (2.3.1)\n","Requirement already satisfied: nvidia-nvjitlink-cu12 in /usr/local/lib/python3.10/dist-packages (from nvidia-cusolver-cu12==11.4.5.107-\u003etorch\u003e=1.10.0-\u003eaccelerate) (12.5.82)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from huggingface-hub-\u003eaccelerate) (2.32.3)\n","Requirement already satisfied: tqdm\u003e=4.42.1 in /usr/local/lib/python3.10/dist-packages (from huggingface-hub-\u003eaccelerate) (4.66.4)\n","Requirement already satisfied: MarkupSafe\u003e=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2-\u003etorch\u003e=1.10.0-\u003eaccelerate) (2.1.5)\n","Requirement already satisfied: charset-normalizer\u003c4,\u003e=2 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub-\u003eaccelerate) (3.3.2)\n","Requirement already satisfied: idna\u003c4,\u003e=2.5 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub-\u003eaccelerate) (3.7)\n","Requirement already satisfied: urllib3\u003c3,\u003e=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub-\u003eaccelerate) (2.0.7)\n","Requirement already satisfied: certifi\u003e=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests-\u003ehuggingface-hub-\u003eaccelerate) (2024.7.4)\n","Requirement already satisfied: mpmath\u003c1.4,\u003e=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy-\u003etorch\u003e=1.10.0-\u003eaccelerate) (1.3.0)\n"]}],"source":["!pip install python-dotenv\n","!apt-get update\n","!apt-get install -y tesseract-ocr\n","!pip install pytesseract\n","!pip install pillow\n","!pip install pypdfium2\n","!pip install streamlit\n","!pip install pandas\n","!pip install requests\n","!pip install torch\n","!pip install transformers\n","!pip install jsonformer\n","!pip install accelerate"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":29341,"status":"ok","timestamp":1721300053432,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"H1RIUKV7dyWo","outputId":"0e576743-eba7-4ef5-bcd3-3e549427fcab"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"58701cae2eca451f96f5274c9a135c26","version_major":2,"version_minor":0},"text/plain":["Loading checkpoint shards:   0%|          | 0/3 [00:00\u003c?, ?it/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]},{"name":"stdout","output_type":"stream","text":["Processing real_invoice_02.jpg (Type: image)...\n"]},{"name":"stderr","output_type":"stream","text":["The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.\n","Setting `pad_token_id` to `eos_token_id`:0 for open-end generation.\n","The attention mask is not set and cannot be inferred from input because pad token is same as eos token.As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.\n"]},{"name":"stdout","output_type":"stream","text":["Extracted information:\n","Extract information from this invoice:\n","DocuSign Envelope ID: E232648E-E4CF-4C3F-802E-115113AFF2DF\n","\n","Invoice No. MN00002988\n","\n","Date 8/31/2023\n","\n","Due Date 11/1/2023\n","\n","Customer No. wsso1\n","\n","Page 1 of 1\n","\n","Bill To\n","\n","Washington Suburban Sanitary Commission\n","\n","Rosa Wilson “' =\n","\n","14501 Sweitzer Ln\n","Laurel, MD 20707\n","\n"," \n","\n","O Creditron\n","\n","Ship To\n","\n","Washington Suburban Sanitary Commission\n","\n","14501 Sweitzer Ln\n","Laurel, MD 20707\n","USA\n","\n","USA\n","Contract/Project Number Purchase Order Payment Terms Currency\n","Start of Maint Period HARRIS-US$\n","Item No Description Quantity Unit Price Amount\n","SW-MAINT-US Remittance Software Maintenance: 11/1/2023 to 1.00 18,692.84 18,692.84\n","10/31/2024\n","SW-MAINT-US Cashiering Software Maintenance: 11/1/2023 to 10/31/2024 1.00 1,981.23 1,981.23\n","SW-MAINT-US PC Restore Service: 11/1/2023 to 10/31/2024 1.00 2,334.09 2,334.09\n","HW-MAINT-US Hardware Maintenance - 2 x Opex AS7200i with model 72,: 1.00 34,122.30 34,122.30\n","11/1/2023 to 10/31/2024\n","taal by:\n","atte — 3 | Ts\n","sep 7, 2023 11:53 PM EDT\n","DocuSigned by:\n","1\n","ET (Be\n","cc\n","\n","A\\o 4077E2ECEEA6440..\n","Remit To: btotal 57,130.46\n","Creditron sre ae\n","PO Box 62133 Misc 0.00\n","62133 Collections Center Dr\n","\n",". Taxes 0.00\n","Chicago, IL 60693-0621\n","OR Total 57,130.46\n","Remit To:\n","\n","Account No.: 4427105445\n","\n","Beneficiary Name:N Harris Computer Corporation\n","\n","Beneficiary Address:1 Antares Drive, Suite 400,_s__1_,ss._00_\u003c/s\u003e_.s\u003c/_\u003es\n","\n","The output is not in valid JSON format. Displaying as raw text.\n"]}],"source":["import os\n","from io import BytesIO\n","from PIL import Image\n","import pypdfium2 as pdfium\n","import pytesseract\n","import torch\n","from transformers import AutoModelForCausalLM, AutoTokenizer\n","import json\n","import mimetypes\n","\n","# 1. Convert PDF file into images\n","def convert_pdf_to_images(file_path, scale=300/72):\n","    pdf_file = pdfium.PdfDocument(file_path)\n","    page_indices = [i for i in range(len(pdf_file))]\n","    renderer = pdf_file.render(\n","        pdfium.PdfBitmap.to_pil,\n","        page_indices=page_indices,\n","        scale=scale,\n","    )\n","    final_images = []\n","    for i, image in zip(page_indices, renderer):\n","        image_byte_array = BytesIO()\n","        image.save(image_byte_array, format='jpeg', optimize=True)\n","        image_byte_array = image_byte_array.getvalue()\n","        final_images.append(dict({i: image_byte_array}))\n","    return final_images\n","\n","# 2. Extract text from images via pytesseract\n","def extract_text_from_img(images):\n","    if isinstance(images, list):  # Multiple images (from PDF)\n","        image_list = [list(data.values())[0] for data in images]\n","    else:  # Single image file\n","        image_list = [images]\n","\n","    image_content = []\n","    for image_bytes in image_list:\n","        image = Image.open(BytesIO(image_bytes) if isinstance(image_bytes, bytes) else image_bytes)\n","        raw_text = str(pytesseract.image_to_string(image))\n","        image_content.append(raw_text)\n","    return \"\\n\".join(image_content)\n","\n","# 3. Extract structured info from text via fine-tuned Dolly model\n","class FineTunedDollyLLM:\n","    def __init__(self, model_path):\n","        self.model = AutoModelForCausalLM.from_pretrained(model_path)\n","        self.tokenizer = AutoTokenizer.from_pretrained(model_path)\n","\n","    def generate(self, prompt, max_length=1024):\n","        inputs = self.tokenizer(prompt, return_tensors=\"pt\", padding=True, truncation=True, max_length=512)\n","        with torch.no_grad():\n","            outputs = self.model.generate(\n","                inputs.input_ids,\n","                max_length=max_length,\n","                num_return_sequences=1,\n","                no_repeat_ngram_size=2\n","            )\n","        return self.tokenizer.decode(outputs[0], skip_special_tokens=True)\n","\n","def extract_structured_data(content: str, llm):\n","    prompt = f\"\"\"Extract information from this invoice:\n","{content}\n","\n","Extracted information:\"\"\"\n","\n","    results = llm.generate(prompt)\n","    return results\n","\n","def get_file_type(file_path):\n","    mime_type, _ = mimetypes.guess_type(file_path)\n","    if mime_type == 'application/pdf':\n","        return 'pdf'\n","    elif mime_type and mime_type.startswith('image/'):\n","        return 'image'\n","    else:\n","        return 'unknown'\n","\n","def process_invoice(file_path, llm):\n","    file_type = get_file_type(file_path)\n","\n","    if file_type == 'pdf':\n","        # Convert PDF to images\n","        images = convert_pdf_to_images(file_path)\n","    elif file_type == 'image':\n","        # Read image file directly\n","        with open(file_path, 'rb') as image_file:\n","            images = image_file.read()\n","    else:\n","        raise ValueError(f\"Unsupported file type: {file_type}\")\n","\n","    # Extract text from image(s)\n","    content = extract_text_from_img(images)\n","\n","    # Extract structured data\n","    extracted_data = extract_structured_data(content, llm)\n","\n","    return extracted_data\n","\n","def main():\n","    # Path to your fine-tuned model\n","    model_path = \"/content/drive/MyDrive/invoice_extraction_project/fine_tuned_model\"\n","\n","    # Initialize the LLM with your fine-tuned model\n","    llm = FineTunedDollyLLM(model_path)\n","\n","    # Folder containing invoice files (PDF or images)\n","    folder_path = './invoices'\n","\n","    # Process each file in the folder\n","    for filename in os.listdir(folder_path):\n","        file_path = os.path.join(folder_path, filename)\n","        file_type = get_file_type(file_path)\n","\n","        if file_type in ['pdf', 'image']:\n","            print(f\"Processing {filename} (Type: {file_type})...\")\n","            try:\n","                result = process_invoice(file_path, llm)\n","                print(f\"Extracted information:\\n{result}\\n\")\n","\n","                # Attempt to parse the result as JSON\n","                try:\n","                    parsed_result = json.loads(result)\n","                    print(\"Structured output:\")\n","                    print(json.dumps(parsed_result, indent=2))\n","                except json.JSONDecodeError:\n","                    print(\"The output is not in valid JSON format. Displaying as raw text.\")\n","            except Exception as e:\n","                print(f\"Error processing {filename}: {str(e)}\")\n","        else:\n","            print(f\"Skipping {filename}: Unsupported file type\")\n","\n","if __name__ == '__main__':\n","    main()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":39037,"status":"ok","timestamp":1721338777535,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"ZxPU27apxsNP","outputId":"d3b9d344-5fff-4761-ac13-3a42375a7200"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:89: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d4b2b25a809b4245bc8319b8784f3f52","version_major":2,"version_minor":0},"text/plain":["Downloading readme:   0%|          | 0.00/782 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"81eecadfbb7b454aafe6cf50babf35ab","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/249M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"da25db9a32734921ac37a81732bc7ac4","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/18.8M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7a6edc1bdd914c5b9c01ff7fab84a18c","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/14.1M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b4aafd4bfd934c9a944327b51e39da04","version_major":2,"version_minor":0},"text/plain":["Generating train split:   0%|          | 0/2043 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8c160140e64d4995ba44a0cbb97e6ee9","version_major":2,"version_minor":0},"text/plain":["Generating test split:   0%|          | 0/125 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"05fa40383a764f2aa18f120c9b2377bb","version_major":2,"version_minor":0},"text/plain":["Generating valid split:   0%|          | 0/70 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Dataset: mychen76/invoices-and-receipts_ocr_v1\n","Available splits: dict_keys(['train', 'test', 'valid'])\n","\n","Analyzing train split:\n","Number of samples: 2043\n","Features: {'image': Image(mode=None, decode=True, id=None), 'id': Value(dtype='string', id=None), 'parsed_data': Value(dtype='string', id=None), 'raw_data': Value(dtype='string', id=None)}\n","\n","Raw Data Statistics:\n","Average raw data length: 9449.28 characters\n","Average OCR word count: 621.71 words\n","\n","Parsed Data Statistics:\n","Common fields:\n","  xml: 2043 occurrences\n","  json: 2043 occurrences\n","  kie: 2043 occurrences\n","\n","Unique vendor names: 1\n","Top 5 vendor names:\n","  Unknown: 2043 occurrences\n","\n","Unique currency types: 1\n","  Unknown: 2043 occurrences\n","\n","Invoice Amount Statistics:\n","count    2043.0\n","mean        0.0\n","std         0.0\n","min         0.0\n","25%         0.0\n","50%         0.0\n","75%         0.0\n","max         0.0\n","Name: Amount, dtype: float64\n","\n","Analyzing test split:\n","Number of samples: 125\n","Features: {'image': Image(mode=None, decode=True, id=None), 'id': Value(dtype='string', id=None), 'parsed_data': Value(dtype='string', id=None), 'raw_data': Value(dtype='string', id=None)}\n","\n","Raw Data Statistics:\n","Average raw data length: 9480.92 characters\n","Average OCR word count: 622.39 words\n","\n","Parsed Data Statistics:\n","Common fields:\n","  xml: 125 occurrences\n","  json: 125 occurrences\n","  kie: 125 occurrences\n","\n","Unique vendor names: 1\n","Top 5 vendor names:\n","  Unknown: 125 occurrences\n","\n","Unique currency types: 1\n","  Unknown: 125 occurrences\n","\n","Invoice Amount Statistics:\n","count    125.0\n","mean       0.0\n","std        0.0\n","min        0.0\n","25%        0.0\n","50%        0.0\n","75%        0.0\n","max        0.0\n","Name: Amount, dtype: float64\n","\n","Analyzing valid split:\n","Number of samples: 70\n","Features: {'image': Image(mode=None, decode=True, id=None), 'id': Value(dtype='string', id=None), 'parsed_data': Value(dtype='string', id=None), 'raw_data': Value(dtype='string', id=None)}\n","\n","Raw Data Statistics:\n","Average raw data length: 9614.14 characters\n","Average OCR word count: 904.67 words\n","\n","Parsed Data Statistics:\n","Common fields:\n","  xml: 70 occurrences\n","  json: 70 occurrences\n","  kie: 70 occurrences\n","\n","Unique vendor names: 1\n","Top 5 vendor names:\n","  Unknown: 70 occurrences\n","\n","Unique currency types: 1\n","  Unknown: 70 occurrences\n","\n","Invoice Amount Statistics:\n","count    70.0\n","mean      0.0\n","std       0.0\n","min       0.0\n","25%       0.0\n","50%       0.0\n","75%       0.0\n","max       0.0\n","Name: Amount, dtype: float64\n"]}],"source":["from datasets import load_dataset\n","import json\n","from collections import Counter\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","def analyze_dataset(dataset_name):\n","    # Load the dataset\n","    dataset = load_dataset(dataset_name)\n","\n","    print(f\"Dataset: {dataset_name}\")\n","    print(f\"Available splits: {dataset.keys()}\")\n","\n","    for split in dataset.keys():\n","        print(f\"\\nAnalyzing {split} split:\")\n","        split_data = dataset[split]\n","\n","        # Basic information\n","        print(f\"Number of samples: {len(split_data)}\")\n","        print(f\"Features: {split_data.features}\")\n","\n","        # Analyze raw_data\n","        raw_data_lengths = []\n","        ocr_word_counts = []\n","\n","        # Analyze parsed_data\n","        parsed_fields = Counter()\n","        invoice_amounts = []\n","        vendor_names = Counter()\n","        currency_types = Counter()\n","\n","        for sample in split_data:\n","            raw = json.loads(sample['raw_data'])\n","            parsed = json.loads(sample['parsed_data'])\n","\n","            # Raw data analysis\n","            raw_data_lengths.append(len(json.dumps(raw)))\n","            ocr_word_counts.append(len(raw.get('ocr_words', [])))\n","\n","            # Parsed data analysis\n","            parsed_fields.update(parsed.keys())\n","            invoice_amounts.append(float(parsed.get('total_amount', 0)))\n","            vendor_names[parsed.get('vendor_name', 'Unknown')] += 1\n","            currency_types[parsed.get('currency', 'Unknown')] += 1\n","\n","        # Print raw data statistics\n","        print(\"\\nRaw Data Statistics:\")\n","        print(f\"Average raw data length: {sum(raw_data_lengths) / len(raw_data_lengths):.2f} characters\")\n","        print(f\"Average OCR word count: {sum(ocr_word_counts) / len(ocr_word_counts):.2f} words\")\n","\n","        # Print parsed data statistics\n","        print(\"\\nParsed Data Statistics:\")\n","        print(\"Common fields:\")\n","        for field, count in parsed_fields.most_common():\n","            print(f\"  {field}: {count} occurrences\")\n","\n","        print(f\"\\nUnique vendor names: {len(vendor_names)}\")\n","        print(\"Top 5 vendor names:\")\n","        for vendor, count in vendor_names.most_common(5):\n","            print(f\"  {vendor}: {count} occurrences\")\n","\n","        print(f\"\\nUnique currency types: {len(currency_types)}\")\n","        for currency, count in currency_types.most_common():\n","            print(f\"  {currency}: {count} occurrences\")\n","\n","        # Invoice amount statistics\n","        df = pd.DataFrame(invoice_amounts, columns=['Amount'])\n","        print(\"\\nInvoice Amount Statistics:\")\n","        print(df['Amount'].describe())\n","\n","        # Visualizations\n","        plt.figure(figsize=(10, 6))\n","        plt.hist(invoice_amounts, bins=50)\n","        plt.title(f'Distribution of Invoice Amounts ({split} split)')\n","        plt.xlabel('Amount')\n","        plt.ylabel('Frequency')\n","        plt.savefig(f'invoice_amounts_{split}.png')\n","        plt.close()\n","\n","        plt.figure(figsize=(10, 6))\n","        plt.hist(ocr_word_counts, bins=50)\n","        plt.title(f'Distribution of OCR Word Counts ({split} split)')\n","        plt.xlabel('Word Count')\n","        plt.ylabel('Frequency')\n","        plt.savefig(f'ocr_word_counts_{split}.png')\n","        plt.close()\n","\n","# Run the analysis\n","analyze_dataset(\"mychen76/invoices-and-receipts_ocr_v1\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1040,"status":"ok","timestamp":1721338866870,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"dncuCYVpyqLV","outputId":"c1bcf2ee-1964-4a3c-815a-5fb650fdef14"},"outputs":[{"name":"stdout","output_type":"stream","text":["\n","Inspecting 3 samples from train split:\n","\n","--- Sample ---\n","ID: 834\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['740.RIVERSIDE ', 'ROCKF8.L.61103', 'DATE', '01/02/2017', 'NON', '29X', '01.49', 'SHES1', '1.09', '$43.21', '2X', 'CANDY', '12.18', '3X', '01.00', '100', '$3.00', '50X', '0.99', '25+POUNDS1', '$49.50', 'LARGE TEMS 1', '$0.99', 'TAX1ANT', '$8.16', 'TOTAL', '$107.04', 'CREDIT CARD', '$107.04', 'SALE', '$107.04', '.****.*.0578', 'APP004554', 'REF00000000', 'REC50', 'ORDE023S', 'NO.004938RE002GY', 'TINE18']\",\n","  \"ocr_boxes\": \"[[[[121.0, 23.0], [206.0, 28.0], [205.0, 42.0], [120.0, ...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\u003cs_receipt\u003e\u003cs_total\u003e$107.04\u003c/s_total\u003e\u003cs_tips\u003e\u003c/s_tips\u003e\u003cs_time\u003e\u003c/s_time\u003e\u003cs_telephone\u003e\u003c/s_telephone\u003e\u003cs_tax\u003e$8.16\u003c/s_tax\u003e\u003cs_subtotal\u003e\u003c/s_subtotal\u003e\u003cs_store_name\u003eGOODWILLOUTLETSTORE\u003c/s_store_name\u003e\u003cs_store_addr\u003e\u003c/s_store_addr\u003e\u003cs_line_items\u003e\u003cs_item_value\u003e$43.21\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eSHOEST1\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/s_item_key\u003e\u003csep/\u003e\u003cs_item_value\u003e$2.18\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eCANDYT1\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/...\n","\n","--- Sample ---\n","ID: 54\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['Pzza Ht India', 'Sapphire Hosptality and Rocreat', 'A nit o', 'N.PVT LTDTriCopexKr indcor', 'Stadius.Ghod dhod roadSurat', '31095 Laichend', 'Tb120/1', 'Chk1529', 'Gst 2', 'Customer/1529', \\\"Nay31'1709:19PN\\\", 'Dine In', '1 68 Chi1i Dheese', 'R.K', '76Z39924280ustorer', '129.00', '139.00', '1CrofMushrun', '671.00', 'VegieSuprene', 'Dont Cook We', '50%', 'Dont Cook Ne', '335.50-', 'Sub Tota', '603.50', 'Srv Charge', '60.35', 'SrTKCs5.0%', '36.12', 'SBCess0.2%In', '1.25', 'Tota...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\u003cs_receipt\u003e\u003cs_total\u003e664.00\u003c/s_total\u003e\u003cs_tips\u003e\u003c/s_tips\u003e\u003cs_time\u003e09:19PM\u003c/s_time\u003e\u003cs_telephone\u003e\u003c/s_telephone\u003e\u003cs_tax\u003e1.25 36.12\u003c/s_tax\u003e\u003cs_subtotal\u003e603.50\u003c/s_subtotal\u003e\u003cs_store_name\u003ePizzaHutIndia\u003c/s_store_name\u003e\u003cs_store_addr\u003eStadium.Ghoddhodroad,Surat N,PVTLTD.TriDomplex.NrIndoor SapphireHospitalityandRecreat\u003c/s_store_addr\u003e\u003cs_line_items\u003e\u003cs_item_value\u003e671.00\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eMedCheeseMaxx\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/s_item_key\u003e\u003csep/\u003e\u003cs_item_value\u003e12...\n","\n","--- Sample ---\n","ID: 210\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['Invoice no: 60050779', 'Date of issue:', '08/10/2020', 'Client:', 'Seller:', 'Phillips-Bradford', 'Garcia-Olson', '0917 Whitehead Fords Apt. 953', '8510 Romero Isle Apt. 679', 'North Lauriemouth, HI 69746', 'Candiceborough, NH 46744', 'Tax Id: 995-76-9384', 'Tax Id: 941-83-5191', 'IBAN: GB46UUZU91627212711325', 'ITEMS', 'No.', 'Description', 'Qty', 'UM', 'Net price', 'Net worth', 'VAT [%]', 'Gross', ' worth', '19,99', '10%', 'Joma Boys Youth Gol-102', '3,00', 'each', '59,97',...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\",\n","  \"json\": \"{'header': {'invoice_no': '60050779', 'invoice_date': '08/10/2020', 'seller': 'Garcia-Olson 0917 Whitehead Fords Apt. 953 North Lauriemouth, HI 69746', 'client': 'Phillps-Bradford 8510 Romero Isle Apt. 679 Candiceborough, NH 46744', 'seller_tax_id': '995-76-9384', 'client_tax_id': '941-83-5191', 'iban': 'GB46UUZU91627212711325'}, 'items': [{'item_desc': 'Joma Boys Youth Gol-102 Soccer Cleats Shoes Size 4 White Red Futbol NEW', 'item_qty': '3,00', 'item_net_price': '19,9...\n","\n","Inspecting 3 samples from test split:\n","\n","--- Sample ---\n","ID: 32\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['57EXPRESS', '3111W TEMPLE AUE', 'POMONA', 'CA', '03/08/2015', 'INVOICE', 'AUTH', 'REF', 'PUMP#', '7', 'REGULAR', '15.863G', 'PRICE/GAL', '3.479', 'FUELTOTAL', '$', '55.19', 'Ultimate', '$', '10.56', 'Total=$', '65.19', 'CREDIT', '$', '65.19', 'BatchSeq Num', 'Term ID:7', 'ZIP ENTERED', 'Workstation ID:00', 'WANT FREE GAS?', 'REGISTER TO WIN AT', 'WWW.GASVISIT.COM', '****', 'Your car wash', 'codeis661760', 'Expires4/07/2015', '*******']\",\n","  \"ocr_boxes\": \"[[[[55.0, 33.0], [247....\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\u003cs_receipt\u003e\u003cs_total\u003e$65.19 $65.19\u003c/s_total\u003e\u003cs_tips\u003e\u003c/s_tips\u003e\u003cs_time\u003e\u003c/s_time\u003e\u003cs_telephone\u003e\u003c/s_telephone\u003e\u003cs_tax\u003e\u003c/s_tax\u003e\u003cs_subtotal\u003e\u003c/s_subtotal\u003e\u003cs_store_name\u003e57EXPRESS\u003c/s_store_name\u003e\u003cs_store_addr\u003e3111WTEMPLEAVE POMONA,CA\u003c/s_store_addr\u003e\u003cs_line_items\u003e\u003cs_item_value\u003e3.479\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eREGULAR\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/s_item_key\u003e\u003csep/\u003e\u003cs_item_value\u003e$55.19\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003e\u003c/s_item_name\u003e\u003cs_ite...\n","\n","--- Sample ---\n","ID: 87\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['SUPERMARKET', '2000 AVONDALE DR', 'DURHAMN.C.27704 Te1919220-9638', '****************************************', 'PRODUCE', '1YELLOW ONIONS', '0.99TFW', '1 PEPPER GREEN', '0.56TFW', '0.71 1bs @0.791b TW 0.01', '1CALABAZA TROPICAL', '1.66TFW', '1.291bs @1.291b TW 0.01', '3ORANGESFLORIDA', '0.59TFW', '0.20EA5 FOR', '0.99', '2GRAPEFRUITLARGE', '1.38TFW', '200.69EA', '2 TANGERINES', '0.49TFW', '0.25 EA 4 FOR', '0.99', 'Number of Items 10', 'SUBTOTAL', '5.67', 'TAX1', '0.11', 'TOTA...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\u003cs_receipt\u003e\u003cs_total\u003e5.78\u003c/s_total\u003e\u003cs_tips\u003e\u003c/s_tips\u003e\u003cs_time\u003e\u003c/s_time\u003e\u003cs_telephone\u003e(919)220-9638\u003c/s_telephone\u003e\u003cs_tax\u003e0.11\u003c/s_tax\u003e\u003cs_subtotal\u003e5.67\u003c/s_subtotal\u003e\u003cs_store_name\u003eSUPERMARKET\u003c/s_store_name\u003e\u003cs_store_addr\u003e2000AVONDALEDR DURHAM,N.C.27704\u003c/s_store_addr\u003e\u003cs_line_items\u003e\u003cs_item_value\u003e0.99\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eYELLOWONIONS\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/s_item_key\u003e\u003csep/\u003e\u003cs_item_value\u003e0.56\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_na...\n","\n","--- Sample ---\n","ID: 68\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['MGR', 'IGA LEFEBVRE ET FILLES', 'Tel514S33-0995', 'Le Jour de la lerce recevra 1 mi llion$', 'grace a vous et v3s sacs reutilisables', 'Servi par: Sabrina', 'Nunero certe mamore', 'EPTCERIE', 'OEPSENS TORTILAS', '$2.29', 'OEP TORTILLAS FAR GR', '$2.', '29', 'NAT BOISS SOYA ORIG', '$1', '99', 'NAT SOYA CHOC SGLU', '$1.', '99', 'NAT BOISS SOYA ORIG', '$1.', '.99', 'NAT SOYA CHOC SG_UT', '$1.99', 'NAT BOISS SOYA DRIG', '$1.99', 'NAT BOISS SOYA ORIG', '$1.99', 'EPAS', '$1.99', ' ...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\u003cs_receipt\u003e\u003cs_total\u003e$16.52\u003c/s_total\u003e\u003cs_tips\u003e\u003c/s_tips\u003e\u003cs_time\u003e\u003c/s_time\u003e\u003cs_telephone\u003e(514)933-0995\u003c/s_telephone\u003e\u003cs_tax\u003e$0.00\u003c/s_tax\u003e\u003cs_subtotal\u003e$16.52\u003c/s_subtotal\u003e\u003cs_store_name\u003eIGA IGALEFEBVREETFILLES\u003c/s_store_name\u003e\u003cs_store_addr\u003e\u003c/s_store_addr\u003e\u003cs_line_items\u003e\u003cs_item_value\u003e$2.29\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eOEPSENSTORTILAS\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/s_item_key\u003e\u003csep/\u003e\u003cs_item_value\u003e$2.29\u003c/s_item_value\u003e\u003cs_item_quantity\u003e1\u003c/s_item_quantity\u003e\u003cs_item_name\u003eOEPTOR...\n","\n","Inspecting 3 samples from valid split:\n","\n","--- Sample ---\n","ID: 487\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['Invoice no: 26307902', 'Date of issue:', '10/05/2015', 'Seller:', 'Client:', 'Moore Ltd', 'Johnson, Harvey and Richardson', '991 Ross Haven', 'Unit 2967 Box 1105', 'Brianhaven, AZ 93880', 'DPO AA 07073', 'Tax Id: 931-79-6223', 'Tax Id: 905-87-6840', 'IBAN: GB51QDVL39960591238910', 'ITEMS', 'No.', 'Description', 'Qty', 'UM', 'Net price', 'Net worth', 'VAT [%]', 'Gross', ' worth', 'Wine Bottle Opener Corkscrew', '4,00', 'each', '8,65', '34,60', '10%', '38,06', 'Set RED 5 pc Sto...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\",\n","  \"json\": \"{'header': {'invoice_no': '26307902', 'invoice_date': '10/05/2015', 'seller': 'Moore Ltd 991 Ross Haven Brianhaven, AZ 93880', 'client': 'Johnson, Harvey and Richardson Unit 2967 Box 1105 DPO AA 07073', 'seller_tax_id': '931-79-6223', 'client_tax_id': '905-87-6840', 'iban': 'GB51QDVL39960591238910'}, 'items': [{'item_desc': 'Wine Bottle Opener Corkscrew Set RED 5 pc Stopper Pourer Foil Cutter Bottle', 'item_qty': '4,00', 'item_net_price': '8,65', 'item_net_worth': '34,6...\n","\n","--- Sample ---\n","ID: 2\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['Custoner-actavates Purcnase/Capture', 'Sequence Mber 11251', 'Seipeo', 'AFPROVED 868158', 'pume3', 'HATOFFS GAS1', '3440 WASHINGTON ST', '617-318-1141', 'JAMICA PLAINMA', '02130', '10/26/2018', '09:47:16PM', 'PREPAID RECEIPT', 'PUMP#3', '2.516G', 'REGULAR CA', 'PRICE/GAL', '$2.659', 'FUEL TOTAL', '$', '6.69', 'FINAL PURCHASE', 'AMOUNT RECEIPT WITH', 'FULL TRANSACTION', 'DETAIL AVAILABLE', 'INSIDE']\",\n","  \"ocr_boxes\": \"[[[[218.0, 152.0], [399.0, 138.0], [400.0, 156.0], [219.0, 1...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\u003cs_receipt\u003e\u003cs_total\u003e$6.69\u003c/s_total\u003e\u003cs_tips\u003e\u003c/s_tips\u003e\u003cs_time\u003e09:47:16PM\u003c/s_time\u003e\u003cs_telephone\u003e617-318-1141\u003c/s_telephone\u003e\u003cs_tax\u003e\u003c/s_tax\u003e\u003cs_subtotal\u003e\u003c/s_subtotal\u003e\u003cs_store_name\u003eHATOFF'SGAS,1\u003c/s_store_name\u003e\u003cs_store_addr\u003e3440WASHINGTONST JAMICAPLAIN,MA 02130\u003c/s_store_addr\u003e\u003cs_line_items\u003e\u003cs_item_value\u003e\u003c/s_item_value\u003e\u003cs_item_quantity\u003e\u003c/s_item_quantity\u003e\u003cs_item_name\u003eREGULARCA\u003c/s_item_name\u003e\u003cs_item_key\u003e\u003c/s_item_key\u003e\u003c/s_line_items\u003e\u003cs_ignore\u003e   \u003c/s_ignore\u003e\u003cs_date\u003e10/26/2018\u003c/s_date\u003e\u003c/s_receipt\u003e\",\n","  ...\n","\n","--- Sample ---\n","ID: 466\n","\n","Raw Data (first 500 characters):\n","{\n","  \"ocr_words\": \"['Invoice no: 65095335', 'Date of issue:', '02/15/2017', 'Seller:', 'Client:', 'Payne-Davis', 'Flores LLC', '2065 Joshua Via', '45998 Lance Shores', 'Lake Chadmouth, TX 15224', 'Martinchester, NH 74633', 'Tax Id: 963-77-0670', 'Tax Id: 946-95-4678', 'IBAN: GB82ORRJ16785128958323', 'ITEMS', 'No.', 'Description', 'Qty', 'UM', 'Net price', 'Net worth', 'VAT [%]', 'Gross', ' worth', '600,00', '10%', '1,00', '600,00', '660,00', '1', '15\\\"x15\\\" White Marble Chess', 'each', 'Top Table...\n","\n","Parsed Data (first 500 characters):\n","{\n","  \"xml\": \"\",\n","  \"json\": \"{'header': {'invoice_no': '65095335', 'invoice_date': '02/15/2017', 'seller': 'Payne-Davis 2065 Joshua Via Lake Chadmouth, TX 15224', 'client': 'Flores LLC 45998 Lance Shores Martinchester, NH 74633', 'seller_tax_id': '963-77-0670', 'client_tax_id': '946-95-4678', 'iban': 'GB82ORRJ16785128958323'}, 'items': [{'item_desc': '15\\\"x15\\\" White Marble Chess Top Table Carnelian Inlay Art Black Friday Gift Deco', 'item_qty': '1,00', 'item_net_price': '600,00', 'item_net_worth':...\n"]}],"source":["from datasets import load_dataset\n","import json\n","import random\n","\n","def inspect_samples(dataset_name, num_samples=3):\n","    dataset = load_dataset(dataset_name)\n","\n","    for split in dataset.keys():\n","        print(f\"\\nInspecting {num_samples} samples from {split} split:\")\n","        split_data = dataset[split]\n","\n","        for _ in range(num_samples):\n","            sample = random.choice(split_data)\n","\n","            print(\"\\n--- Sample ---\")\n","            print(f\"ID: {sample['id']}\")\n","\n","            print(\"\\nRaw Data (first 500 characters):\")\n","            raw_data = json.loads(sample['raw_data'])\n","            print(json.dumps(raw_data, indent=2)[:500] + \"...\")\n","\n","            print(\"\\nParsed Data (first 500 characters):\")\n","            parsed_data = json.loads(sample['parsed_data'])\n","            print(json.dumps(parsed_data, indent=2)[:500] + \"...\")\n","\n","            # Optionally, you can save and display the image\n","            # image = sample['image']\n","            # image.save(f\"sample_image_{sample['id']}.jpg\")\n","            # print(f\"Image saved as sample_image_{sample['id']}.jpg\")\n","\n","# Inspect samples\n","inspect_samples(\"mychen76/invoices-and-receipts_ocr_v1\")"]},{"cell_type":"markdown","metadata":{"id":"Hk3T4ILEx_Wk"},"source":["# 7B model finetuning"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":42838,"status":"ok","timestamp":1721586364945,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"3B37LIrEyFYZ","outputId":"949809c1-7b69-4ff7-ba42-5740ecb31d92"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["import os\n","import json\n","import torch\n","import time\n","from transformers import AutoTokenizer, AutoModelForCausalLM, TrainingArguments, Trainer, BitsAndBytesConfig\n","from transformers.trainer_utils import get_last_checkpoint\n","from transformers.trainer_callback import TrainerCallback\n","from datasets import load_dataset\n","from peft import LoraConfig, get_peft_model, prepare_model_for_kbit_training\n","import bitsandbytes as bnb\n","from google.colab import drive\n","import logging\n","import sys\n","\n","# Set up logging\n","logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')\n","logger = logging.getLogger(__name__)\n","\n","# Mount Google Drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l_wMX9-T2S5e"},"outputs":[],"source":["# Configuration\n","MODEL_NAME = \"databricks/dolly-v2-7b\"\n","DATASET_NAME = \"mychen76/invoices-and-receipts_ocr_v1\"\n","PROJECT_NAME = \"invoice_processing_using_Dolly_7B\"\n","OUTPUT_DIR = f\"/content/drive/MyDrive/{PROJECT_NAME}/results\"\n","LOCAL_OUTPUT_DIR = f\"/content/{PROJECT_NAME}/results\"\n","CHECKPOINTS_DIR = os.path.join(OUTPUT_DIR, \"checkpoints\")\n","LOCAL_CHECKPOINTS_DIR = os.path.join(LOCAL_OUTPUT_DIR, \"checkpoints\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":255},"executionInfo":{"elapsed":4568,"status":"ok","timestamp":1721400189503,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"a-mzc9eb2cjO","outputId":"e301a36c-a348-4f81-bcb8-6930af91bde3"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:89: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"3021a76779974aa09a23bceaaceb87b2","version_major":2,"version_minor":0},"text/plain":["tokenizer_config.json:   0%|          | 0.00/450 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"b828cbc2a5034e469e202341cd4c3cbf","version_major":2,"version_minor":0},"text/plain":["tokenizer.json:   0%|          | 0.00/2.11M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8a23b27b40de4faca3f058f4a847ac61","version_major":2,"version_minor":0},"text/plain":["special_tokens_map.json:   0%|          | 0.00/228 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]}],"source":["# Ensure directories exist\n","for directory in [OUTPUT_DIR, LOCAL_OUTPUT_DIR, CHECKPOINTS_DIR, LOCAL_CHECKPOINTS_DIR]:\n","    os.makedirs(directory, exist_ok=True)\n","    logger.info(f\"Directory created: {directory}\")\n","\n","class TimeEstimationCallback(TrainerCallback):\n","    def __init__(self, total_steps):\n","        self.total_steps = total_steps\n","        self.start_time = None\n","        self.step_times = []\n","\n","    def on_train_begin(self, args, state, control, **kwargs):\n","        self.start_time = time.time()\n","\n","    def on_step_end(self, args, state, control, **kwargs):\n","        if state.global_step \u003e 0:\n","            step_time = (time.time() - self.start_time) / state.global_step\n","            self.step_times.append(step_time)\n","            if len(self.step_times) \u003e 10:\n","                self.step_times.pop(0)\n","            avg_step_time = sum(self.step_times) / len(self.step_times)\n","            remaining_steps = self.total_steps - state.global_step\n","            estimated_time = remaining_steps * avg_step_time / 3600  # in hours\n","            logger.info(f\"Step {state.global_step}/{self.total_steps}\")\n","            logger.info(f\"Estimated remaining time: {estimated_time:.2f} hours\")\n","\n","def preprocess_function(examples):\n","    inputs = []\n","    targets = []\n","    for raw_data, parsed_data in zip(examples['raw_data'], examples['parsed_data']):\n","        raw_data = json.loads(raw_data) if isinstance(raw_data, str) else raw_data\n","        parsed_data = json.loads(parsed_data) if isinstance(parsed_data, str) else parsed_data\n","        ocr_text = ' '.join(raw_data['ocr_words']) if 'ocr_words' in raw_data else \"\"\n","        parsed_json = json.dumps(parsed_data)\n","        input_text = f\"Extract information from this invoice:\\n{ocr_text}\\n\\nExtracted information:\"\n","        target_text = parsed_json\n","        inputs.append(input_text)\n","        targets.append(target_text)\n","\n","    # Tokenize inputs\n","    model_inputs = tokenizer(\n","        inputs,\n","        max_length=1024,\n","        padding=\"max_length\",\n","        truncation=True,\n","        return_tensors=\"pt\"\n","    )\n","\n","    # Tokenize targets\n","    with tokenizer.as_target_tokenizer():\n","        labels = tokenizer(\n","            targets,\n","            max_length=1024,\n","            padding=\"max_length\",\n","            truncation=True,\n","            return_tensors=\"pt\"\n","        )\n","\n","    # Ensure labels are properly formatted\n","    model_inputs[\"labels\"] = labels[\"input_ids\"]\n","    model_inputs[\"labels\"][labels[\"input_ids\"] == tokenizer.pad_token_id] = -100\n","\n","    return model_inputs\n","\n","# Initialize tokenizer\n","tokenizer = AutoTokenizer.from_pretrained(\"databricks/dolly-v2-7b\")\n","tokenizer.pad_token = tokenizer.eos_token\n","\n","def load_model_and_tokenizer():\n","    logger.info(f\"Loading model: {MODEL_NAME}\")\n","\n","    # 8-bit quantization configuration\n","    quantization_config = BitsAndBytesConfig(\n","        load_in_8bit=True,\n","        llm_int8_threshold=6.0,\n","        llm_int8_has_fp16_weight=False,\n","    )\n","\n","    # Load the model with 8-bit quantization\n","    model = AutoModelForCausalLM.from_pretrained(\n","        MODEL_NAME,\n","        quantization_config=quantization_config,\n","        device_map=\"auto\",\n","        torch_dtype=torch.float16,\n","        use_cache=False\n","    )\n","\n","    model = prepare_model_for_kbit_training(model)\n","\n","    logger.info(\"Applying LoRA\")\n","    lora_config = LoraConfig(\n","        r=16,\n","        lora_alpha=32,\n","        target_modules=[\"query_key_value\"],\n","        lora_dropout=0.05,\n","        bias=\"none\",\n","        task_type=\"CAUSAL_LM\"\n","    )\n","    model = get_peft_model(model, lora_config)\n","\n","    tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)\n","    tokenizer.pad_token = tokenizer.eos_token\n","\n","    return model, tokenizer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"76oDUYcu3nCQ"},"outputs":[],"source":["def train_model(model, tokenizer, dataset):\n","    logger.info(\"Preparing training arguments\")\n","    training_args = TrainingArguments(\n","        output_dir=CHECKPOINTS_DIR,\n","        num_train_epochs=3,\n","        per_device_train_batch_size=1,\n","        gradient_accumulation_steps=16,\n","        learning_rate=2e-5,\n","        fp16=True,\n","        save_steps=100,\n","        logging_steps=10,\n","        evaluation_strategy=\"steps\",\n","        eval_steps=100,\n","        save_total_limit=3,\n","        load_best_model_at_end=True,\n","        report_to=\"tensorboard\",\n","        remove_unused_columns=False,\n","        optim=\"paged_adamw_8bit\"  # Use 8-bit optimizer\n","    )\n","\n","    logger.info(\"Initializing Trainer\")\n","    trainer = Trainer(\n","        model=model,\n","        args=training_args,\n","        train_dataset=dataset[\"train\"],\n","        eval_dataset=dataset[\"valid\"],\n","    )\n","\n","    logger.info(\"Starting training\")\n","    try:\n","        trainer.train(resume_from_checkpoint=get_last_checkpoint(CHECKPOINTS_DIR))\n","    except Exception as e:\n","        logger.error(f\"Error during training: {str(e)}\")\n","        logger.error(\"Printing additional debug information:\")\n","        logger.error(f\"Train dataset size: {len(dataset['train'])}\")\n","        logger.error(f\"Eval dataset size: {len(dataset['valid'])}\")\n","        sample_input = dataset['train'][0]\n","        logger.error(f\"Sample input: {sample_input}\")\n","        logger.error(f\"Input shape: {[len(v) for k, v in sample_input.items() if isinstance(v, list)]}\")\n","        raise  # Re-raise the exception for full traceback\n","\n","    return trainer\n","\n","def save_model(trainer, tokenizer):\n","    logger.info(\"Saving model\")\n","    try:\n","        trainer.save_model(OUTPUT_DIR)\n","        tokenizer.save_pretrained(OUTPUT_DIR)\n","        logger.info(f\"Model saved to Google Drive: {OUTPUT_DIR}\")\n","    except Exception as e:\n","        logger.warning(f\"Failed to save model to Google Drive: {str(e)}\")\n","        try:\n","            trainer.save_model(LOCAL_OUTPUT_DIR)\n","            tokenizer.save_pretrained(LOCAL_OUTPUT_DIR)\n","            logger.info(f\"Model saved locally: {LOCAL_OUTPUT_DIR}\")\n","        except Exception as e:\n","            logger.error(f\"Failed to save model locally: {str(e)}\")\n","            sys.exit(1)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":888,"status":"ok","timestamp":1721341320834,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"wZ8BfVXh7xiF","outputId":"e193da0a-42bf-4ddd-f920-77658fc7b5ae"},"outputs":[{"name":"stdout","output_type":"stream","text":[" :  PeftModelForCausalLM(\n","  (base_model): LoraModel(\n","    (model): GPTNeoXForCausalLM(\n","      (gpt_neox): GPTNeoXModel(\n","        (embed_in): Embedding(50280, 4096)\n","        (emb_dropout): Dropout(p=0.0, inplace=False)\n","        (layers): ModuleList(\n","          (0-31): 32 x GPTNeoXLayer(\n","            (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","            (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","            (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","            (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","            (attention): GPTNeoXSdpaAttention(\n","              (rotary_emb): GPTNeoXRotaryEmbedding()\n","              (query_key_value): lora.Linear4bit(\n","                (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","                (lora_dropout): ModuleDict(\n","                  (default): Dropout(p=0.05, inplace=False)\n","                )\n","                (lora_A): ModuleDict(\n","                  (default): Linear(in_features=4096, out_features=16, bias=False)\n","                )\n","                (lora_B): ModuleDict(\n","                  (default): Linear(in_features=16, out_features=12288, bias=False)\n","                )\n","                (lora_embedding_A): ParameterDict()\n","                (lora_embedding_B): ParameterDict()\n","                (lora_magnitude_vector): ModuleDict()\n","              )\n","              (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","              (attention_dropout): Dropout(p=0.0, inplace=False)\n","            )\n","            (mlp): GPTNeoXMLP(\n","              (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","              (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","              (act): GELUActivation()\n","            )\n","          )\n","        )\n","        (final_layer_norm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","      )\n","      (embed_out): Linear(in_features=4096, out_features=50280, bias=False)\n","    )\n","  )\n",")\n","base_model :  LoraModel(\n","  (model): GPTNeoXForCausalLM(\n","    (gpt_neox): GPTNeoXModel(\n","      (embed_in): Embedding(50280, 4096)\n","      (emb_dropout): Dropout(p=0.0, inplace=False)\n","      (layers): ModuleList(\n","        (0-31): 32 x GPTNeoXLayer(\n","          (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","          (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","          (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","          (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","          (attention): GPTNeoXSdpaAttention(\n","            (rotary_emb): GPTNeoXRotaryEmbedding()\n","            (query_key_value): lora.Linear4bit(\n","              (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","              (lora_dropout): ModuleDict(\n","                (default): Dropout(p=0.05, inplace=False)\n","              )\n","              (lora_A): ModuleDict(\n","                (default): Linear(in_features=4096, out_features=16, bias=False)\n","              )\n","              (lora_B): ModuleDict(\n","                (default): Linear(in_features=16, out_features=12288, bias=False)\n","              )\n","              (lora_embedding_A): ParameterDict()\n","              (lora_embedding_B): ParameterDict()\n","              (lora_magnitude_vector): ModuleDict()\n","            )\n","            (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","            (attention_dropout): Dropout(p=0.0, inplace=False)\n","          )\n","          (mlp): GPTNeoXMLP(\n","            (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","            (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","            (act): GELUActivation()\n","          )\n","        )\n","      )\n","      (final_layer_norm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","    )\n","    (embed_out): Linear(in_features=4096, out_features=50280, bias=False)\n","  )\n",")\n","base_model.model :  GPTNeoXForCausalLM(\n","  (gpt_neox): GPTNeoXModel(\n","    (embed_in): Embedding(50280, 4096)\n","    (emb_dropout): Dropout(p=0.0, inplace=False)\n","    (layers): ModuleList(\n","      (0-31): 32 x GPTNeoXLayer(\n","        (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","        (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","        (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","        (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","        (attention): GPTNeoXSdpaAttention(\n","          (rotary_emb): GPTNeoXRotaryEmbedding()\n","          (query_key_value): lora.Linear4bit(\n","            (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","            (lora_dropout): ModuleDict(\n","              (default): Dropout(p=0.05, inplace=False)\n","            )\n","            (lora_A): ModuleDict(\n","              (default): Linear(in_features=4096, out_features=16, bias=False)\n","            )\n","            (lora_B): ModuleDict(\n","              (default): Linear(in_features=16, out_features=12288, bias=False)\n","            )\n","            (lora_embedding_A): ParameterDict()\n","            (lora_embedding_B): ParameterDict()\n","            (lora_magnitude_vector): ModuleDict()\n","          )\n","          (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","          (attention_dropout): Dropout(p=0.0, inplace=False)\n","        )\n","        (mlp): GPTNeoXMLP(\n","          (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","          (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","          (act): GELUActivation()\n","        )\n","      )\n","    )\n","    (final_layer_norm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  )\n","  (embed_out): Linear(in_features=4096, out_features=50280, bias=False)\n",")\n","base_model.model.gpt_neox :  GPTNeoXModel(\n","  (embed_in): Embedding(50280, 4096)\n","  (emb_dropout): Dropout(p=0.0, inplace=False)\n","  (layers): ModuleList(\n","    (0-31): 32 x GPTNeoXLayer(\n","      (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","      (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","      (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","      (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","      (attention): GPTNeoXSdpaAttention(\n","        (rotary_emb): GPTNeoXRotaryEmbedding()\n","        (query_key_value): lora.Linear4bit(\n","          (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","          (lora_dropout): ModuleDict(\n","            (default): Dropout(p=0.05, inplace=False)\n","          )\n","          (lora_A): ModuleDict(\n","            (default): Linear(in_features=4096, out_features=16, bias=False)\n","          )\n","          (lora_B): ModuleDict(\n","            (default): Linear(in_features=16, out_features=12288, bias=False)\n","          )\n","          (lora_embedding_A): ParameterDict()\n","          (lora_embedding_B): ParameterDict()\n","          (lora_magnitude_vector): ModuleDict()\n","        )\n","        (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","        (attention_dropout): Dropout(p=0.0, inplace=False)\n","      )\n","      (mlp): GPTNeoXMLP(\n","        (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","        (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","        (act): GELUActivation()\n","      )\n","    )\n","  )\n","  (final_layer_norm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n",")\n","base_model.model.gpt_neox.embed_in :  Embedding(50280, 4096)\n","base_model.model.gpt_neox.emb_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers :  ModuleList(\n","  (0-31): 32 x GPTNeoXLayer(\n","    (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","    (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","    (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","    (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","    (attention): GPTNeoXSdpaAttention(\n","      (rotary_emb): GPTNeoXRotaryEmbedding()\n","      (query_key_value): lora.Linear4bit(\n","        (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","        (lora_dropout): ModuleDict(\n","          (default): Dropout(p=0.05, inplace=False)\n","        )\n","        (lora_A): ModuleDict(\n","          (default): Linear(in_features=4096, out_features=16, bias=False)\n","        )\n","        (lora_B): ModuleDict(\n","          (default): Linear(in_features=16, out_features=12288, bias=False)\n","        )\n","        (lora_embedding_A): ParameterDict()\n","        (lora_embedding_B): ParameterDict()\n","        (lora_magnitude_vector): ModuleDict()\n","      )\n","      (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","      (attention_dropout): Dropout(p=0.0, inplace=False)\n","    )\n","    (mlp): GPTNeoXMLP(\n","      (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","      (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","      (act): GELUActivation()\n","    )\n","  )\n",")\n","base_model.model.gpt_neox.layers.0 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.0.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.0.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.0.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.0.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.0.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.0.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.0.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.0.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.0.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.0.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.0.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.0.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.0.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.0.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.1 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.1.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.1.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.1.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.1.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.1.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.1.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.1.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.1.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.1.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.1.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.1.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.1.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.1.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.1.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.2 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.2.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.2.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.2.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.2.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.2.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.2.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.2.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.2.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.2.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.2.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.2.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.2.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.2.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.2.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.3 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.3.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.3.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.3.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.3.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.3.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.3.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.3.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.3.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.3.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.3.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.3.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.3.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.3.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.3.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.4 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.4.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.4.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.4.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.4.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.4.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.4.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.4.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.4.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.4.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.4.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.4.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.4.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.4.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.4.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.5 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.5.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.5.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.5.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.5.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.5.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.5.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.5.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.5.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.5.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.5.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.5.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.5.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.5.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.5.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.6 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.6.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.6.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.6.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.6.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.6.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.6.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.6.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.6.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.6.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.6.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.6.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.6.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.6.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.6.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.7 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.7.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.7.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.7.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.7.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.7.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.7.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.7.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.7.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.7.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.7.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.7.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.7.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.7.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.7.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.8 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.8.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.8.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.8.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.8.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.8.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.8.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.8.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.8.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.8.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.8.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.8.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.8.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.8.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.8.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.9 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.9.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.9.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.9.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.9.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.9.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.9.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.9.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.9.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.9.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.9.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.9.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.9.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.9.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.9.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.10 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.10.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.10.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.10.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.10.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.10.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.10.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.10.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.10.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.10.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.10.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.10.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.10.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.10.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.10.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.11 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.11.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.11.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.11.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.11.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.11.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.11.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.11.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.11.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.11.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.11.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.11.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.11.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.11.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.11.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.12 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.12.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.12.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.12.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.12.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.12.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.12.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.12.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.12.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.12.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.12.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.12.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.12.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.12.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.12.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.13 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.13.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.13.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.13.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.13.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.13.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.13.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.13.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.13.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.13.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.13.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.13.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.13.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.13.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.13.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.14 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.14.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.14.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.14.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.14.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.14.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.14.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.14.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.14.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.14.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.14.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.14.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.14.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.14.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.14.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.15 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.15.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.15.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.15.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.15.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.15.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.15.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.15.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.15.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.15.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.15.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.15.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.15.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.15.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.15.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.16 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.16.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.16.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.16.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.16.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.16.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.16.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.16.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.16.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.16.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.16.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.16.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.16.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.16.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.16.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.17 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.17.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.17.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.17.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.17.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.17.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.17.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.17.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.17.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.17.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.17.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.17.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.17.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.17.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.17.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.18 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.18.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.18.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.18.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.18.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.18.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.18.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.18.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.18.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.18.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.18.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.18.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.18.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.18.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.18.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.19 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.19.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.19.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.19.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.19.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.19.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.19.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.19.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.19.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.19.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.19.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.19.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.19.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.19.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.19.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.20 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.20.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.20.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.20.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.20.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.20.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.20.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.20.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.20.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.20.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.20.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.20.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.20.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.20.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.20.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.21 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.21.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.21.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.21.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.21.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.21.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.21.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.21.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.21.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.21.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.21.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.21.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.21.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.21.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.21.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.22 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.22.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.22.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.22.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.22.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.22.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.22.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.22.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.22.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.22.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.22.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.22.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.22.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.22.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.22.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.23 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.23.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.23.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.23.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.23.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.23.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.23.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.23.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.23.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.23.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.23.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.23.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.23.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.23.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.23.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.24 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.24.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.24.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.24.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.24.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.24.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.24.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.24.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.24.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.24.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.24.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.24.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.24.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.24.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.24.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.25 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.25.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.25.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.25.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.25.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.25.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.25.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.25.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.25.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.25.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.25.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.25.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.25.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.25.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.25.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.26 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.26.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.26.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.26.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.26.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.26.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.26.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.26.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.26.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.26.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.26.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.26.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.26.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.26.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.26.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.27 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.27.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.27.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.27.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.27.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.27.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.27.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.27.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.27.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.27.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.27.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.27.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.27.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.27.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.27.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.28 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.28.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.28.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.28.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.28.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.28.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.28.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.28.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.28.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.28.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.28.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.28.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.28.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.28.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.28.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.29 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.29.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.29.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.29.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.29.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.29.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.29.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.29.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.29.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.29.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.29.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.29.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.29.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.29.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.29.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.30 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.30.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.30.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.30.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.30.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.30.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.30.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.30.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.30.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.30.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.30.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.30.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.30.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.30.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.30.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.layers.31 :  GPTNeoXLayer(\n","  (input_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_layernorm): LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","  (post_attention_dropout): Dropout(p=0.0, inplace=False)\n","  (post_mlp_dropout): Dropout(p=0.0, inplace=False)\n","  (attention): GPTNeoXSdpaAttention(\n","    (rotary_emb): GPTNeoXRotaryEmbedding()\n","    (query_key_value): lora.Linear4bit(\n","      (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","      (lora_dropout): ModuleDict(\n","        (default): Dropout(p=0.05, inplace=False)\n","      )\n","      (lora_A): ModuleDict(\n","        (default): Linear(in_features=4096, out_features=16, bias=False)\n","      )\n","      (lora_B): ModuleDict(\n","        (default): Linear(in_features=16, out_features=12288, bias=False)\n","      )\n","      (lora_embedding_A): ParameterDict()\n","      (lora_embedding_B): ParameterDict()\n","      (lora_magnitude_vector): ModuleDict()\n","    )\n","    (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","    (attention_dropout): Dropout(p=0.0, inplace=False)\n","  )\n","  (mlp): GPTNeoXMLP(\n","    (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","    (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","    (act): GELUActivation()\n","  )\n",")\n","base_model.model.gpt_neox.layers.31.input_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.31.post_attention_layernorm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.gpt_neox.layers.31.post_attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.31.post_mlp_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.31.attention :  GPTNeoXSdpaAttention(\n","  (rotary_emb): GPTNeoXRotaryEmbedding()\n","  (query_key_value): lora.Linear4bit(\n","    (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","    (lora_dropout): ModuleDict(\n","      (default): Dropout(p=0.05, inplace=False)\n","    )\n","    (lora_A): ModuleDict(\n","      (default): Linear(in_features=4096, out_features=16, bias=False)\n","    )\n","    (lora_B): ModuleDict(\n","      (default): Linear(in_features=16, out_features=12288, bias=False)\n","    )\n","    (lora_embedding_A): ParameterDict()\n","    (lora_embedding_B): ParameterDict()\n","    (lora_magnitude_vector): ModuleDict()\n","  )\n","  (dense): Linear4bit(in_features=4096, out_features=4096, bias=True)\n","  (attention_dropout): Dropout(p=0.0, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.31.attention.rotary_emb :  GPTNeoXRotaryEmbedding()\n","base_model.model.gpt_neox.layers.31.attention.query_key_value :  lora.Linear4bit(\n","  (base_layer): Linear4bit(in_features=4096, out_features=12288, bias=True)\n","  (lora_dropout): ModuleDict(\n","    (default): Dropout(p=0.05, inplace=False)\n","  )\n","  (lora_A): ModuleDict(\n","    (default): Linear(in_features=4096, out_features=16, bias=False)\n","  )\n","  (lora_B): ModuleDict(\n","    (default): Linear(in_features=16, out_features=12288, bias=False)\n","  )\n","  (lora_embedding_A): ParameterDict()\n","  (lora_embedding_B): ParameterDict()\n","  (lora_magnitude_vector): ModuleDict()\n",")\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.base_layer :  Linear4bit(in_features=4096, out_features=12288, bias=True)\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_dropout :  ModuleDict(\n","  (default): Dropout(p=0.05, inplace=False)\n",")\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_dropout.default :  Dropout(p=0.05, inplace=False)\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_A :  ModuleDict(\n","  (default): Linear(in_features=4096, out_features=16, bias=False)\n",")\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_A.default :  Linear(in_features=4096, out_features=16, bias=False)\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_B :  ModuleDict(\n","  (default): Linear(in_features=16, out_features=12288, bias=False)\n",")\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_B.default :  Linear(in_features=16, out_features=12288, bias=False)\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_embedding_A :  ParameterDict()\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_embedding_B :  ParameterDict()\n","base_model.model.gpt_neox.layers.31.attention.query_key_value.lora_magnitude_vector :  ModuleDict()\n","base_model.model.gpt_neox.layers.31.attention.dense :  Linear4bit(in_features=4096, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.31.attention.attention_dropout :  Dropout(p=0.0, inplace=False)\n","base_model.model.gpt_neox.layers.31.mlp :  GPTNeoXMLP(\n","  (dense_h_to_4h): Linear4bit(in_features=4096, out_features=16384, bias=True)\n","  (dense_4h_to_h): Linear4bit(in_features=16384, out_features=4096, bias=True)\n","  (act): GELUActivation()\n",")\n","base_model.model.gpt_neox.layers.31.mlp.dense_h_to_4h :  Linear4bit(in_features=4096, out_features=16384, bias=True)\n","base_model.model.gpt_neox.layers.31.mlp.dense_4h_to_h :  Linear4bit(in_features=16384, out_features=4096, bias=True)\n","base_model.model.gpt_neox.layers.31.mlp.act :  GELUActivation()\n","base_model.model.gpt_neox.final_layer_norm :  LayerNorm((4096,), eps=1e-05, elementwise_affine=True)\n","base_model.model.embed_out :  Linear(in_features=4096, out_features=50280, bias=False)\n"]}],"source":["for name, module in model.named_modules():\n","  print(name, \": \", module)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":9674295,"status":"ok","timestamp":1721362990682,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"I_XWP_4l3-vH","outputId":"aa8954f7-cbc4-493e-a56d-80cc140c75cb"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9f3559881ce844168b4427bb910bea56","version_major":2,"version_minor":0},"text/plain":["Downloading readme:   0%|          | 0.00/782 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1a3e6ec6573942a6a1bec9992a1c3368","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/249M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5338ec17eca848bfb8449393702ae833","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/18.8M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"72459209da20432281ee30649efdca98","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/14.1M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cd08260a39ab4c1686db09b1ed4189b2","version_major":2,"version_minor":0},"text/plain":["Generating train split:   0%|          | 0/2043 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"299f755879224c34bfba802eb2195f3c","version_major":2,"version_minor":0},"text/plain":["Generating test split:   0%|          | 0/125 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"1ab26e3f55b1452486da4622b18b6b6f","version_major":2,"version_minor":0},"text/plain":["Generating valid split:   0%|          | 0/70 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"63950c28bed04ccd885eadfada100d2a","version_major":2,"version_minor":0},"text/plain":["config.json:   0%|          | 0.00/819 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"38efac11d6fc453691d481d2dbf6008a","version_major":2,"version_minor":0},"text/plain":["pytorch_model.bin:   0%|          | 0.00/13.8G [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe345c09588b476ca153f6f67cc1e168","version_major":2,"version_minor":0},"text/plain":["Map:   0%|          | 0/2043 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py:4016: UserWarning: `as_target_tokenizer` is deprecated and will be removed in v5 of Transformers. You can tokenize your labels by using the argument `text_target` of the regular `__call__` method (either in the same call as your input texts if you use the same keyword arguments, or in a separate call.\n","  warnings.warn(\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"ebde60f4f4834c0e9f3b6fa31c69b25b","version_major":2,"version_minor":0},"text/plain":["Map:   0%|          | 0/125 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"75b09c8780354b4b88673fb5c6ef7bd4","version_major":2,"version_minor":0},"text/plain":["Map:   0%|          | 0/70 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/transformers/training_args.py:1494: FutureWarning: `evaluation_strategy` is deprecated and will be removed in version 4.46 of 🤗 Transformers. Use `eval_strategy` instead\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/bitsandbytes/autograd/_functions.py:316: UserWarning: MatMul8bitLt: inputs will be cast from torch.float32 to float16 during quantization\n","  warnings.warn(f\"MatMul8bitLt: inputs will be cast from {A.dtype} to float16 during quantization\")\n"]},{"data":{"text/html":["\n","    \u003cdiv\u003e\n","      \n","      \u003cprogress value='171' max='381' style='width:300px; height:20px; vertical-align: middle;'\u003e\u003c/progress\u003e\n","      [171/381 2:09:36 \u003c 2:41:02, 0.02 it/s, Epoch 1.33/3]\n","    \u003c/div\u003e\n","    \u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n"," \u003ctr style=\"text-align: left;\"\u003e\n","      \u003cth\u003eStep\u003c/th\u003e\n","      \u003cth\u003eTraining Loss\u003c/th\u003e\n","      \u003cth\u003eValidation Loss\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e5.369800\u003c/td\u003e\n","      \u003ctd\u003e5.793581\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\u003cp\u003e"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/bitsandbytes/autograd/_functions.py:316: UserWarning: MatMul8bitLt: inputs will be cast from torch.float32 to float16 during quantization\n","  warnings.warn(f\"MatMul8bitLt: inputs will be cast from {A.dtype} to float16 during quantization\")\n"]},{"data":{"text/html":["\n","    \u003cdiv\u003e\n","      \n","      \u003cprogress value='381' max='381' style='width:300px; height:20px; vertical-align: middle;'\u003e\u003c/progress\u003e\n","      [381/381 4:51:17, Epoch 2/3]\n","    \u003c/div\u003e\n","    \u003ctable border=\"1\" class=\"dataframe\"\u003e\n","  \u003cthead\u003e\n"," \u003ctr style=\"text-align: left;\"\u003e\n","      \u003cth\u003eStep\u003c/th\u003e\n","      \u003cth\u003eTraining Loss\u003c/th\u003e\n","      \u003cth\u003eValidation Loss\u003c/th\u003e\n","    \u003c/tr\u003e\n","  \u003c/thead\u003e\n","  \u003ctbody\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e100\u003c/td\u003e\n","      \u003ctd\u003e5.369800\u003c/td\u003e\n","      \u003ctd\u003e5.793581\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e200\u003c/td\u003e\n","      \u003ctd\u003e4.742400\u003c/td\u003e\n","      \u003ctd\u003e5.113036\u003c/td\u003e\n","    \u003c/tr\u003e\n","    \u003ctr\u003e\n","      \u003ctd\u003e300\u003c/td\u003e\n","      \u003ctd\u003e4.529200\u003c/td\u003e\n","      \u003ctd\u003e4.981445\u003c/td\u003e\n","    \u003c/tr\u003e\n","  \u003c/tbody\u003e\n","\u003c/table\u003e\u003cp\u003e"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/bitsandbytes/autograd/_functions.py:316: UserWarning: MatMul8bitLt: inputs will be cast from torch.float32 to float16 during quantization\n","  warnings.warn(f\"MatMul8bitLt: inputs will be cast from {A.dtype} to float16 during quantization\")\n","/usr/local/lib/python3.10/dist-packages/torch/utils/checkpoint.py:464: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.4 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/bitsandbytes/autograd/_functions.py:316: UserWarning: MatMul8bitLt: inputs will be cast from torch.float32 to float16 during quantization\n","  warnings.warn(f\"MatMul8bitLt: inputs will be cast from {A.dtype} to float16 during quantization\")\n"]}],"source":["def main():\n","    logger.info(\"Starting fine-tuning process\")\n","\n","    logger.info(f\"Loading dataset: {DATASET_NAME}\")\n","    dataset = load_dataset(DATASET_NAME)\n","    logger.info(f\"Dataset loaded. Train size: {len(dataset['train'])}, Validation size: {len(dataset['valid'])}\")\n","\n","    global tokenizer  # Make tokenizer global for use in preprocess_function\n","    model, tokenizer = load_model_and_tokenizer()\n","\n","    logger.info(\"Preprocessing dataset\")\n","    tokenized_datasets = dataset.map(preprocess_function, batched=True, remove_columns=dataset[\"train\"].column_names)\n","\n","    trainer = train_model(model, tokenizer, tokenized_datasets)\n","\n","    save_model(trainer, tokenizer)\n","\n","    logger.info(\"Fine-tuning process completed successfully\")\n","\n","if __name__ == \"__main__\":\n","    main()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":983,"status":"ok","timestamp":1721370316071,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"8kOPhSscqmYk","outputId":"bcc362dd-80a2-470c-a3f8-8a89a0d2a32c"},"outputs":[{"name":"stdout","output_type":"stream","text":["/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/README.md\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/adapter_model.safetensors\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/adapter_config.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/training_args.bin\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/tokenizer_config.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/special_tokens_map.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/tokenizer.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/runs/Jul18_23-30-59_be34754d4fae/events.out.tfevents.1721345460.be34754d4fae.377.0\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/README.md\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/adapter_model.safetensors\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/adapter_config.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/training_args.bin\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/optimizer.pt\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/scheduler.pt\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/rng_state.pth\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-200/trainer_state.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/README.md\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/adapter_model.safetensors\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/adapter_config.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/training_args.bin\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/optimizer.pt\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/scheduler.pt\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/rng_state.pth\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-300/trainer_state.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/README.md\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/adapter_model.safetensors\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/adapter_config.json\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/training_args.bin\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/optimizer.pt\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/scheduler.pt\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/rng_state.pth\n","/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/checkpoints/checkpoint-381/trainer_state.json\n"]}],"source":["import os\n","\n","# Walk through the directory structure\n","for dirname, _, filenames in os.walk('/content/drive/MyDrive/invoice_processing_using_Dolly_7B'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":975},"executionInfo":{"elapsed":369322,"status":"ok","timestamp":1721450581474,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"hn6kjMF0e0tJ","outputId":"984b1a3b-7c3a-46e7-95ef-074406a64fb7"},"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"cfdb139bb0c4401c9be9a8aaaab3ee81","version_major":2,"version_minor":0},"text/plain":["pytorch_model.bin:  23%|##2       | 3.12G/13.8G [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"992c718ee0804ba0a8c1ce98726598e2","version_major":2,"version_minor":0},"text/plain":["Downloading readme:   0%|          | 0.00/782 [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"a35d6bdac51940c88222b72c7bc2e722","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/249M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2aafb47ba2cd45fb93bda225ecae9336","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/18.8M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"59a84a6f4aa048e392ab1e662e18c7b6","version_major":2,"version_minor":0},"text/plain":["Downloading data:   0%|          | 0.00/14.1M [00:00\u003c?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"37ce474173884129a31689d901321999","version_major":2,"version_minor":0},"text/plain":["Generating train split:   0%|          | 0/2043 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d2c4a5ea234c4da0b5d671cacbbfae5c","version_major":2,"version_minor":0},"text/plain":["Generating test split:   0%|          | 0/125 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"35551599bb3b4ec69af0efebd55fd225","version_major":2,"version_minor":0},"text/plain":["Generating valid split:   0%|          | 0/70 [00:00\u003c?, ? examples/s]"]},"metadata":{},"output_type":"display_data"},{"name":"stderr","output_type":"stream","text":["\u003cipython-input-5-45314e5a9999\u003e:69: UserWarning: Tight layout not applied. The left and right margins cannot be made large enough to accommodate all axes decorations.\n","  plt.tight_layout()\n"]},{"data":{"image/png":"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7M/qLW95i57whCdo586dOuGEE/TlL39ZV1xxhd74xjdq9+7duuc97/m1LsPomGOO0f3vf389//nP1zXXXKO73vWu+rM/+zNdd911K/N70pOepEc84hF65jOfqeuuu06vfOUrddxxx+lLX/rSOO6UU07Rs5/9bJ1zzjm6/PLL9d3f/d1aLBb6yEc+oosuuki//du/re/7vu/7d8sRwFfXTTfdpN///d/XRRddpP/7f/+vbrzxRh166KF64AMfqMc97nH66Z/+6f0d4lfVrl27dPbZZ+91zH3ve1/t3r37K9rnggsu0DOf+UxJUkR8RWsBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABg79r9HQDuuB7+8Ifr8MMP1z//8z9rx44dG55v27ZNl156qX7hF35Br3vd6/SFL3xBRx99tF772tdq586de137Pve5jy677DKdddZZesMb3qAvfOELus997qPHPvaxustd7iJJustd7qJ3vvOdeulLX6qLLrpIr3/963XXu95VD3zgA3X22WfroIMO+lqkvanFYqE///M/14//+I/rnHPO0datW/WUpzxFz3ve83T88cdPxj7xiU/Un/zJn2jXrl36hV/4BR111FG64IIL9LrXvU4f/OAHJ2Nf9apX6YQTTtB5552nF7zgBWrbVkceeaR+6Id+SI94xCP+PVME8FX02c9+Vqeddpr+8R//UVL/m/bABz5QX/ziF/XOd75Tb3/72/XTP/3Tm85PKUmSmqb5d4n3q+Gwww7TSSedJEm6+eabdfnll0vqf/MPO+wwSdK9733vDfMiQl3XabFY/LvFCgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgH1jERH7OwgAve3bt+uQQw7R2972tv0dCoCvse///u/Xn/7pn0qSfuInfkK/9mu/pq1bt0qSrr/+er3pTW/Szp07JUm7du3S2Wefrfve97568YtfrLPPPlu7d+/Wxz72MR155JF6y1veope//OW6/PLL1XWdjj32WD3vec/TGWecMe5nZpKk1772teO6p556qt75znfqh3/4h3XBBRdo9+7dut/97jeOe+Mb36h3vOMdOvTQQ/WiF71ost5f//Vf68d+7Mf00Y9+VCeeeKJe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Rets2bJFj3zkI8d19tYTr371q/WgBz1I27dv10Me8hBddtllevGLX6xPfepT2rFjh7Zv367LL79cb3/72/Xt3/7teuhDH6oHP/jBes1rXjPut3PnTp177rnj9+c///natWuXJGnXrl166lOfqsc85jE67rjj9OlPf/oWe2pVL66Kadu2bTrggAO0tramgw466CuqGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmGpv7QQzK58kxfDZJeVxTIQ2MDe5GkX0a0SEzExmJncf5kW1xnSRMkchZZMi5/phH86KeSVUM5PLyrANyrxlfiuYlHMecp3FbCbF8nse4nP3cU13V85SRJ4sGxGT/d19ZR79mrFybl3DXNWmzqeMreOpn+WcxzH1+cxrMo93UqLhe4lh1fyxLkMqoeh7JkJmkoazmuQ6PC/j5dPY6rjr/OsYSszj32VCG56ZbDy7efQm6+MMKaW8MpZV9a7r0DSNJGl9fX1S15zzZK1VucQs3pzzGGvTNEopbahFHcP8XEu/pZTGHihKPHXcda/M8yw9VcbVV51Dnct8n/r3YV63VbUYqtfHlGP8bVjumye19Hq9CEXKSpElmcK0oT6r3s/6vS5SZCk2zt/M/B0PJcV6p/k7jjunv//7v5ckXXzxxZKk6667Tr/xG7+hT3/609q2bZtuuOEGubte9apX6bzzztO73vUuHXzwwZKkHTt26Oijj9bFF1+sz3zmMzrhhBN0/PHH69u+7dskSZ/97Gd12WWXycz00pe+VN/wDd+g9773vZKkX/mVX9GLXvQi/e7v/u5e49uyZYve+9736sorr9S3fuu36ulPf7rattXP//zP6zd+4zckSX/6p3+qn/iJn9Bf/uVfjvMOOOAAXXbZZXr729+uJz3pSXrlK1+p973vfbrooov0sz/7s/r7v/97ffzjH9euXbv01re+VXe961310Y9+VCeffLJ2796tww8/fKxJqZEk/ciP/Ii+53u+R9/zPd+zIdYy/rd/+7fHe//wD/+g3/md39k0v8997nP6y7/8S/3+7/++rr76aj3+8Y/X2WefrcVioac//ek6//zzde655+qmm27Sn/zJn+hv/uZvJElvfetbddhhh+lBD3qQzjjjDL3mNa/RaaedttdarrJjxw5t27Zt/P63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P/953vKWtwCQ5zm/8zu/w2te85p/tNw/+MEPcvHFF3PHHXfw/Oc/n2c961k8/vGP/7bjvP71r+e6667j/vvv57LLLuOWW27hVa961bfcEx/+8Ie5++67ufPOO3ne857Hm9/8Zl7ykpdsaHfttdfyvOc9jw9/+MMYY3jSk55Ev98HIEmS+r8DAP1+f2xPNu+/nT0F4/tIRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP752NNtGEIkxkiMjK7YuGj8NRhjcc7hnCNJEtI0JUlSnEtIkvWralNdVbwQAt57YoxYa0nTlFa7vaFfdW+dw9r1qTRzCyFQ+ALvfTlhazHGfMurGcsYU0UljGI2xwkhjF3Ve2PKvuN1KudT5b8eez1eleNmV9ne1Hk1n1c1896zurpKv9/He1/XL0kSYozkeV7nGUKgKAqGwyFFUWCMqduGEMjzvK4bQJ7n9Pt9hsMh3vu672AwYDgcEkLAGFP3L4qCoigIIWCtrdfLWEsra+GcoyiKun9zjbIsI8syYowURUGMsVxraymKMo9m/au5V89ijPR6PfI8ByBNU6amppiZmWF6epqZmRnm5uaYmZmh3enQarXIsgxjDHme0+126Xa79bycc2RZRrvdpt1qkaYpLknqNahyKIqizqOqRZqmZFlGmqYYYxgOh5w8eZLjx48zHA7r+ocQAEiShHa7zfT0NEBdl2r+1Tr2ej0Gg8HY3m3ujeazyX3WzHdyP1X7s7pvxp28qnM/flY2+36Een5Vu+Z4m53BZk7VmWye6+aZa17Ns2sYj1mNV99bWx7W0R6Z/MY0596s36bjYcbHbtS/uS/HvxOmrk+1B6o6iTStrKxw6NAhLrvsMt74xjfy9Kc/nS984QsAzM7Osry8XLe94oor+PVf/3UAjhw5wm233caVV165adyrr76am2++mW63C0C32+UrX/nK3yvH5eVl0jRl165dxBj51V/91b9XnO/93u/ljjvu4Etf+lL97POf//zfK9apvPGNb+TNb34zn/vc5+pn9913Hx/60Ie4++67OXLkCA899BD79u1j37593HffffzxH/8xR44cAeBlL3sZb3nLW/j85z/Pi1/8YgDe+973cvXVV/PAAw/U/T70oQ/xnve85x8198oVV1zBq171Km644YZ/UJxzzjmHd7zjHfzX//pf6fV6p9wTRVFw33338ZSnPIXXve51vPCFL6zXZW5ubmwPnjhxgnPPPRdjDH/yJ3/CX/3VX9XvLrjggrrfsWPHuP3220+Z2z9kT03mdCoXXXQRDz744GnHFREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZGNktNtGGOceGIwBtYfG2D0IxpiMGAM2PJP2d7UcYwpf08KIdRtYow457DWAuCcG/XdkAkY6nYYQxz1b8ZiNObk2FVep8qpfLYeJ8awsT5hcl7VxVjMag6TYzdzreZRPav6V3+9z+u6GGMIIYzVLU1TnHMkSVK/997jva9r2qxD1b8auzm+MYYsy4gx1jGqNlXuVfwqRoyRVqtV52StreftvSd6j3GjhXSWxFrMaMyiKMjzHBMDzjnCqNaukVdiDcY58qLYULt6PWIky7K6T1EUFEUxlmdgVItR1ypPZw1mtFbWWhjVIYRQxskLYghEA1hLkqV0Oh2SJCHGSJ7n9Pt9hsNhXWvnXL0mAO12u65dVb8qx+YcqjobY0iShCRJ6pjN2jfXa/K+uXea56F5P7nHmuehqmFzz4zXfGPtT7XHJ+Osnxc71q+6r9aq+byqWfXOGEMklt+iODp5jflU99ZaqoqMzYv1787k1axVtYeb76sY1toN34bN9ma1j6q8qj0WQiDiiT6A2fh9EVleXuaFL3wha2trGGO48MILeelLXwrAz/zMz3DllVcyNTXFJz7xCd7+9rfzqle9isc//vHEGPn5n/95nva0p20a9/rrr2cwGPC0pz2tPivXX389j33sY7/tHB//+Mfzkpe8hMc+9rEsLi5y9dVX/73mesEFF/D+97+fV77ylXS7XYbDIZdccgnvf//7T9nn5S9/OVdddRVXXXXVaY3xnOc8h9/8zd/kda97HQcPHqTT6bBjxw5+4Rd+gfe85z285CUvWf9/CmB+fp4rr7yS973vffzH//gfefGLX8x1113Hi1/8YmZmZgB4z3vew3//7/99bJwrr7ySvXv38n//7/8F4I//+I/ZvXt3/f4Hf/AH+amf+qkN+b34xS+m0+nUv2+++Wae+cxnbmj3xje+kQsuuIC7776bxcVFVlZWuPjii8fafOYzn2F2dvZb1uOqq67i5ptv5n/8j/9xyj1xwQUX8OM//uMcP36cJEnYvn07v/mbvwnAT/3UT/ETP/ETTE1Nceutt3LTTTfx6le/mje96U1cfPHFY/vvFa94BS984Qt59KMfzXnnncell156yrz+IXtqMqfJugAcPnyYY8eOsXXr1tOOKyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIbmRhjPJ2G//vDv112MKb+W95HINbPYwyjZ1CGjkQi1iQYY9lsuKqvtRbvPd77iTFKDkOMkTB6VMUKo/HSNC2f1xmUQhzlAFjGYzbFGIkxjo1bPRtVazRWANbnEmOEaCdyLq/xsQzO2bFnzRjV2JPPmzWKMRJCQZIkWFuO6b2v21lrSZKkjhdCGKu5MQbvPdZanHNYawkh4L2v21bP8zzHWkur1cJaS1EUdY7VO2ttHbMoijpGq9Wqx3XOYYyp3wOkNh1f3xgJo3zDaD7GWhLnsM4RY6z7p0mCTRy9wWCsBsYYkiSp61TFruZWzb+qXRHKOpjIWJ1MLFevOaY1pq6LG+UVjaE/GFDEUOY9ilGtgXOuHrdZ42qdzChmpapn9a7ev6PY1To394S1ljRNx9b4VEd6cl9X+VbnbbJNc79UYzXzXa/Z5InbfOxq3Gb+698TS4zreU3ON03L/VK9b9bMGFOeyhhgtHZVbGMMjvWxjTFUs6tiOwzBQIweP1rLzepVf19G/aq1rq7gIyFs/H5U86n2XvXOOVefDYCIx+dDMIHLn///fct6iojIP9zv//7vc88993DDDTd8p1MRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+RctOe2WETAGg8UYg7FgjCHG2GgQMQZihBjj6F0kRggmYMyoZd2njFEPESPGGKy1Y+9CCMQYscYSR/Gq9jFG4ihECAFjDKGRdhnPgLEQInEUa9MpxkgIodHPYq2t84jRj+4NMU7O/+FUc4kYM97HGFNfzTo0/1Z5lTVer1lozMc5R5IkDAaDuk8V1zmHc25sjKrNZN2dc3Ub7z1FUWCtpSgKYow45xgOhzjn6hpVMZIkwRhDr9fDGEOapvX7Kp8syzDGlfHzgmE+pMgLMJClKVmrhbGG4AMhhnLNiPgQyIucwhe4kG4Yu5rbZO0mee8JIVAEj7WWxLq6liEEEuvIsgznHN57fFHUdTHVBh+tp7GW1Lo6j2q8KreqdlUu1VW97/f7Y+sfY6zrHEKo65ckSb0uk6q90Zzr5H21B6r6VPOJMZLn+Ya9N1nHb/W+PAsbx222q+ozqXrW/FvdT45TrU8zZnX54IkhYjBj9TSNceraN/fK6J0PAWvX406e/2rNxs/i+Nk1htFlTvG+XIPqzBVFQQih3lfl5daLKSIi/6Re9KIXfadTEBEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREflXITn9pgZi+ccYg7Vm7G0Ivmw1emytXe9pDDFCjBMRjakvgDhqYK0djWHr5yEETIgYDJE4FiOMfntf5hAm41sDxmBH3WKM9VjjOa4/q+7HcjMGYyIxrudct4mWUynbVu3jhjrEGOtcJ3OrflfPYoxYCyGEDXOA8nkVyzlX17J6F0Ko65rned3eOUeSJHX7EAJJktRjF0VRj2mMYWZmpo7nva/jWGtJkoTp6Wm89xhjSJJkLC9jTL1WLk1oJ47QCnWbaCBJEowNDHs9Yoy0Wi06WUbmPUVRjNWsuXbNdameOedI07Ru18y3uprzdsbinMN7z3A4LGvWqGGR5xR5jo8Rlya4NCVJkvq9977OrygKkiQhy7J6/KqNMabOq/muubZra2sApKMxmvuxWYPmfJv39dkZzc1aO7Ynqvps3K8bf1e1q/qv13z9/EzuycmxNsuv+lu1a+6j6lme55ue2Q2xJ37GCJFY1wFGn7GJ70t1LpvfluYYG877xFzK2Osxm22stfX8qvfVHvTek+d5PUaaWIgb6yXyz+3aa6/lc5/73Ibnn/3sZ+l0Ot+BjERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5P9Vyek2DCFgrd30XYwRMED515jqntE99X2MsX5mjKmv6rf3fhSvjFuNWbaDSMRgxuLZUf8Y41jfeqxoMLYcxzbyqdpWrLV1zMmxY4wQIyFGIAB2LPfRDBsxzcT81utSxQ8h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VgvnHGtraxw/fpyVlRUGgwG9Xo/V1VV6vV5dx2p9N+4DN7rW172qp/cFJ1eWMQba7YwYA3kxJARPiJ48z0nThCS1OGewDsoQAUwEA/1+n253jUggzVKsNRTFkBg9zpmynzVEIoUvyIucEAPGWVyS4BLHsRNHKWLB9Mw0NjH0hj1c4phfmGfL/Ba6/T79QQ/jLO1OC5NaoglEAyEGXOZIsoRoArnP6ed9+nmPYTFg6HNCKIA4VpvJvdw8C83fk/ureW6rGjvncM5tOGvNa/IMTI692R6fXM+q7am+Dc0zOznH8jebfjOabZp9x87UxDmcPO/VmZ8805vNZ7K+k9+Uoijqd1W8SvNbKjJpZWWFQ4cOcdlll/HGN76Rpz/96XzhC18AYHZ2luXl5brtFVdcwa//+q8DcOTIEW677TauvPLKTeNeffXV3HzzzXS7XQC63S5f+cpXTpnHiRMnmJ2dZXFxkeFwyLve9a763bOe9Sz+1//6Xxw8eBCAW265pX733d/93XzpS1/ib//2bwH4jd/4DYbD4d+nFP9gDz74IBdddNF3ZGwRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkX+NktNtaIzBWkuMEaD+a4whxkgIAWNM/ay6r36HGIlxvd9k7Kp98331vH5vNvatRCKRgMGCAQMYW70NYCyj7MZymxRCIIQAgLUW5xzW2jq3xDlijFhry7zKF6MkIkWe17WyxpTvRr+dc/gQiTESY6BZijKl8ZoZE+tnMcbydyzHjCHioydNEtIkIUtTrIF8OCAS8MFT+BzjYKo9RX/YwzpHmqUYW8YcDofkeU6SJhhjyNKMLVvm2blzJ4PBgCxrkSQJ/f6grIdxDIdD0jSl0+mwe/duVntdhsMhR48eZWFhgdm5Oay1DAYDut0unsiWLVuYn5+n0+nUNe53uyRJyuLiNs4551wGg7ysjw8kSUqaZoQQsbZafwtYwIzqNqqxtRDG92S5hp4QPNZaEpsQAvT7Q7z3GAOtVkpgSFEMGeYDimJICBBDIE0MWZaQJAbroNXK6LRbGAt5McCaiElSiuApjCdrt2h1WgzzAd3eGt3+KiF6fPAkWUJv0AcMHo/3AesMWTvDL3kym5L7IUXIiQRyX5AXOVhIsxQf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QLfbpdvrMTM3izUW5xxJkjA3N8dgMKjz6/V6FEVBv98v27gyvyzLSNOU/rBsW+QF3W63rlGapjjnABgOh6yurtLtdmm1WhhT5hdjrMc1GGKIhBgxQIwQY7kGwYS6Vu12h+gj3heABQLGQOIckUAkgDX44CEakiQh+gBEQvBlrU25Ps5ZnLMURU4RIyZzGFeud1EUda5FUVAUBcaU8aampnCurGWMscw9Rtxo36RJOppj2GSt42g/VvshYiJgItWWrvJrnpdqf06et+a+qvZrtXebNd7svFTr0zyn1e8QAkmS1N+DyTGae7ypue+992PnrRrbe1+fsck5rP9l7BvUPHdVn8n3zTMMYK0bO/vVWdxszpvVc3LsyfWYvCbnWq2DyP8Lrr32Wj73uc9teP7Zz36WTqfzHchIRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERET+X5WcbkNrLTFGYoz1M2MMxpgN91WbZtsYItGMx6ziVe2stVhr61hVvOZ4EIFmv8h6szjRx4zeGWIEHwIhhLF4k/Ox1jbGYixe3TaOrrHJgAGcdaP8qP9GIjEEAmCcxQDGgHWGqijlfMHYsg4hlH3WB6ziBZx1GExZ0wDEiDWGJHEkiSvjjK4Qy/pEAjEGIhbryhzLsGVtQogYLFnmSNMMYwxJkmKtpfAFIQQMZW2KovydpimtVouiKEbtk7J9URBjuRZZq0WWZQBljFE9W+02xhjyvOzrnMP7gPdhVI9yv4UQ8N6PrlDHrfYJEUIMo/WxY3sihECMvl4Law3WGZwzuMQSTMQaix3bbwZT78PyCiEyHA4ZDAaEEEjShOA9ofBYl2CixZpImmSkSYbBMBwMWVtdq/dKYh04WO2tcvLESYaDIdOdaWZmZpidnSVxCdFHEpeQOEcMZW6+CCQuodNqE4mEUBAJWFvulxjBkoydm6pGzX07uZ+b7733hMbZ8N7XfapzVsVPkmRsHZtrPXlem2drs2fN70S11pPKNRzvM/ndKPPwVOe/eVVxN6tJFb+Spm7Dd6x5pWlaP5/8joyyHXtX1amqW4yxrnXzfTOO2aRmIt8Jt9xyy3c6BRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+RciOd2G3ntijMQY62cxRkIIGGM2tJ9sB6ZuN9m+ihtCqN9ba+v79fahbjuZS9lmYz7rY7LJs/WHVbxqntX75jgxBGyMxFA+q3Kr2oUQSJIEYyw0xqvnFyPBF2AgbqgRECFiMSYhxkAkjs3fANYYbLSYaIgBCAGLwRmLtQZrDcaM5mYAYv1PIGIIJM7hiYQ84IMHIElS0jTF5+X80zTFOYe1jrzfZzgc4oMnhECgnGeMkdXVVY4dO0ZRFIRRTYbDYdkuBJxz9bOiKLCuXNfgA2DqMbwPDAYD8jzHOUeapqRpRppmdRsA7wNF4fHeY60t90kMQHM9wFpDuZ2qtSwvZy3GgrFVW4thdBkDmFHdHTEa8rxgefkkR48cZW1tjSNHjjHV6ZR7wMLcwha27dhOmqYM+gOKvMCZlLXVLsePnYBgWFxcZG5mFmMsKysrHDl0hKIo2Lq4wPzcAlvmFnA2IRQBE2FttcfK8gPEAEvblml3WqRpgrWWrJUwOzvN1FSZg/cBmyZjZ6KqfXOPbjxL4+d3st36uaU+l9WZrP42z2qz/6nO59hZmrifPLObfSOafyfF6gCx8fsyGbfKpZrbqb4pk9+3ybaT849xvVbNupb7t6xZ8/uyWW4Wu+Gd/Nu0Z88e9u3bx+WXX86tt97Knj17uPXWW7n00ku56KKLHrb/jTfeyNLSEm9729v+3jn8Y8T4dsfbs2cPAPv27ePGG2/8lu337dvH3r17ufPOO+t6QVm7VqtFp9MB4Od+7ud48YtfDMBP/dRP8Ud/9Efs37+fL3zhC1x88cV1vOc85zkcPHgQay2zs7O8/e1v55JLLgHg9ttv54YbbiCEQFEUvP71r+elL30pAD/2Yz/G3XffjbWWNE256aabePazn12/+7M/+zM6nQ4zMzO87W1v47u+67sA6Ha7vOxlL+Ouu+7CWstb3vIWXvjCFwKwd+/esbnt3bv3H1peEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZF/MsnpNowxnvLZ5LvNfhtrAYMx41clhFBf1tqx2MYYYow4Z+pn1dWMNfm8Ur23Fgx27F0zxxgjIYQN/er3ABvLMMZ7v+n86nFCJBrArI8x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GoNLE1pTbeYXFrDG4rAUecHaWpeZqVme8LgnMjs7S6/X46FvPkR3rcuOHTt4zKMfwznnnMPs7CzGBawzrK126a52WV1ZI01Szj1nD7Ozs2RpRpqltFotksTSamUsLGzBWUeRe5IkxVmHj6E+K9baes82z8/k/q72WwihPgPVeWw+q2JWNZ88M82xqvEmx9xs7GacyeeTsezo29Ecb/K+2a95xie/Jc3xmv2rum2WD0CSJJvGr2pWfWc2q8lm4zXfGVPuQsLGceXfprvuuguA2267DYCXv/zl/PZv/zbXXXcdV199NQDvf//7ueeee/jsZz+Lc473ve99vPrVr+bjH//4WKyHa/eZz3yGL33pS+zcuZNXv/rV/NzP/Ry/9mu/BsBf/MVfcPfdd7O4uMhLXvIS3vWud9Xv77rrLu6++26cc1x11VXcfPPNXH/99QB88Ytf5NOf/jStVotnPOMZfPjDH+aHfuiH+KVf+iWmp6f5/Oc/D8Cb3vQmbrjhBt75znfyute9bkMdHnroIZ73vOfxxS9+ccO7s88+u65PVa/Kj/7ojxJj5KlPfSo33XQT27dvP626/+iP/iif/vSnAbj99tuB8tx+8IMf5JprrmF6epoTJ05w2223kWVZ3e8Nb3gDv//7v8+JEyf48Ic/XH8zm37lV36F5z3veSRJ+b9e999/P+eee279fs+ePdx///11W4Dv+Z7vOa28RURERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERES+k5LTbRhCwBgDUP9t3ltr62cxxg33ceJ5UxXjVO+rd94XVEOv5xDrftY6ytvqWcQYQ4xVW4sxZawYAzFGDAacxRqDMYYQGP0NMGprRu8wEH3AxFH8CMaCqXIvJwkhEolU0zEG3HpDMIFIld/6fIxh9DtiTNm/UWqMMVhrSFwCEXyAGEKZB6bOs5wfhBiJZdqjdxaDpd3uAIYiz3HW0soyiJHBsE9R5KPcI8ZaWu02nakpCl8A5djT09NkScrJk8vkeU5eFIQQ8CGQ5zlFUWCtxXtPnucMh0NCiHQ6bZxzOOvodDqkSYuZ6TmmpmawOLqrXdZWuxgsicuw1uFcSpJkGO9JXIqzCdYmOJvgnBvbOyEEwGCsxTpHjAEfPCGM1sIYjAXM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ERzGtkhbU/gAg7zAY8AmJEmCz4cUPsdYgECMnmA8RSjweIwz2MRQUDAsBgTjcS1LdJFhMaQIgf4wx6UpufckaQrGEEzAOEN7qk0RclozHXadfSZLq0scOHKQQ8ePcPjEUfJYYKwhL3J89ETj8THHJhGspz9cpTdcoYh9ghmCLTCJx6YBrMeTk/scgDRNybKMNE1xzmGtxVpLCGHsGvsA2PITEGMEwBhDmqYkSYJzDoAkSTDGjLUxpjyPVVtrLc65etwqZtXHe48xBuccxpg6jveewWCAcZY46hNCqPuaUF6Dbo9iMAQfcMaMviO2vk+sw9oEjCVi8BF8iPgQCRhCBB/BuATjynYYW9/7EBkM+/QHPYpiiHOGLEtIEgvBE3yOs9TfCxMD0Rf4Iif4Yv13nkOM2Dovi8VAjBAjMUSKYU4MgVaS0U5SbIhQBJyx5EVgMLFGIpW5uTmWl5fr31dffTW33HILx48fByDPc77whS9s6Pdw7W6//XYOHToEwLvf/W6uuOKKh83liiuu4L3vfS/D4ZCiKHj3u9/Nc57znIftd/XVV3PzzTfT7XYB6Ha7fOUrX3nYfqdrbW2NpaWl+vcHPvABLrnkkoftt7S0xEMPPVT//shHPsLi4iJbt27l7LPP5sCBA3z1q18F4Otf/zr33Xcfj3rUo8jznK9//et1v89//vMcPnyY8847D4Df+73f44YbbuCOO+7gnHPOGRvzRS96EbfccgsA3/jGN7jzzju5+uqrT5nj5z//eZ797Gc/7FxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP65JafbMIT4Ld5GwDR+mw2vowHieozYuDfGjP2dVD23tnpvR0Gq9Kv3Fu/B2oSIx1qLtQZjYplECBADzlpwFu89IXiMsRgDzjnKoQyRSCyTHo0ViBhCURBsmX+MEUfZJhrAWWJzDsbU84yjvEPwhBhxrszXUOYYYySEgMHgXIId9SvnMLpMxAdDr98jz3Ocy2hlGUmWkKQpxlpijAzzHDAkSUbwBf3+gNXVVVZWVul3+3RcBtNzEMEaQwgBay3tdguAY8eOcfjoMfI8x9qEqelp2p1ppqamabeniCFisoQYoAiBNM3oTE9z/Pgx7t//AFmW8ZjHPIaF+QUWFxeZmprGB8/aWo88H9JptWm32mRJgsGwtrrKiePHWVk5SZI6zti5A2t34Jyj1W6RtVIGgz79fp98OMD7olw7HxgMBjjn6HQ6JC5hOMgp8MRY7hsfIjEWGGsx1pFmLdI0wzpLt9tlbsssAHmek+c5xhiyrEVnqkWSWDAR52x5byM+eIrgiUSwEImEGAnBl3vCGLC2XHsD07MzrHa7WGs49xGP4MlPfTLLy8scPHKQ2flZZuamcdaRB0/ucwIRnCFaMM4QCEQTsa7coyEGvPfEGEabymFNQgjlHqrOSrU/NztHm4kxUhTFhjamsYebMYwxWGvr5yGEsVj1vh/9dc7V7ZvxrLU45+qYpjFmCIEiRLz3ZFlWj1PN01Z1ruKZcj0mxyBWT8FgsMYQjS3r2phDkthRbcsxq/GqHKuYFoO1joApc45lXGcddjQnY0w5ZohYY7Cu/FIQIhAgREJR4EMgz/My9tBBK8OHU6+T/Nv2ile8gp/5mZ/h5ptv5i1veQs//MM/zLFjx3jmM58JQFEU/PiP/ziXXHLJWL+Ha3fZZZfxH/7Df+DBBx/kwgsv5NZbbz2tXO677z6e9KQnAXD55Zdz3XXXPWy/66+/nsFgwNOe9rT6e3L99dfz2Mc+dtP2Dz30EM973vP44he/+LCxAQ4dOsQP/MAP1Gf5vPPO473vfW/9/pWvfCUf//jHOXjwIN/7vd/L7OwsX//611leXuZFL3oRvV4Pay3bt2/nYx/7GMYYzjjjDH7t136NH/zBH8RaSwiBX/3VX+Wcc86h2+3y0pe+lOXlZZIkYXp6mg996EMsLCwAZe137tzJv//3/77O4ZOf/CSLi4u8/vWv58d//Mc5//zzcc7xq7/6q2zbtu2Uc9u3bx+dTue06iAiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8s/JxBjj6TT85B+8F4Bmc2NMfYUQxp5NOp1hjDHEGOur+RzAJmb0242CJlULjDFYawkhEIIn4ke5RKC8QhFwxuKShBAjRVEQQsA6i7G2HicC0TCWRxxNKeQRa5M6V2MMSZIQR/GstaecexnPE2PEOYdzDjsaN4RAURR1zKpPNS9r7ehZJGulDId9rHE4l3Hs2Am+/vWvc+jgIXwI7Dn3XM6/4AJmZqbxPsc5w4ml43zzgQdYWV5m0B2wbWGRbdu2Y4xh+eQKR44c5eDBgzz00AH6gyHtzhQxQq8/YGlpifn5eR73uMdxwQUXctZZZ5K2U6wD7z0HDx7kwIED/M3f/A1f/epXmZmZ4alPfSq7d+/m3HPPZXZ2lqIo6Ha7rKys0FvtcezIEn/z5a9w/wMPkKQJW7bM4RJHt7vG0skl2u2MCy+8gMc/4XGcfe7ZWAeHDx/mgQe+yWp3lbnZLTzygovYunURYiRrtTDGsLKygnPl/qj+GsAlCd57Tpw4wYPffJCDhw7QaqXs3n025533CNrtNr1enxjLfby2tsaBAwc4cOAg3e4a09PT7N69mzPOOIMsa5X70VqsTSiKAucca2trHDt2jP3793Pw4EG2bdvGYx/7WBYWFmi32wD87//9v/niF7/I1q1bef7zn8/c3Bztdpu1tTWOHz/O/v37OHLkCDt27ODss3ezuLiVVjvDWlPu4eDxPgBxtF8tMZR/m2eleQ6rvRNCGDtX1d7z3o/t9ea5rvpW+3JyjPV9Hcfum+PEGLHW1uvhvR8770VR4NKkbGPWcw0hYEIZJ8syQgjkw2F9fpIkwY5i+BDwRJpfmc2+Oc1aNPeI9x6bmPIM+lCf4xACibUkSUKe52WO1mIbeRIikVh+Q6wtN1xjfGMMiXVlP9brbUZt8jwv21oLWUaw8Nyr/sOG3EX+Kdx4440sLS3xtre97TudijyMn/zJn+SHfuiHePrTn/6dTkVEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZEzy7XYwxozdV78n/06KMY79bbav7kMIxBjrNpN9Q1H1Hf2l6lv2t9aujx8hEokx1JeJgLHlOKPY1lqstTCWf6SZQYyREGM5onFl+9HzGCMhhFPOc/LeGIsx432stetzbDxv9vfejwIEfHdACIF21iJSEIshMQbaWYbLMqIPrK2t4TDgDNOdFp32FJ3WFEt+CedSBsOcpaUlCu85eXKFGCMXXvhInvSkJ2NdgnUJWdai2+tz7733cuDAAbrdLkvLJzhj5w5MYehkLYwxOOcA6Ha7DAYDdu7cSZqmtFqten2zLGNlZYXDhw9z+MAhZqZmedKTL+H/98zL6ExNkWUZWZaw2l1j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uDspJXLOXZsQAkVRkFI9y+dxqmRGjJGcMznnhdxyzrgZbpAdQigoe0Y9TYynFZNpoih67GyPqVJNGQumdcRzIhYFwYyUa+oqUVVVU1ODoigoy5JQBEJOAMQYsOhMplO2trYws65dv9/nCUeWGI/HuDtVVbG1tcXm5iaDwYCDBw8SYySl1NUFoK5r6rom4ATLeJ2wGCl7JaPRiJQyKWdy9maNgBgjRVkAxnQ6JaWaUAdwZ3m0xMSd6WTCeDohWACDaAGCMZlMKHolsYjUObGzs8N4OqEIkRADVhaAz+oMw+EQcFLK7Oxsk7PP9luYrWeirhPumRgjAFU1YTQaUZYldV0znU67Na+qiuFw2O2RXq+Hu7Ozs0Nd10wmk65tWcZZLcdMJu1eCPT7/aZ2uSLVGbNAjJGyLCnLguyJlOpL96/t7vGqqi7Z6/PaMze/19o1e7w9+qXMn4e9ffb27c54SrPD3R31pv1cuxACMYSmfc6klDCHYAZ26Zne+62Z/66047ZxzYyUExknErBg3VkMNGdkPqkQQhfDZt+aEAIWmi9PO7aZEWzxm5bdCfO1yk3/hP/ZPsjyVWd+f3/Hd3wHP/ETP8FLX/pSAA4ePMh4PL5sP3fnh3/4h3nVq1713ySv3/md3+H06dOcPHkSgHPnznHffffx6KOP8uM//uMLbT/4wQ+yf/9+nvKUpwDwzd/8zbziFa/gc5/7HLfccsslsTc2NnjhC1/IS17yEv6n/+l/6p5ff/31fPCDH+zuT506xdVXX714di/j+uuv57bbbuOpT30qAN/zPd/D933f91FVFWVZfkXzFxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5ahP+tB3MjBACIQTMDDMDwN3JOZNzxt0XrvaZWej67r3M7JL+83E9ezde2z7M7tscvhx3ZnF345sZzGK4O1VVUdUVdV3vXimRZtfe/PbW5XLzbueVc8aMS2r3pWo9fzW1irhF6myklAlFj/5wRNkfUhQlVkQGoyHLqyvsW12hN+xjEax0+qOCpX1DRstDhksj+oMBMRbknJt5TytSSkymY7bGWzgwGPQZjQb0hz2KXsQipFQzrcZMp1N2dnZIKXHw4EGe+MQnsn//fjY3N5lOp908UkqEEFheXmY0GpGzU00T02nN9vaY7a0xKeXZHI1er2Aw6FH2IqEdbzqhrivACUXAzVjf2qQm0x8OGC6NGAwHhLIgG1Q5MZ5OqD0TYqTo9yh6JaGIlP0eg+UliiLinqjripzr2doYIUDOiaII9Ps9YgyYOSEYg0GPpaURw+GQ5eURV111FUVRMJlMqKqKGCMrKyssLy+Tc2YymXRrmXPu6jAcDps9lSucRIgQCyNECIFZLlDXFSnVxBjo9UvKXsSCk3JFVU/JORFjJMa4sJ/mz0/7vr1CCAv38+dsfp/vnltb2LOX35dh4VswfwZyzgv7ef7cd7mH5lMUZu9jjBRFQVmW9Ho9yrLsrqIoFsacH3u+BvPPzKyb+/xc5nMBMC49k75nTu3R3x3LmisYFsPuFWb1wMk4yZtz1n5XuhrP3nt2smeS5y/5XZCvTisrK9x22228613vAuAP//AP+chHPtK9v3DhAk984hMBePe7382FCxcW+q6trXX3d999N29/+9s5f/48AFVV8bu/+7v/1XJ90YtexCOPPMKpU6c4deoUL33pS/mH//Af8uM//uOXtL3xxht58MEHOXPmDAC/9Vu/RV3XXHfddZe03dzc5IUvfCEvfOELef3rX7/w7oUvfCH/+T//Zz7xiU8A8L/9b/8b3/Ed3/Flc/1rf+2v8cUvfpGHHnoIgA984AM85SlPoSzLx+3zt/7W3+J973vfl40tIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIvLVorjShmbW/W1/A7j7JW3dHTPr3pkZIUQgY8ZC//k+87Hm++/NAWz2PmB++RzAAJ+1DbP7WdtZ+/k8vcszfMk61HV9ST3mVVUFQAiBsiwByDmTUqKua8qyIAT7knVMKXX37t7l1DwL9Pt9ptMxKTk+rQmhaGIVzXKub20C0O/3cE/s7GzB2Bn3SlJyerFPrxxQliVFUVBVFe4Zp1mDWBRYgJwTOTfj98oSd2cyGbO5tcUff+GPiaFkfX2dxx57jH379vGkJz2JI0eOEGMkhECMkZQSVVWRc2Y4HJJzZlJV9Pt9iuGQyXRKns11Op2ysbnBeDKh1+vT7w8oioKy38cMYjSKIhBCoKamrmuKosCDkd1JKXW1M4yllX24O9NUN89iwN3ZnoxJ25uY7da8rp3xeNyt22DQx92p6wp3J+fcrhQp1UwmE6qqIsaIu9Pr9TAzJpMJAGVZYmZMp9OuDjs7O/R6PYbDIWZGyhXLyyOqqmI6HWNmlGWffr/AM6SUSSmT8+4+beaYu30RY+z2xm6Ol+6pdq/O76v22fw+7M7D7Gw83nnYu3fb+8c/s4vvLtn/s9wdb45t+3x2jNuccs7d7/Ys55xxW+i2MEYI4ZJzambknBeexxhJnjGsG6uu62aMlIgxNjExbL5Wufl+eHKc0H5qZvntmXc7F1icB5Bxcq6xy33ORIB3vetdvPzlL+enf/qnueWWW3je857XvXvb297GS1/6Uvbv38/Xf/3Xc/3113fvXvWqV/EDP/ADvOUtb+HNb34z3/Vd38Vjjz3GC17wAqD5d+0Vr3gFt9122+OOffLkST7wgQ9w7NixP/M83v72t/Pwww/zxje+kWc961n8yI/8CF//9V/f/Zv0nve8h8FgAMArX/lKXvziF/PiF7+Yt73tbXz0ox9la2uL9773vQC87GUv40d+5EfYt28f73jHO7j77rup65qnPe1pvPOd7+zGfMYznsGjjz7K+vo61157LS94wQv4uZ/7OZaWlnj729/Oi170Ityd1dVVfuEXfuFL5v/AAw/w2te+9s9cBxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRvyzM3f1KGv7aL/9bMDAzDMMM3MHd6UJY+8cu+W3mmDngmFkXt+3v7uSciTESQuje5Zyb+AYWmPUNmBme41yM2XhmgAN5lsPsNwbJMA844G0KDo7js75FUVDXNdkgxtiM4w5mmBnVdHLZ+syX0cwIIXTzzDmTUiKlRFkWxBi6dm38tv98PQBCCF092ve9YUnOmbpq4kIgWFOLZoySqqro9Ut6vYKqnuCeKYqIp8xku6aIJUVRAlDnBAbBmjIVZUEojPF4h6qazmpv3XrUdeL82fNcvHiRP/mTP+GTn/wkGxsbXH/99dx++3N48pOfxGg0IoRIzomqqrq5mBm5qqmnNaP+ELdmhYbDISklzl94jLX1Neq6pigKVlZX2be6SoyBuq4JIeIYVVUxGIzArautuxNj7C7PmZQzOWfMrFvPZtkz0SDEpqZVVTGZTGZjhG4f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ITR/c8rkFJrxrK0tC3Es2Oy37b6b+51znuXb1j3gs/q7B3q9Agi7a+ZNHjH2KEPT11MiewYzcs7NfGZr4e5kdyznrpxmhmXD3fDsBA9EIvVkShULvE5MxhOm0ynBA2vnLxBj5D8/8AAXLlzgzq+9kyc96UlMJ1O2d7Z55MxZ/uAPPk6qE8985jO55pprCME49dnP8yd/8hk2NzfplT22NrZJ08QTnvAEokfW19f5vd/7PTY3N3nmM5/JTTfdRFmWbKyts7G+ztGjR4kxsrOxhQ8S9WTKzs4Ojz76KI899hjr6+uUZcnq6ipHjhxhOBrSiz0+9tGP8VvT3+K2227j2muvZWdnh7Nnz7K9vc10OuXcuXNMp1Nuvvlmjh8/Tq/osb62ztbmNv2c2dra5uLFNUKIVFViNBpRlj26/e6Zdru4Z8yMnJ3mTITZ+TDc6doxV/t2z80/Wzx/zbMQQtfu0jN7eW37dh+0feefz4/RXs0+bIQQut/dfpq72hghBGKMXf/pdEpKicFgsJDL3r82+964OyGES+Zf1zV1XV1SH8fx0NQ1hGKhXgDmjmWjyLO8sndnAJpvS/s3wcKcUkq77VIihECvKJqzMxsnxtjUJGZSStR1Pb+ye9bVSLVfsv7y1en48eOcOnWK5z//+dx7770cP36ce++9lzvuuIMTJ04AcN999/H//r//L295y1v+q4177733Lox77733XnGu7V+Al7/85fzGb/wGw+GQ5eVl3vrWt/Kc5zwHgH/wD/4B733ve+n3+5RlyY//+I/zjd/4jV9yjH/9r/81r3jFK3jf+97H3XffDcBHP/pRXvva1zKZTBiPx7z85S/nh37ohwC45557uOeee7j//vs5fvw499xzz1daEhERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+TKKK21oIYAZDmTAzZvnRcTMyLkGwA2yZcxssb9Z8xJwB3DcHTNr3hnk7BRdvExVVaSUmjZFJAbDm6azON7+wLuBYPfmUl/iVRfPcwZz3DPuEGOYvXN2hzTaTNqpmkFK9d7KzV2BEAy33b5t3EuT3J1oW6NmHJu9dgzraplzBjeMTFEU5NzkmlICmv4hGNEKcqrpJjI3d5//nTOE0D3rcpgltb65yXQ8JuXMSl2xsrqKT40L62tsb29z9dVXs391FQ/G2bNnCTHy8U98ghgjtz7lVlb3H2RldT/rG+v0+30ublzk8KHD3Pzkmzl27TEcpygKRqMRqyurhBgoJyW9QY+bJzeztrZGf9TnwvoFUkocPHiQRGJ7sk1RFIQysDXeamrhmXJQsry6zPLKMsv7llldXaXX6wGwemCVI0eP8NhjjzGdTnnk3CMsLy+zvLpMf9RnNBxxzXXXsL2zzfLyMr1hj5UDKzy792y2JzuU/R6HDh1mdXWFnHO3VkURm3VhvtzNvm/vQwi7NXfv2s/XHCDnvLvfWezbrPHu/m37mBnu3rX7UvbG3hs/59zdXy7+/Bjzc5n/HUK4bD5tu73fjPmx2jh7c21r1ObY7PPQxZ1v0/bbXZPFOO6OW3sWvBuzG9cAHLzpnzw3Y3om4pBD822c1W5vndqazr/b+x68/UyKXOLee+9l//79nDhxAoAXv/jFvPjFL/5zzuryvuVbvoV/8S/+BUVR8Ku/+qu87GUv49SpUwA897nP5Ud/9EcZDof8l//yX3je857Hww8/zNLS0mVjnTp1in/xL/4Fd9xxx8LzV73qVbzxjW/kxS9+MefPn+fEiRP89b/+17n11lv/W09PRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETmFFfc0gwPhgPZM4bjQDTDQiAQcAPDwcCa/2m6tjEyuIO77wltmBkxxu63mRFCWGxr1sSnidFeNmvT9nvcKYRAtC7C3BsH5uJZAMtzsdq47QVmXHasEHoLuV1aRmviz+Zg1tRkPp+mnzf/dTDzhbHMrKnvXHt3xzOYZWKMgJOzk3Pu8m9iODEEAoYF60Y1a1bUu7yadc1dTWx37NCs1dr6On/0R3/EdDrl5ptv5qqrriKlRIyRGCMX19a46qqruPHGG3F3PvOZz3DmzBk+9elPceTwEZ584skcOHCA7e1tHnnkEfr9PiklJpMJ0+mUGCMHDhzgwIED7OzsUFUVvX6PI0eOMBqNKIqC8XjMeDxm//79FEVBSgl37/ZS+3s0GtHv91laWmL//v30+32KouD8+fM88sgjrK2tAXD48GHG4zEXLlygKAp6vR7L+5bZt28fVVWxtrbGuXPnWN2/Sn/QZ2e6Q1EEer2CGI2UnLquZmuSGAxGmDHbyxkIQMZ9t57za9isFwv1/lJyzqSULtljl/v9eObbtHu2/RtCuOT93n09/2zv+d0bs823jVuWJTHGru3j5Tt/pto483mEECiKooubc+7adPt5z/P5fAm2kOflrvk9NT9ndyfljHsmO/hsvUMI5JwX5lQUxWVrbmZ4cCxf+s2Qr05HjhwB4ODBg8QYecc73sEDDzzA93//9/OGN7yBN7/5zZw9e5b3v//9vP/97+f+++/nNa95Dc997nP5jd/4Ddydf/Nv/g3/5J/8E37nd36H0WjEe9/7Xq655hoAfuqnfor3vOc91HXNVVddxT//5/+cG264geFwyPLyMr1ej9XV1T9Vru1fgBe/+MXd7zvuuIOHHnqIuq4pioK/9tf+Wvfu6U9/Ou7Oo48+ytLS0iWxc8688pWv5J/9s3/GD/zADyy8MzMuXrwIwNbWFr1ej4MHDwKwurrafL+XlxkOh1c0DxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+coUV9zSIOMYmexg7rgZRsYAC9Y1dXPyrI/hmBtgmDVt3H0htLtjZpRlSc65u+/3+7g7KSfqnMG9ycGbPu3FLF4b/0tMAccw89ndnvfW5BhCANvNN8aIe5rlemnel4tz+fFtlnOe1WBuDjRXCIGiKJpnlmfvba4NFEWBmeGzurbP23gppT019lm+meROEUI3V4AQAjnnhdyb8Q2frUfOGTMj5UTOmRgjS0tLlGXJuXPnWFtb4+jRo6ysrFDXNQ899BCf+cxnWF5eZjAYUJYlhw8f5siRI2xsbPDAx36HXq/Hddddx6233srRo0fZt28f586doygKQgj0+33MjPF4zPnz5zl37hznz5/nT/7kTzh37hxPfOITOXbsGIPBgJQSk8mE5eVlYoxsb28zGAwYj8ddLcyMXq9HWZZMp1M+/elPs7y8DMDDDz/M5z73OY4fP97l0u/3KcuS0WjUxe/3+ywtLdHr99jYXKcoAyE0NY6F0bcSLBJDScoVKVVYcPAA5hihORfe7shLza/d4+2xy7V9vPdf7lzUdb1wnto+YbZP2v2WUrP27V6Y30NVVV3ybH78sixJKc32bZNzaArX/f1SQghdbu1enZ/7431b5vNovy/tPNp+IYTmyqlru/B9mT2LMS7EWxjbmvMdzCDs1q7Nq/3d1uPx8swGNF9P+Sr3sY99DID3vve9ALzyla/k3e9+N6973eu4++67Abj33nsX+nziE5/gne98J//7//6/86M/+qN8/dd/PR/5yEc4ceIEr371q3nrW9/KT/7kT/Jv/+2/5ZOf/CS/9Vu/RYyRn/u5n+P7vu/7+Hf/7t/x7d/+7V28O++8s/t98uRJPvCBD3Ds2LHHzbX9u9fb3vY2vumbvomiuPT/cvzrf/2vufHGG7nhhhsAuO+++7jvvvt4xzveAcA/+Sf/hK/92q/l2c9+9mX7vuQlL+H1r389jz76KP/8n/9zjh492o25dw4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIvLfRnGlDT0ABm7NfXYAJ7kTHEIIQMZhdjk4mM2uLhCYGe6+ED/nTF3XpJRw91m8WVxv3jePnD1dr1h2xz3jtjfALONZ4FhEzJyU0m4LT9R1jVm8tDZ7Emrvzay7QggYRhPSMQNo3jV9MuDEGCmKosmTpk7zl5l3Mef7N2yhtmaBuJBu0zalGswwbxbH3ck5zy3S7jxyzl0dzIyUE6lOTCYTDh06xLOf/WweffRRlpaWWF1dxczY2tqi1+tR1zVFUVBVFevr6+zfv59rrrmG5eVljj7haj772c9y7tw5Pv3pT3djbW9vY2aUZUnOmclkgrsznU7p9/scOnSIGCOHDx8mxti1yTkTY+zqEULAzKjrmhACZVliZiwtLbG0tMTm5ibLy8vs7OwwnU45ceIE11xzDYPBgPF43PVr61nXNVtbW4QQWFpaavJ1Z7S0hOPUacrOzk5TRyCGKSknYiywTLcHmr02vyIF84WfX892zS/3bn6ftXm2bdrn8/vmSl0uznwdcs579lgzr/a8Xm7svXOIMRJCwL05Yznn2Z5//L6752TxWfu8/X7szanNtc19vv/83+ZdZu+nYb7m82PNj2+zD1xqHi7UY75vu48uV+tWjLMPpshX4Oabb+bZz342ALfffjs333wzJ06cAOBrvuZreN/73gfA+9//fj72sY91bef/rXs8Dz744FeU07vf/W7e85738OEPf/iSdx/60If4sR/7MT74wQ925+DFL34xL37xiwH4gz/4A375l3/5sn0BfuInfoJ/9I/+Ed/5nd/JZz7zGb7u676O22+/nVtvvfUrylVERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERL4yxRW3jIEQAmYG7ril5i+Q3TFzABzHPQOOYU1fC+COeXNvZpgZ7rM+7rg7OeduuJxz9z7nTDOSwWz8+TjhCqdgQJOCAb73DQApJZxmPm0+TX6JlBJlWYCH7jltXnO5YjaLaBgBs4BhmAVi7Jp2Y5oBs1ns1sVm43hTRUtN7fFZW5/FDZhBMPDghLCbm3tanL8FwGZzBAsBC7vrsJezuzZdvWlq3u/3cWBpaYmUM9PplK3tbQaDAWbG1ceOMZlOueH661lZXW3WKQTW1tawELjlybdw9bGr+cIXv8D29jYbWxusTFaIZaTnPVJK5JwpeyWjpRE74x2SJzA4ctURDh46yGA44Ny5c5x/7DyHjxym1+9R5xpPTigCRVlQ9Ap6ZQ8zYzwZM56OGVQDNrc32RnvEIrAvpV9rKyuUPQKYohUqSJ5woIRy0jZLxktj7BobG1usT3eJpaR4bDPuBo39Q8QYyAEI8ZAWfZwz4zHk9n+ojkXsyVs6tq0NZqzNX8G5vd+W7tm/enez79r16f928aZ7/N4YoyL6z53LudzaNvO75f2d5tD+2zvmd4bc29ue2O2fedj+Z5zP3+1Umr2fFmW3buUmrO7N26rnZ/NnZf5mIY1x9Fmde++cTSH1+i+i22svTlfbv7z4zS5OqE02v0i8qc1GAy63zHGS+7rugaaffjDP/zDvOpVr/pvms8v/uIv8mM/9mN86EMf4glPeMLCu//wH/4DL3/5y/mVX/kVnvzkJ1+2/3/8j/+RU6dOccsttwBw5swZXvWqV3H69Gle9rKX8b73vY9f+IVfAODGG2/kjjvu4Dd+4ze49dZb/5vOS0REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREFoUrbhjCnsvAwAEngXlz73l2Odkz2Z3s4O44jpktXAA5N+1DCJRlSa/XoyxLzGzhedtnPo8YY3d9Obt97ZK5zMcr5mLOX0VRUBS92d/mirEghkiYXUVRUsTd5+0cfVaDnBM51+ScFmo1f6WUSCk1dcnNM9yaC8OIGAFjsZbtHJpxMikl6rqmrutZvLkx8+64cxVaWJdL1j9GYhEpegVlWbK1tUWdEgcPHmT//v3EGKmqiq3tbcbjMTfeeCNHr76a8XjcxTl//jzr6+tsb2+zvG+Za665hsOHD1MUBVVVMR6PmUwmxBjp9/uknNje2WZza5OdnR2qumIwHLC8b5mqqlhaWmJpeYk61U0+s7lubm6ysbnBeDzGafZmW9MYI71ej5QTOzs7bGxuMJ1Om70WA0VR0O/36Q/6AIzHYzY2NtjZ2SF7bvYlTlVX1HWFGbN9W1IUcbaGTd2LInZXjGFPbb05QAt7c/dIXro+XLI27fv5522/dg/sPXN7r73j7O7ZJkZbU2DuHBSE0Mxnvk1b4/lYbb1DCOScqaqKqqrIOXe1jjF28S63/y437ny7GCNlWRLj7pnbex7mz0k73nysveeoPfchhu770tV2du1ZnC7e3jrOr9PesebnlnNeqJ/IvJWVFdbW1v7Mce6++27e/va3c/78eQCqquJ3f/d3/8xx573nPe/h9a9/Pb/2a7/G9ddfv/Duwx/+MN/zPd/D//V//V8885nPfNwYf+/v/T1Onz7NqVOnOHXqFHfccQf/x//xf/D3/t7f48CBAywtLfHrv/7rAJw7d47f/u3f5mlPe9rjxvvoRz/KX/2rf/W/zgRFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERKRTXGlD94w7mBlmEEIghIAFCMGoqgrIXXuz+d4ZJ4A77nkWz3H3ufaGu5NzvuR3jBFiIKUM+CX92yjtfbRwSe7ZwYKBdxG69k2u3sVMKRNik9M8MyOn3LWbz7+b6SznVgih62tmhBAW+rdX26dtNx+/fWZmBAvUde7u53NLKVHXNYPBgJQSOTe1jjE2a2VGAIpejzCr2/wMLBjM1d5ncYui2M0LwyyQc6YoCoqioNfrEUJga2uL8XhMCIGLFy9y9uxZTp8+zXA4ZDQasbOzw4ULF9jY2CClxMrKCocOHaLf75NSYjqdUpYl6+vrPPTQQ/R6PY4dO8aBAwfo9/s8+uijPPbYY/R6PZaWlkgpsbS0hLvz2c9+Fndne3sbM+Ps2bMcPnyYGCMpJVJKxBi72g6HQ/r9PqdOneL06dPs27eP0WjUrdeBAwe6ug0GA3q9HuPxmJwz/X6fGALb29ucv3ieCxce46abbuIpT3kK0+mUqqpYWVmhrmuqqrpkrXbX1sg54b77Lufcrdv8s717ZP5vO7f2TLbP5vt2ZyPG7n0bsyiKhTHm4++tWxu3fR9CsxdSSt19O8f5ubbvy7LsxmrnufdMXC6Xtu183Ha8+THnz1hd193zNs/58zU/fgiBaNbV3927ebfjd2dobrzF75CBhYVvwOXO6fzvNo8ml0zti99RkXmvetWr+IEf+AHe8pa38OY3v/krjvNd3/VdPPbYY7zgBS8AoK5rXvGKV3Dbbbc9bp+TJ0/ygQ98gGPHjl3xGEePHuUlL3lJ9+xDH/oQhw4d4nu/93uZTCa8/OUv79793M/9HE9/+tO57777uO+++3jHO97xJePHGHnPe97DD/7gD3bf2te97nX8lb/yVx63z6lTpxgOh1eUv4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIXDlzd7+Shv/+fe/CzAgh0HUxxwxCCOScAMfMZu+9a+cOwSPBI+7g7t3VJTKLbWZzMeaeFxH3RMYhL/YPczEAogUWZMdxLJYQItkz7nlPHnmWazMHC97Fa9ok3I1gxePmDzAYDLp3OedL2oVomIFnW3i3d767484vT1Oboii7/Ju6s9CuKJocU0q7cUMTO2IEC1gGx8nzcwgGs9rnnGlWcS4nM7Jn6qrm0UceZTqeYGYMh0PMjM3NTXZ2dnB3tre3+dznPsfa2hqHDx/m2LFjjEajLtanPvUpNjY22LdvHwcPHmR1dZVjx46xb98+zp49y8c//nHW19e56qqrOHbsGMvLy6yvr/P5z3+eM2fOMJlMWF5e5pprruHw4cPs7Oxw+vRptra2GI1G7N+/n+XlZfr9PqPRqKvR/v372b9/Pykltra2+NSnPsXHP/5xHn30UWKMHDhwgKNHj3LkyBGWlpYIIbB//34GgwEXL15ke3ub4XDI/v2rXFy7wENnHuLTn/5jDhw4wIkTJxiNRqyurrJv3z7W1tYoimJhf7SadQnghlnRvW/3zN5zML/P5q92rebPTxu/jdWe2WbvNHujqqpmP4YwO7+747b7L+dMSokYY3efc17Io42dUuqeze/dNm5RFAv5tXHa8efP1Py+b2O2Y8/HnO8/X7v5+s3nMj+3tn37LMaIebqkDu3YKaWF+7157B6y3TnOj3858+s4y4gqTwDnxS/7u5ftIyJfuVe/+tX8zb/5N7nrrrv+vFMREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREflLpbjShgaYA54Bx7PjZMDIliiKiJnhOADuzf+4e/Pbmvd7uXv3POeMmXX38+8sGxbAMDCasWbx56POj9G2afKCYAbBwA33QM65zaLJEQghzOI347d57M4DzALgs36+MKb73su6520fYHcuPnvihnuTcwhhT6yMu9Ok65Sl4W67OdHkFEJTu5QSMUaKMuLupLom59zEDZGcMuZO9na12uR3a2tmeM74XE2DGRaadTx85Ag729vk7AyHA4qiYLi0xM7ODinVHN+3jwOHDvLoo+fo9UoOHDjIysoKg0Gfoii46uhVnD59mpQS+/btY3l5mdHyiLJfsrJ/hSc/5cmMx2PMjNHyiH2r+1g9sMr+g/u59vy1jMdjer0eIQT279/PDas3cO3113LmzBnMjCNHjmAYsYgMBgNSSkynU3qDHgRIdaLsl9z6tFu59vprOXfuHHVds7q6ymg06uoVQmA0GjEcDrFo9Id9Yoz0Bn32xwOsHlzl0KFDgLO0tMxgMGAwGOFu1HWiLHuX7Mt2z4FhFmf7aXe/ze/fvf26tQhh4Qy052ev7vzM9lXbp30WYySltNB3Pg8z697lnBfOxHzsGONC//k853Nr7+f7Xm6O8zkCxBgJYffM7p13O7/umzCL2+Y/n3crxrhw3uqUunfNd6D5bqScSTlj7RzbfBfO/SzfPXWfn09zhvMltWnybHobAbh0HUXkz+5nf/Zn/7xTEBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5S6m40obRApgRzMmA42QMwzEzSBk3A/PmGeBm+Kx/gKbdzPxvAHcn57xw3/51dzxnohkYYAbuuzHcF+PM2tBsigABAABJREFU3rV9w+xdmsWfRe76m4X5EF2L+fFbIQQg7OY1nwewszPuxjYzzIwQAiEYZoAnsufZu4AFa2rlYG5zc7e5nJo4MTbvq6rGrKlhUZRzc03knHfHje3zALkpG2RmRWTPEjQNbM/93DzdHZ+t3dLSEjFGcs70+32KoqDX79Mf9Mk50+v1uOH4ca659lpSSrP8IzFGzIz9Bw5QlAUhBEajEXVdk1Ii5cTq/lX2reyjrmvqup7Ns9mqBw4e4OChg93YW1tbuDtlr+TIVUdYWV3pcnJ3QgiUZUld1+zs7FCWJRaaecYi0u/3GY6GrO5fXZhLXdfEGJlOp01Ng7G0vNTNz8ygMoJFbrjhODFG6roipcx0OmU6rQkh4m6zMrbrbzgZPOBAjHG21n7ZPbX3nFzuvtmTLOzTee25avdJzpmcMyEEzIyU0sKY7fx8z7m6nPb53rM9fwFMp9PH7T8fe+/8Lhe7ne/eNvO57L1yzgtzb+PM16Se7VMzg/Zb0fZpc2zfuxPmvjHNOWGhru3f+blOJpNL5tSedzOIl5mbiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyF9kxZU2DDiYETEwwALBIJAhBHJKOJnggBkGOACGG3h26lyDWxfTzBaunDNmRggBd8fd5zJwcnbcwOYeuzvM2rZxvHkx16bJxXNu2lsz9jwzw93JOTfz87yQY1uF5uViv4U6hXBJ7dp5NH8zTp7FdcxCE8NtT59Mzt0oXV0AptMpMUaKIhBCxKyJnVLC3YkxzubS1CTGQAhGzomcE9FKgoWmTnPDzt+3dW1/t/HzbFXbdNu1qqqKlBIhBGKMVFVFURQURdGta1E0262ua2I09u3bR1EU3bza+rdxiqIgxkgIodsfeVaUtqYrKyuYGSklUkr0+/2FOqWUiDHO6hC7d+26TiYTQghdv5QSVVUBdLlvbm5SVRW9Xq9bBzOj1+sxnowxAjk1W6ZXDoBm7ZaX9jGd1rPKBhzHCLO6htm+bSrfzn3v/B5vL13O/N7L7V6f69PGbt+1V/u8PQOXG6fd55c7N3vbz5/pNqe2Zu0Y7dXez489P8bedvNt5seer9/e70rbp92re+Pvrfv8OPPjfanaN3VdPC/z36S2f4zxsnVs2zfvbW9oERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkb+wwpU29JwhJ9ydkMEAc8fMCGYEg4DN/gO4z64MOeOeybm53L2La2aPe4UQMDMwwx1SSpf0B2jv2vZmtvC+iTXLq3my29ednDMpJVJK3bPFHOnymZ/H5a4YIzHG3dxhLn5NdgecnBM5N89SSmTfndd8/jl7N+f2b4wRMyOlTF3X1HXd5d7k6KSUqKqKuq4Bpw2ZU8bxhXntXrs12VvjnDNpNo+6qmdxm/Fyzgs5xBjp9/sURYGZdbm3VzN2oNfrYWZUVUXOmbIsKYqiW+e2bzsPn+23+fm1bVspJabTKTs7O127lFLXd14IoatlO+d23XLOVFUF0OUFdPXOOTMYDFheWsEdtrd3qKqEWcDdqKqaus6YBSBgFjACYJjF2d9wSV0up81tfg/srel8m/n3KaWFmrV1CCEQwu7xn98H7Zh737V95q/Lnbf5sdt67W23N//5s733b5vLfJ/LjXG5fvNXezbba+885+c1/87MiDF2Y7V7am/+7Zdob/3nz+jeunU1cTA3QjZCvuLPsvwldvz4cQCe//znc+rUqT9TnAcffPCy79761rdy5syZK4pz77338olPfOKK2r7hDW/gda97HQD3338/99xzD6dOneL5z3/+FfW/3Nzvuece7r//ft7whjdw7733XlEcERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH576O40oYGmAN488AzuOPePDdv2mC7TfDmhwNmgRgjuGFmTUxrfocQcPfuvr1yzphZF67LZfa+7YP7bAx7nNyN5r+zsc2Yb+oO7j7Xfn4K3kSw+baLfZucmr8557l43rVpcg5YWyhv2raxg80GJsxi7NaozcNn9Y8h4u5kT7MaQAiBEJo655xw8qyPd+Mza9ctGov18m4c7+rR1hoge8azN39TPVvPpk87b9xJuckrxoJYRCwE6rqmqisAQohMphN6/RIzI3nCAoQiECwQikBKiSpVzb6Lhnsmt7UOhjlECyRPeM5YCKRUk1IihEDZ7xFDYDqtIEAIhmWDQDP3ANkTMTa1rKopYPT7PcpegdVQ52aO/UGvW2CfZNwzVZ2JRdHVtyx7hGDk7KTk5OxUVU1RlLM6dwu8sMNyTgt1nj8Le7VrMr9X59/Nv2/XpKl3U8+c82yfNFe7X+fP3N5x5s/q45lvN9+32RPNfVEUl/SZ79vm0Y41P8f5PTl/te1SSphZt5btnNs5zgshdP3m93iMkeyJ5vNgs/ybM2xmzf6q61mM3bVs4mSyO2G2fotndnHN5nOan6dhGM2Ydunyivw38da3vpXnP//5HD169Mu2vffee9m/fz8nTpz475CZiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj8f0m40oYxBGIIBDMMwDN4xnMmp9RdnhxzCBjRIjFEilhQxEiMkRACZgaAu5NzJqVEzvmy47o7tBdgZt3Vxmovn7XxnMmzy91xHHfI7rM2bSwIoYkT4uwKAQu78fZeIURiDIQQZ78X78Ewa/MMmIVZm0iMRVMDC7P47MaeJZRSZjKZUtc17k6MoatbMzcnpUz2vFADdyclp65rcnZCMIqiJMaIYeBQhEiv3yfEyCzJJs9gC3Xs6j6rdwizOYTd9bMQcCDnJvcQAkVZYGbUKbG+scGj5x7l3Llz7Ix3CKHpk1JiPN7h/IXznL/wGOsba0yrCaEIhGi4ZTAHA/fc5BgMi7trhIHPrqKMFGUx62PEMlL2eoRojKcTdibbjCdjpnVFygknQzBiEciz/xAglpFQGMkTda5xc7InptWEC2sXeOTsGc499ijj6RiLBgFyzlRVBRi9Xo8QIikliqJgNBphFrp9mHPu9t/u/e4end/TcbYPQ7Bun86diIW/Ztas8axRG4/ZmsQYAUgpUVUVVVXtnhN3Ukpz58BmYzruee6sNPctm0uojTWfS7tf28vMds9idwZ53D03/25+nPaa35NFUVAUBTGGdksvXCHsxkkpLYzRrkVbqzolsvtszzXfAaf5bmTPYGChCRzi7DsR2sFYOEfz85+vSUqp+97Nr1W7nnVdU6cKkSNHjgBw8ODB7hy/6U1v4ilPeQonT57k5MmTfO5znwOa83Lx4sWu7+HDhzl16lR3/2/+zb/h2c9+NjfffDM/+ZM/CcAb3/hGHn74Yb7927+dkydP8uCDD7K5uckrXvEKnva0p/G0pz2NH/uxHwPgHe94Bw888ADf//3fz8mTJ/nABz7A7//+73PXXXfxrGc9i1tvvZU3velNl51Hr9djdXWVGCMHDx78iue+urpKr9djeXmZ4XB4hVUUEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZH/HoorbRhixMwAyDljRGz2zt3x7GAOGJnmp5mBg8+e4RnHAG862m58ByyAk0m5aYUZZk18HMzAsuOWsRAIIYAZ2X03L5vFt9kABm5tnhl3x2j6gTX3BtGs6+MOOc/P3jEzzAzPeZZ4M04zdCaEghAAwuz54nt3J2cnGLgbde1MpxU5Z4qioCwNPFDXiZ2dMZPJBICyLFlZWSUEI4RInWuqaYWT6ff7XS2LomBne5vtrW1Sril7kaXRPoajPgEj1QkLUJQlU2oyEMwghG6djAzZcZw6ZXLOhBgJwbs8c2rm79lxMp4yGacXS2I/YiFQO6Rpxekzp1k7f5GDRw7xhCNXceDQQTxltrY2eOTMI2xurTMajTh06DBXX3010SLTaYXN5lqWAxxnOpniQK9XEkIgJyfnmjolyqIkpaaWRVHS65d4NqpqwmQ85cLFixSxR4iwb3mFGCI5NescQqSua2KM5Jzp9XqklMg5U9c10+mU8XjMuXPnWFtboyxLDh06xFVXXUVZlFgIFEXBdDIh54KiiEwmE1JKLC8vs729jQXDMFJOEIwyFriB4xRFJMZAXU9wNywCbhRFJIRIVU0xC82+xYllgWHUdU32TAiREAPBDLNAnu3NnB33jFnozkVVVezs7GBmjEZLDAYDzIycEyGCWZ7tf8eCt7sYcHJ7nJpTOtvTbQ2be3dvzikQZmczxkhKqbvcnTDbbzHG7tthc2evHWX37DSD51kN2t9kw0LA2nFyTfa6+1Y05zAQQgTa7whdjm2+zbPmChbbEjR9MIzQnN2Uu/sw+3a0n68YIjHEWb+uOE2FZt8ws/a70ty3ObXfF2++EmDNuRL52Mc+BsB73/teAC5cuMBP/dRPcfr0aYbDIdvb282/gVfgkUce4YEHHuCxxx7jWc96Fl/7tV/LP/yH/5B/9a/+Fb/4i7/IyZMnAfj7f//vM5lM+L3f+z12dna46667OHHiBK985St597vfzete9zruvvtuADY2NvjQhz5Ev99nZ2eHO++8k2/4hm/gjjvuWBj7zjvv5M4771yYC8A3fdM38cY3vpHbb7/9y84d4G1ve1sXT0RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/mIprrShA2aGu5NyBowYIwApJUIRMAMwMAcgu4M77uBkHMNsdoXd3/NSSrhnHIghYhZwd/JsTHefJeTM98w5d/mFEGCW72J8by5r/mZ3cm7ihWAEC0DG3ZnvZmaEEDALTKu6++2eyNlxz7N2gZQyZs3vth7umZQyOWdKK0gJtrfGXLx4kfF4TL/fZ9++fQwGQ9yd8XjMhQsXuHjxItvb21x33XUcPnyYAwcOMB6P2dzeZmtrk5XlfcQY6fV67Nu3j+l4wubGBmfOnCFE48D+gzzhCVexsm9fU5sEyZyUfFYJwwxCWxk3HMACKTtbW9tdveu6ZnV1lfF43Kx7dqqqoppOqXMiYBS9kqXhiMFoyGgwxNzYWF+nKAsKAqurq/TLHmkwpFeWbKxvkOvMsD+intYEAnWViEVBTokYjaIosBAJZsRQUqdEqjPuECxiFnFPgJEzjHcmmEUGgyHVNFNXiWDO9vYO+5b3427Uder2gVmgLEs2NzcpioIQAkXRHIutrS22trao65per8dgMKAsS1JKFLEg1zVGIGB4ThRFn7IsqOuaTMbNMTPKXonVRsaJZSTlTE6ZECMBJ7kRY8ACjMcTkhu9skfymiKW5JSaPRoN3Em5IuVMGZq1a85Gu08NaNZ4/kxsb29z4cJF3J1Dh2A4HFKWPep6ilORPUG2WYyIGwvnrtnMza5pj2AIoTsLOXuXx+XO4Pw53Hvv7tisvc/+tx1j/uRaCAQz6rqmqiscJ8aIk8GcYE0O3sYxw2ZrALbwLWn2tXXTyjnTK8u597Oazr457XfCAjTFgdnnratDzomcE+5089s7/6LYrYu7L+Tj7pSF0ayqyKKVlRVuueUWvvu7v5v/8X/8H3nRi17Etddee0V9v/d7vxcz4/Dhw3zrt34rv/Zrv8add955Sbtf+7Vf46d/+qcJIbC0tMTf+lt/iw9+8IN8+7d/+yVtd3Z2+L7v+z4efPBBQgh84Qtf4MEHH+SOO+64opw+8IEPXFE7ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5i6+40oZ1XRNCACCltPAupURRFJhZd81zd7I7KTvA47YzM2KMuPtCX4AQAmZ2yTt3J+dMSomyLBditu/bZ4aBwfywZg60D3wWfzEvMJphvRvDzMjZSCmRkuOeScmpqgozI4TQ1auJ6bNxA+DUdWJjY5MLFy4QQuDgwYMcOHCAoihIKTEajdje3uaRRx7hkUceodfrMRwO2dreYm1tjYceeoil4YjDhw+zurpKCIGqqlhaWiLGyGQy4dyjj4I7MUT2799PcBhPp1gIYJBxSIm0d7az+U0mE3Z2dsg54+70ej2m0yllWTLqD5hOJuScidaMvbOzg6dMv99nZWWF6665hl5RMBgMqKqKajIl9PssjUZcddVVuCdiLAkhMJlMKMuSXq+HY+BOTpkqVxShIMRIqhN1VREsUpY9AHJyckqURZ+iiOzsjEl5Sr/XA4cYCnplSZrtX/dm/WOIQMAtEywQQ6SuEp4z9I1+r08RC3LK9MoeB/Yf5NChg/T7A+q6ImcHz+S65sCBA2xtbTEZjxn0+4yB8fYOMUaCGb1ej6IomFbT2W5q9kRd13iqZ/Mum/vsTKYVOWXKsofnJj8LgbqqmjbulEWB58ykqimKONvdodvrzd4LuDd7cn19nXPnztHv99m/f3+zxrP2VVWDpe6MzW//EAyzgFloMncnZ8ed7uyFsLjfuzM/2zftu/Y8ppS6Pda+M898Oe03JoRAXdfdOGZGDHF2JtNsjZu8m5Tb78Ru3ovn3ABf+Ga035k232aeYeF8tHNs59mc8d0aNO3aejCXb3u/m1cTJ1GU5Zetg3x1ijHyn/7Tf+I3f/M3uf/++7njjjv4+Z//eZ773OcSY1z4d3k8Hn/JWHv/7f1K2v2Df/APOHz4ML/7u79LURR867d+65cdV0RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/nIqrrShu+Pul73f+9vMLn0XAiGES+KaWdcu53zJfc6ZMNe3jd/+bmPEGC95Ph8fwIJhZnPPnN2mhrsBRvPaaZu17c2MEGIXL4TQza/NN4SwZ4xFKSVCCIxGI/bv30/OmbquMTNSSphZV4djx45x9OhRACaTCevr6wwGA1ZX4cyZM9R13Y27tbXFdGfMcDjk+PHjjMdjxjs7xBi7dlggpUQZAhYCeS73dn7t2qWUumcppe4KIdDr9SjLkrIsmU6nVFVFWZbs27ePwWCAuxNCoN/vMxqNKIqim1NRFMTC6PV67Nu3jxgLxuMJdV3P5h+oqrpbx2CB4XBErmo2NtaZTivKosdg0KMoC8peiblRVxXRjH6vx3QyYWd7B8+ZyXjCZGfMhYsXyXVmaXmJlX376C0vM52MuXDxApPxGMxYXVnBQmC8M6GqKra2tli/sM7a2hq9fp9UJa666ipijEzHE3a2ttnZHrO5sUGMkcFgwOZ4wvrmBmVZUqeE58zqgQNYMMbjcbcvqqrCzOj3e5RFyfbGDhubGwQLxCJSTWpSlSliQSwidTVhc3OTaTVlNByxvLxMsED2PFsnwBfPhDvd/lpfX+f8+fOsrKxQVRXT6ZScIHvdrE3wubPlmIW589TsCevOCPhs3HavmPnCGU0pLZzDGCM5524ftc/a63Ln5XLfm+YMhm6fNvsKLBrBAmbeFIImXs6O56bdbsw93yHzxe/EnvMbQiDnfMk5mc9t73eqbXfpfNpvzO5Zc0+4g5k39b38p0O+ym1sbLCxscFzn/tcnvvc5/KHf/iH/O7v/i7Pfe5zufnmm/nt3/5tvumbvon3vve9bG1tLfS99957+bqv+zrOnz/P+973Pn7+538egJWVFdbW1rp23/AN38C//Jf/kq/7uq9je3ubn/u5n+Pv//2/f9m2Fy5c4ClPeQpFUfDJT36SD37wgzzvec/771CJXR/96Ef54R/+YT70oQ/9dx1XREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREQWFVfa0My6y90BiDHi7rg7IYSubfss50zOGXcnFiWhsEviunsXN+e8MEbbvx2/ruvufQih+x1jpCgKUkpdbo83B8cX2pjt5vR4feefO4tt9takLMtLYrZzAMg5EUJgMBiwf/9+YoxUVUVRFBRFgbtT1zWTyYTRaMTKygo7Oztsbm7i7uw/sJ+lfctcuHABcxgMBl2N5+MMh0NiCEwmE8bjMZPJhKXhiH6/T/bdGsyvW6uua6qq6uqcc2Y8HjMejwkh0Ov1mE6nTCYTvvjFL/LZz34WM+Pm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szfnNRiGLYzrnmmmOf89ascoLjmz83PNOV/ynWvPbfvcfbeOe79BZkaMsYvX1qj9fjWJ7X4rRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP6/IFxpQzN73CuEQFEUFEVBCIEQAmbW9XV3wGd/Wfjb/ga6GDFGYozdfVmWxBgX2s/3a1VVRUqJlBLu3uXSxgghXDJmm6e7k3NmOp0uXFVVLfyen/feGO0cYoxdDcysGzPnjFno5lJVFePxmMlkQkqJoihwd7a2tkgpEULo4rd9xuMxRVGQc6aua9ydGCMAOedmUWdz7vV6lGVJzpnJZEJdVcQY6fV6FEVT0/n82r4hBHq9HisrKxw6dIjRaMRkMuH8+fNsbW11dRoOhwwGA1JK7Ozs4O6z2AXD4bDLM+fcrWWXS10RgoE1ta/rirquySlTVxXBAjFEJuMxk50dLDueMw8/9DC/+ZHf4P/+v/9//OZv/iZnz56l1+sxGAyIMdLv91leXmY0GpFSYjKZsLW1hZmxurrK/v376ff71HVNCKHLbzAY0O/3Abq1aOsXQmA8HndzLIqC6XTKxYsXCWacf+yxbm987nOf4+zZsywtLXH48GGuueYa9o2W6Pf7HDlyhBtvvJEDBw5w+vRpPvKRj/DJj3+Sz/zJZ4gxcvPNN1OWJQ888AD/z//z//B7v/d7PPbYY9R1zXQ65ezZs3z84x/nv/yX/8JnP/tZLl68SF23e3J3H+acqaqK7e1t1tbWOHXqFJ///Od5+OGHOXv2LOvr61RVNXcO2v1s3fq3Z7DdL/3+gF6vT6/X6+oyv9dDCJRlSb/fpyzLhTMxH2vvd6Pdq3vPU/t+71lrz0S7/1NK7RuMgDsL523+2vvN2G1XL5z9qqoWviVt//a70ua491vXhm/j7v3WzNfict8Rb5K/7LdNvvocP34cgOc///mcOnUKgHvvvZdPfOITf+bYbcx77rmH+++//8u2v/fee3nDG97A/fffzz333MPp06d5xjOeccXj/fqv/zpf8zVfw6233spTn/pUfuiHfqj79wrgV3/1Vzlx4gS33HIL3/qt38r6+vpXMi0Afv/3f5/nPe95nDhxgqc97Wm84hWvYGdn57Jtf/Znf5anP/3pnDx5kqc97Wn803/6T7t3r371qzl58mR3DQaDhfetpz71qZw9e/aKcnv44Yf5xm/8Rp785CfzjGc8g7/xN/4Gjz76aPf+U5/6FHfeeSdPetKTeM5znsMf/uEf/ilnv+i1r30tx48fx8x48MEHv2TbN73pTdx0003cdNNN/MiP/Ej3/N5772V1dbWrwwte8IKFd/P7QkRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERES+ehVX2jCEgLuTcwbofpsZIQRCCN3zee37lB33jLtjZphZ977tU1VVd+/upJS6sWOMAN2Y8zm1bUejUZfDfP82BwOKslzIL+dMSqmbV1mW5LybZ4xxYe6TyaSbbzuPNv8QQhenHXev6XRKURRd3xgjZVlSliXT6ZScM/1+v2vfzqsdt65rUkr0ej3Mm7nGGLv8+v0+vV6PqqqoqqpZ5KKg1+sRYmhqYoYDjne1avNp5zadTnF3Dh48yNLSEo899hg5Z+q65sL587g7IQTW19cZjUb0+30effRRiqLZUltbW7g7o9GIjY0N+v0+W1tbLC0t0e/3GU/H4LC9tc1wOOz2j4VAOVujyWRCzk5ZlgyGQw4dOsStT7mVrdt2GIwGUAbKXkmv1yPnzHg87urWzr2dS6/Xw93Z2dnp1qZd56qqmEwmC33bPvNr1uZVVRVFURBjpCgK+oMBjz32GCEExuMxVx87BsCtt95KzrkZMwYGgwEHDhzg4MGDHLvmGi5cuECe7J6npz71qVxzzTV84Qtf4OGHH2Y6nXLu3DlGoxHXXXcdR48eJcbIysoKw+GQOtV4aM9Ds35tzjk381pbW+PjH/8458+fB4wbbriBoigYDAYEKxiO+uTKcG/3ayDG2Tn2QE4QQvO+PU9gs5zb8764f9q/7V7NOXd7vn3f7td2DUIRu/s2VtuujdGe1fZ5G9PdSTnjc2e5Has94znnhdzamuecyZ7BnX5/1J2H+e9De7XjAd13oY3XnEEW4rZxduM5KbEQryzL5vuYEtOqIqWEX/rZEAHg3nvvZf/+/Zw4ceLPNY+rr76apaUlPv3pT3PzzTd/2fYHDhzgF37hF7jxxhsZj8d8wzd8A+9617u455572Nzc5Hu/93v5D//hP3DixAle85rX8L/+r/8rP/mTP/kV5TYYDPiZn/kZnvGMZ5BS4ju/8zv5x//4H/OGN7zhkrbf/d3fzatf/WoA1tfXedrTnsZzn/tcbrvtNn72Z3+2a3fmzBme+MQn8m3f9m2XxPjmb/5m7rvvPl75yld+2dxijPzoj/4od911FwA/+IM/yA/+4A9y7733AvB3/+7f5VWvehX33HMPv/RLv8Q999zDxz72sa+gCo2XvvSl/NAP/VA33uP58Ic/zM///M/ze7/3exRFwdd+7ddy55138qIXvQiAF7zgBbz//e//ivMQERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkb/8wp+2g5ktXO2zlBJ1XZNSuuxvdyeEQIyREEJ3tTGA7n7+XXu/d9z5sdsr50zOGXfH3S+dbIzEPVdRlJTl7lUUBWXZo9/v0+/3KYpyrm2xkH/7u31XFMVl81y8FmuZc6aqKlJK3fiTyYThcMhwOGQymXDhwgV2dnaIMdLr9XB3Njc32dzc7Go8Ho9xd1ZXV9nZ2SGEQK/XA6CqqqYm2Rnv7DCdTnHPxBgpy5Jer0eMETPD3ZlMJmxtbTGdTplOp8QYOXDgACsrK6SU2NjYYDwek3NmaWmJnDObm5tMp1O2t7ep65qcc7cHzKyroZmRPVNVNdNqSlVV3fxb7s5gOGBldZVYRsbVlJ3JmGlVUfR6XH3sGE960pN44hOfyJEjRxgMBl1t+v0+RVmQZ/MwM/qDPjFGcs5YCOzbt4+rr76affv2sby8zNLSEmWv180/xshwOKQsSwbDIcv79lEUBSk1Nev3+0wmE77whS/wx5/6FI888gibm5tsbW2Rc6bX7zEcDkk5Mx6PqXJTsy9+8YucOXMGzDh48CCHDh3iwOED9Ho9Lly8wEMPPURd11x//fU86clP4glPeAKD4YDxeMzW9hZLy0tcf/31HD16lKWlJQ4cOMATnvAEer0eIQTqumZ7e5vJZMJg0OeGG27g9ttv54UvfCF/9a/+VW6//XaOHz/OoUOHWFpaIoTQ7ZWFM4bRHJ/mHKWUu322+Lu5qqpmMpkwHo/Z3t5ma2uL7e1tptMpOWcA6rpeuNpz2p7vdq/Mnw2AnJvx2rbtPgohdHtl7kRhFglhdy+347ffqJQSVV114zkJM8cC5FwvfD/a3Ob3bnu1sdvvW1VV1HVFSjUptXEyOSdSqqnrZp9Pp5NZu8R0OmF7e4utrc3m/M5yFQE4cuQIAAcPHiTGyDve8Q4eeOABvv/7v5+TJ0/ygQ98gN///d/nrrvu4lnPeha33norb3rTm7r+f+fv/B1e85rXAHD+/HluuukmPvzhDy/EXF1d7f6d+FKGwyHLy8v0ej1WV1cBuPvuu3n/+9/ftXnDG97A6173uu7+Z37mZ7jnnnsAuO2227jxxhsBGAwGnDx5klOnTgHw7//9v+e2227jxIkTAHzf930fP//zPw/AmTNneMELXsCzn/1snvrUp/Ka17ymO9MA//gf/2Oe/vSn88xnPpM77riD7e1tbrnlFp7xjGcAEGPkOc95TjfWXu1cALa2tqiq6rLt3vnOd/KN3/iNHD169JJ33/It37JQh/vvv5+TJ09293/wB3/A8ePHAXjCE57AXXfd1b37H/6H/6HL7ezZszzwwAN893d/NwB/42/8Db7whS/w6U9/GoDv+q7v4vbbb+cZz3gGL3rRi5p/S2b+3b/7dzznOc/hmc98JidPnuS3f/u3AXje857Htddee9k5zfvFX/xFvud7voelpSX6/T6veMUrujX4Ui63L0RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETkq1NxpQ3NDDPrfrt79xvo7tu/l/ZfjOHu3TXfr30PEEL4kjm0/ebz+VI5pJRJ6dJxmjy6u9m4hjvknLs8zYyUUpdH+2xvjpfOfTfnGONCXzNjOp0CsLS0RL/fZ3Nzk8997nOMRiOuuuoqlpaW2NraIufc1aTX6xEwer0eg8GAXq/Hua1tTp8+zcrKCsPhkLIsmUwmTKdTptMpaVpxcWMdzOgNB914IQRSSuScgWbORVEwGAzY2dmhLEsOHDhAXdesr69TVRW5rphOp/T7fXZ2dlhZWeG6667j3LlzuDsxRgDquu5iz69xr99jOBhg3syh1+sRQySFRBELdsZj6qrGYmR5dR/TakpdJ85dOM9oMqEYFGyOt3Fr1q+qKqqqIoRAPw2xGLAiQgxkIOXENNVM64qcMzuTMVVKXFhb5+L6BtvjCcPhkMFoCUKkzg45UdXN1ev1KPt9BsMh42nFznjC6dOnOXPmDAcOHOCqq67ipptuYv/0AOfPn2d7e5v+aMj+/fvJVTP3aVXx2PnzbI6bmlp2NtY3qKqK8+fP89iFx1hdXeXaa6+FAONqzKSaMKkmjKsxsYz0Bj1s09ja3iLGyOrqPgZLA8p+U0Mzm9UaiqJgNBpx4sQJDh06xJkzj5BSYjQasby8TAwlO+O6aY+DB9ydnDM5ZxIOZGKMhBAuc2a8O6dmYeGstM/bftPpdOEctM/bZ+3ea5/tzmPvOLtnb/6cG4YZxBjx2Tya9959e9pzBpnmzWKeXOaz0eY6f47nv13uTkqJlNKsg89yafIBa0ZyZrlEmnAB90TOjnsihGLWx7n0CyJfjT72sY8B8N73vheAV77ylbz73e/mda97HXfffTcAGxsbfOhDH+q+w3feeSff8A3fwB133ME/+2f/jDvuuIP/8//8P3nXu97FK1/5Sp73vOctxHzb297WjXffffdx33338Y53vOOSXL7927+9+33nnXcCcPfdd/O93/u9/M//8//8p5rXmTNn+KVf+iV+9Vd/FYDPf/7z3HDDDd3748ePc/r0aeq6Zv/+/fzKr/wKy8vLpJR4yUtewnve8x6+4zu+g3e+85388i//Mh/5yEdYXV3lwoUL9Pv9hbG2trZ4xzvewT/6R//ocfP5pV/6Jf6X/+V/4dOf/jRvfvObue222y5p86/+1b/ip37qpy7b/2u+5mv4oz/6IzY3N1leXr7iOqSU+Jmf+Rle8pKXAPCFL3yBq6++mqJo/m+ZmXH99dfz+c9/nptvvpm3vvWtHDlyBICf+Imf4A1veANvf/vb+eM//mNe/vKX8+EPf5gTJ05QVRXb29tXnAc0a3DXXXd198ePH+cXfuEXuvuPfOQjnDx5ktFoxPd///fzspe9DLj8vhARERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRr07Ff40gZkYI4XHfmRmOAeDul7S53LP552aGu3ex5mNfdiz3y8bMKZGyL/Sdj9H2izFSFAXuTkqJnHM3Pvjcby7Jae+487k3sYuFccqypK7rrv3S0hIpJR5++GE+85nPcPjwYY4ePcpoNOL/z269x0tWlPf+/1TVWt29r7PnxlwYEARklAEGRVG8BA6oxHgQjhBQUUmi6FFjiPlFjPEY4isx5pgcL9ET9aBOlBNvGNAo6gtMUDEJAV8SjVdEhgGEmWEYZmbP3ru7V1X9/uiutat798CYY9TE71sXvXqtqqeeeqqq90xNTTE2Ps7s/tlev06X3bt3s3z5cmZmZnhg5/1s3bqVXbt2sXLlStauWcPKlStZvnw5zWaTPbsf5P6dO+l6z8TUJN57pqen67mm3EMIde4LCwt0Oh2azWZdjxgi1hi2b9/Ogw8+yPbt21m5ciVHHXUUzjnWrVvH2NgY3W6XGCMhBEIIvb4xUjgHYXE9vfe9tiFSVRXdboWxBmcs0RpsWVKOjzG7axfbfnAPu3buYmyixaGHHcaKVStYuXIl1lqqqsKHwGRVYayl1WphrKXqdolAURSUzSZzs7M8uGcPU1PTPLh3D3dvu4v5hXmmp6c55JBDWLVqFasPOYROu0PotCkbJa2xMTCw+8EHmV+Y54gjj+ToY45mz5493HXnnezZs4dOp8PExARVDNy7Yzs77r+fPbt3s+Gwwzj++ONZsXIF3/ve9/ja175GjJFHPOIRHHXEkaxZs4ayLLnzrjv5h3/4B8pmyfq169lw2AZWrVqFsYbdu3dz19138b3vf49Wq8WyZctYvnw5RaPANhyuLCjKkrIs8d7jfUW73aGqKkIIFEXBxMQE8/Pz9doWRdFf+4roQ39vj97DvT3e+zQYolncL9YanHMD6zx8jofPaj7GqLOY70HnXH8cW9/n+yn1s9Zhbe++VwMPGJxb/H3qTSP293vox7cY4wgewNS5jTrn+bul571XQ2Mt1lqsNVhje3XF9MbD0Pu/AWMh9n4bY+j1N70bkYMyPz/PK17xCm699Vastdx1113ceuutPPGJT6TVavGJT3yCk08+mSc96Um87nWve8hYZ599NmefffZBj33sscfWv/9r1qw5qD579+7lv/7X/8prX/taTj755IdtH0Lgsssu48YbbyTGyI4dO9i0aRMXXnghn/nMZ3j5y1/OsmXLAFi+fPlA306nwwUXXMAznvEMzj333AOOcd5553HeeeexdetWzj33XJ797Gdz7LHH1u+/8pWvsG/fPp71rGeN7G+M4ZnPfCaf+9znOP/88w+mDMQYecUrXsHy5cv5rd/6rYPq89d//dd8+MMfZmFhgYWFBVatWgXAddddx1lnncXGjRsBKMuyrslPwrOf/Wx+9Vd/lfHxcb7zne/wjGc8g8MOO4wnPvGJP7ExREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREROQ/vuJgG8YYATDG1Pcxxvp7/jwxxmCMSRHIXw/HAAghYK3N+iy2HY49inOubh9CGJGPpd+kzi/PM/VxzmGtXZJfv9fIsVMM7/3I9ymOtRBCbz5FUTA1NUWz2STGSKPRoCgKZmZmOPnkk9mxYwf3338/CwsLrF69mpmZGWIITExMQIy0XZt2uw3AxMQEhx12GBMTE2zbtg0Aay2NRoOxsbHevKxlamqaPXv31DmkdqnGaR5lWTI+Pk632yWEQFmWWGuZmprq1bdbceihh7JixQqqqqLT6bB3716WL1/O8uXLcc7RaDSYnJykLEtarRaNRgPorXOjLJkcn6DhmjjnKIqCGCO+FfA+sGzZMpx17N61i07sMrNiOcuWzzCzahWT0/dSVR1WrF7J8pUrWLliJaZwtFot5tttykYDT6QoSxpjLYqioIqBRrPJhLO0mk1MWdAqm0wuX8b09DQ7dt1PrDweMM4yNjHO+OQEbl/J/PwcxlmKZoMGsHvvg9x7773Mz8+zcsVy1m04lHUbDq3Xet369Rz+iEdwx7Y7mRwbZ9eDu6liYHxygic9+VSOPOqR3HffffhuBc5SthocseYQjjzmSI488kh2791NZ75DFStsw7Jy5UpmVs4wNjnG7gd2U5Yly2aWMTk5ydh4i2arQQiB+fl5YoxYaynLkkbDEWNkbm6OsbExjLHMzs5SFAXee7z1/b3rAAtErDX1HjDGEmM6f5COQcRANPQOdO+shRAGzsLwGSyKoj4H+blM39P74TbWWpxzhBCGfk+Gzhex38/0Y+S/MQzmgK9zS32MAWsNIZiB8dNnGj/Pr3eebZ0BREy/ftamevWe95IIhAgxeIxxOGdwZUkMkY6v6HY6FDb7gRJ5GK9//etZtWoVX//61ymKgv/23/4bCwsL9fvvfe97TExMsGPHDjqdDs1m8yc6/tlnn82nPvUpLrnkkvp3JcnzANi3bx9nnXUWz3nOc3jNa15TPz/88MO57rrr6u9bt25l3bp1FEXBW97yFnbs2MFNN91Eq9XiNa95zZK4o3S7XS644ALWrVvHO97xjoOayxFHHMEpp5zCZz7zGY499tj6+fvf/35e/OIX1/++GOWcc85hy5YtnH/++Q9bB4BXv/rV3HXXXVxzzTX1b8hhhx3GvffeS1VV9d/Dbdu2cfjhh3PjjTfyzne+k3/8x3/kkEMO4dOf/jRvfOMbD2peB+Pwww/nzjvvrL9v3bqVww8/HIBVq1bVzx/96EfzrGc9i69+9as88YlP/ImNLyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL/8RUH2zDGuOQzxkgIAWtt/T1njMEY0/9iwSz2izHW71ObEEL9/KHySO9H5ZR/5vcDuYx4bozBOUcIAWPMwPve/AAiKXQ+1nDsh+L94hzLsqTVag3ESzVYvXo1hx12GPv376fdblMUBcYYut0uE+MTeO9ZNr2M1atXY4zBe0+r1eIxj3kMxx9/PLt27WJu/36azSbOOdrtNsYYJqcmwRpco6TZbGKtHahJyqMse+/Hx8eJMVIUva0yPj4OMdJtd5icnKTVarFp0ya894QQWFhYwFpLCIGyLJmZmQGgKIp6n1S+S2tsjEarJHiw1uKcq+scI3jvqaqKmZUrsK6gKArKogAMjz3ZEE1kfm4OiHXfRqPBlPcYY6h8RaPRYGZmBmMM+/bto1116Xa7TE5NMj41yb59s0y3ZnjEIx6B956iKJmb69W70+3SarWYWT5D2Sjx3uOKgumxMebbC9yxdSv/+A//wI/uvpvHPPrRHHfccaxavZpGo8H+hXmWr1rJ9IrlGODIGOh2uywsLNDtdjnssMM49thjKcuSbrdDe36effv2MTExwVHHHsX42DhVVRFjZN++fTjnmJqeYsXKFXjv6XQ6dDodrLU0mw0wEV95Qljcs/l69to1aTZblGVvLsaYgb0eY6jbWmv7MQzGpD2Z7fXeKPRPBKHe0+CcwzlXxxo+0/nZSu8ArHUj92GKl+rhvV9yfvuJEGLA+9A/pylGxPveWGkPx4H34IMnRoM1Rf2blp/t4fM+PHbvDEWMiWD77ejNLYZ030vTWUeIkRgqXFFgLWAtphuxRIge4uKZFMlNT0+zZ8+e+vvu3bt59KMfTVEUfO973+O6667jaU97GgDbtm3jFa94Bddffz3vete7uPTSS/nLv/zLn2g+5557Ln/wB3/AJZdcwtFHH81nP/tZvPe0220++clPcuyxxwIwOzvLWWedxVlnncUb3vCGgRhnnXUWr3zlK/nud7/Lxo0b+d//+39z4YUX1vNbu3YtrVaL++67j0984hM897nPBeDss8/mL/7iL3juc5/LsmXLePDBB5mamiLGyIUXXsiKFSt43/vet+Rv8xlnnMGf/Mmf8IQnPIFvf/vbPOYxjwFg586d/N3f/V0dH2Dv3r1cddVVfP3rX3/IOpx++ulccskldLtdHvnIR3LnnXeyc+dOVq9ezYc//OGBtq9+9av5wQ9+wDXXXEOj0aifH3LIITz2sY/lyiuv5OKLL+aTn/wkGzZs4Oijj+Y73/kOU1NTrFy5kk6nw3vf+9663zOf+Uze9KY31fXrdrvMzc2xbNmyh8z5RS96Eeeeey7nnnsu559/Pq985Sv5zd/8TYqi4AMf+ACXX345APfccw+HHnooANu3b+fv/u7vuOCCCx4y9saNG/niF79Y9xMRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGR//xMjDEeTMPrPrkFYwzGmPpZjBFjDNZaUpg8XGprjME6B8YQQiSEUD93zmGtBaCqKqy1OOeIMbWLgAEiIcSB8Y0xA+Oma2CC/ZyNMYRoiECMS/NMOaQxYxx83msfMGb0WGmMUePn994HoBc3xa/z69cFYN++fcQYGRsbA6Db7VIUBRMTE8zO7Wdubo5lU9MURUFVVSwsLLCwf46ZmRn27NmDc47xsTEmJycpioL5+Xn27n6Q2bk5ikZJ0SgpG426/iGEOvcQAiEEjDGUZQlAp9MBoCxLDGAiWGuZnZ2lLEvGx8fpdrt1vdJnuk91CCEQYsVCp4OxEWuK+p21FmMtEUOn08Fay8TEBMZYFtpt5vfPESOMjY1RFA6AdmeBEAJFUVAUBTFGvPcANJtNvPeUZcmePXvqOkxOTvZqjqWqejVfWFhgZmaGGCPdbpdOp0MIgcnJSRqNBu12m4WFBbz3jI2NMTU5yfzcLHdv28bdd98NxrDu0PWsXr2aRqOBtRYfA/v376fRaPTWl0ij0aDZbDI/P88DDzzAWLPBspkpnHMURcH27Tuoqi7ee8bHx5mcnMQ5R7vdptPpZOcCJiYmaJQN9u3d29tLpsC5Xl2893S7nhAC1lqazSbGWLzvPXPOYXDE6AnRE0JVr79zZX2mF/fz4jky2P6ZpHdWCP3fgsG1zs9J+q1I0jzq+VizZJ+kPZHmlPZlipWPYzAQemcokn5fFsdKZ9dYstx6+8RYsMYRgyMEBn6fhsdJ48cYh+YaMMaD8URSzWK/bov1s9b1xzVYa3Cu6NUwAD4QOr2cnvX8/47IsM985jP8zu/8DmNjY7z5zW9m3bp1vPCFL8Ray1FHHUUIgdNPP51XvepVPO1pT+NlL3sZL37xi2m325x66qm89rWv5YILLhgZ+9Of/jSf/vSnueKKKw46nxgjRx99NLfeeivNZpPnPe95fPOb32TDhg1s3LiRubk5tmzZwh//8R9z+eWXc9xxx9V9zz//fH7/93+/Hvu1r30tVVWxadMm/uqv/oply5axbds2zjvvPPbv38/69evZsGEDy5Yt4+1vfzsAf/qnf8qHPvSh+m/j9ddfz9VXX81FF13ECSecUJ/PJz/5ybz73e/Ge8+aNWv4xje+wfr163nZy17GV77yFRqNBjFGXvayl/GKV7yizvF973sf//f//l++9KUvPWwtXvCCF/CiF72IZz7zmfzRH/0R73//+1mzZg2//Mu/zAc/+EG2bt3KV7/6VZ7ylKewceNGms0mAEceeSRXX301AN/73ve4+OKL2bVrF9PT03zwgx/k+OOPp9vtctFFF/G1r32NlStXcuaZZ/LZz36WW2+9FYBrr72WN77xjXS7XZxzvOc97+EJT3gCL3vZy/jsZz/Lfffdx8qVK5mamuIHP/gBAI95zGP40Ic+xMknnwzAm970JrZs2QLABRdcwJ/8yZ8A8PrXv55PfepTlGVJCIGXv/zlAzUatmPHDo477ji2bdtW//tFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP7zMzHGeDANr/vkFgCstQDEGIkxYozpPTNgMAyHM8b02jhL7PcLodfXWkdRWJwrMSbSbndxzmCMAyIxQoweMEDE+9i7pTdWLsZIp9MZGNdaW18GSzSmzqGXZsrVYK0hBfe+IoSIMVAUJcbQzyXQaBT9OYS6BvmY3vv6mTFm4BOgqnx/3gUhBLz3da7e+/p73ifNIc2zNT7G/tn9ECMLCwu0Wi2mp6dpz83jvQegLEtijMzNzRFD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xvqdtXYgfq++EQh1DsPrADA7O4sxhlarVefT7XZZWFjAGEOnUxFCIISAcw6AsiwpioKyLHHO0e12mZ+fZ/v27Wzbto29e/cyPT3NkUceybp16wbyzMdOz5xz9XzS9zSWtZa9e/cwNjFGs9nC+0C73abqVOxauJ+5/XO0mk2mpqYw1tJudzDW0qm6hBBpNJs0mw26nU7vs91h9+7dhBCIMTI+Ps6hhx5K1eliIjjTX5MQwYDF4Iwl+kDV6bJ792663S6Tk5PMzMxgrWV+/xz379jJwsICAK1Wi6mpKRqNRpownXYH7ysigaob6Ha7hBDodDrcfvsd7Nixg40bN7Jq1SpihAcffJCdO3dSVRWFa7B23SG0220AiqKg2+3S7XYH1sxaW++DvOb5nsrrurhPQl37/H6UEMIB3+Vx0/qmPMzQIT3QGMYYnHMDe314vwyfo4eKne/9vF2ax/AYo3IblUuaV55buvI1SDVJdclzqKqKbreL9x7n3JL1y2s4POcQPGH4d09ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETk55w92IYxxiXPjDH1VRQFzjmstXX7qqrodDq0222qqiKEgPeBEHpXjHHg8t4TQqzHstYuXsb2+4R6bGstRVFQFAVlWS7JcTE/Bvrkejn5/thhYE6m3zH/nto45yjLkrIscc7V74bbpzGdczjn6lxTrYYvYwwxxoG+KY80/+G6DZuenmZsbAyAffv2cccdd/DVr36VT3ziE7znPe/hyiuv5POf/zxf//rXuffeewkh0Gw2CSGwe/du9u7dS1VVxBiZmZlhw4YNtFottm/fzt13383c3BwxxnoN87VM961Wi6Io6ryrqqKqKowxNBsNWq0xrLHYCM1Gg8mJSQrn2Lt3L3fffTfXf/GLfPSjH+XGG2/k7rvvJnhP6Qr27t3LD277Ad/61rf40Y9+xL59+/De0+12ueuuu/j85z/PX//1X3Pttdeybds2Zmdn673Z6XSYm5ujqiqazSY7duxgz549bN++nZtuuolPf/rTXH/99fzwhz+k0+kQQuCee+7hi1/8Ih/5yEf43Oc+xz333ENRFBhj2L9/P8ZYjOntw2azCcDevXvZvn0799xzD+9973u5/vrr2bp1K1VVUZYlt99+O1/4whf4q7/6K+6++252796N956yLAfOT6fTqdchr2+60r7tdrv1/k37L+0359zIs5z6p3OZ76Ph/Zu3Te3z8b33S/Zknmd+rtL4w/tm+H0ar9Pp0Ol06jOUn9/hOQyfoxQvzSn9VqQ4eZ7e+4Ezl2LkvzGj5jj8LD+T+e9cillV1UDdhn8LsfwYv8ryn9kRRxwBwGmnncbWrVsB2LJlC9/97ncPqv8111zDP/3TPx1U2y1btnDOOecAsHXrVk477bSBHB5OyvHiiy/mhhtu4C1veQt/9md/dlB9AV7/+tezceNGTjzxRE4++WS+8IUv1O9CCPzmb/4mRx11FEcffTTvete7DjruKO9+97s5/vjj2bx5M5s2beKd73xn/e6d73wnmzZt4vjjj+eEE07gyiuvPGCcdrvNq171Ko455hiOP/54LrroovrdbbfdxqmnnsqjHvUoHv/4x/Otb31rSf+PfvSjvOpVrzrovB8utz/6oz/iqKOO4qijjuL3f//3DzruKFdffTUnnHACmzdv5jGPeQy///u/X/+uffSjH61rt2nTJv78z//8gHFijFx++eU86lGP4vjjj+f000+v3+3YsYOzzjqLY445hk2bNvHlL3+5fje8n0RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETk519xsA1DCBhj6is3/CzGSAihvs8vYwwxxiX907s8VmqX+oYY+j3sQD8IxGiyeJY8xdS//61/ZXFDqMd3zi3JLWetrXPM4xpjsNYO5J0/s9b22wMMtk21Gs419Rmu2ag1yM3OzhJCoNlsMjMzw4oVK1i7di2rVq1ibm6OomiwYsUK1qxZQ6vVotFoUJYlIQTGx8ex1tLtdokxMjExwdTUFOPj49x7771Ya5mdnaXVah1wfKCuaco3fbfWYgvD5Pg4C50FFuYXKIoCfKDb7VIUBWvWrOGoRz6SqakprLHECN1ul/1zc2y/7z7uv/8BitLiV63CuV6uVVXxyEc+ktWrV7N3715mZmbYvXs3jUajnlOeS7fbZf/+/QAceuihHHHEEczNzXH//fezc+dO9uzZw/Llyzn22GM59thj2blzJ/fddx933nknVVVx6KHrWbZsGVVV4QqHwbF//34eeOABdu3axfLlyzn66KM54YQTGBsbY9euXczPz7NmzRoOPfRQVq9aQ7szz+7duzGml9fY2Fi9B40xVFW15CyMkp+vA+2j4f0aY8R7TwiBRqNR76lUp5z3fmS8POaoK9U73w/D7x/q3OV7f3i/p9+jfF8NxxjmnFtyjoZzzcfJa5/nOCqX1MZaS1mWdW2rqsJ7P7AGeYy85sFZej9jB15r+cW2ZcsWZmZm2Lhx48O2veaaa9i8eTNPfOITfwqZDTrnnHN4yUtewv/3//1/B9X+qU99Kv/jf/wPxsbG+Jd/+Ree9rSn8aMf/YiJiQmuvPJKvv3tb/P973+fPXv2cNJJJ3H66adz3HHH/Ztyu+iii3jlK18JwN69e9m0aRNPfepTOemkkzjuuOP46le/yrJly7jrrrs46aSTeNKTnsRRRx21JM7rXvc6jDF8//vfxxjDfffdV7972ctexiWXXMLFF1/MVVddxcUXX8zNN9880P9Zz3oWb3jDGw4674fK7ctf/jIf+chH+MY3vkFRFDz5yU/m1FNP5Vd+5Vf+TTU688wzec5znoO1lk6nw1Oe8hROPvlkzj33XA477DA+//nPs3btWvbs2cPjHvc4Hve4x3HaaactifPOd76Tb3zjG/zrv/4rjUZjoEave93reOITn8jnP/95br75Zs4991zuuOMOyrL8N+UsIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj9b9mAbxhgHrvxZCKF+ZozBGINzjrIsaTQaNBoNiqLAWosxpv40xiwmYm39PPHeU1UVnU6HdrvdH3NxXO893W6Xdrv3PuWQ59GLZ5Y8G77SfEIIB7xijBRFAUCn02F+fp75+Xm63S4ARVEsqVEaN80tH2O4pqOulNtirnbJs+G5NRoNjDFUVYX3HuccExMTrFixgjVr1jA+PsbY2BjWWnbv3s0Pf/hDvv3tb3P77bfzwAMPMD8/T6fToSgKqqpi586d7Nmzh1arxczMDM1ms14vay3OuYHv1tp6bUIIGGMoyxLnXL2G7XabdruNDx4DdDtd9s/O0mm3aTWbdfuJiQkmJydZNr2M1atWsWrlKiYnJ2i1Wixbtozp6WkA7r//fh588EFWr17Nhg0biDFSliUhBBYWFqiqikajwfj4ONZa9u/fX9dgfn6ehYUFrLVMTk4yNjZGVVVs376de++9l/n5ecbHx1m/fj1HHnkka9euxbmChYUFYozMzc2zd+9e5ufnCSFQFAVTU1OsXr2a9evX1zm2222894yNjXH44YezcuVKJicn672ePjudDjHGgfrm1/Czoihwzg3sL+99/ZnvjeEzlu+d/HzmZ/RA+2w4Tv5bMfy7kf9GDLcNIdDpdOh2u1RVVZ+P/Oyk8z4cZ9TvxvDckvzM5XNONRxu672vx0zrmmqd1mF4rPx3zzlHCKH/G9Wu13VU3Z1zWOfohopu7I6ci/xiWb16NQArVqzAOccVV1zBLbfcwm//9m+zefNmrr32Wrz3/O7v/i6bNm1i06ZN/OZv/iadTodrr72WT3/607z1rW9l8+bNXHHFFdx3332cfvrpPO5xj+O4447jVa96VX3Ocs45VqxYMZDDw0k5Llu2jEajwcaNG9m9ezc7duyo2xxxxBHceuut9feTTz6ZG264AYBf/uVfZmxsDIDjjz+eGCM7d+4E4GMf+xgvfelL67wuuOACPvKRjwDw13/915xyyimcdNJJnHjiifzt3/5tHf+ee+7hvPPO4/jjj+eEE07gf/yP/wHAsmXL6jb79++v/34DnHHGGfX7ww47jLVr13LXXXctme/+/ft5//vfzx//8R/Xvxtr164FYMeOHdxyyy1cdNFFADz3uc/lrrvu4gc/+MFAjOnpaY455hhuueWW+tlpp53GNddcU38/77zz2LJly8Pm9rGPfYwXvvCFTExM0Gw2+fVf//W6Rl/84hd50pOexEknncRxxx3H+9///jr+nj17eMlLXsKmTZs48cQT+fVf/3UApqam6t+3hYUF2u12Pc8nP/nJ9VyXLVvGxo0b2bp165IaAbz1rW/lLW95C41GY6BGAB//+Md5+ctfDsDjH/941q9fz5e+9CVg6X4SERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkZ9/xb+1Y4xx4Lv3HmPMwAXU9zGmPiaLAWD6n3GgPURiNITQ+0yMSf0yveaEEDDGYK2tY6U80xjGDHZO7VO+McaB+2FVVdVx83YhBKqqysbrfaacUpsQYn/Oi+3S/fC4qW96nuYFYai2ceAqiqJuW1UVnU6HbreL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Wc96Fm9605sess1Pyy233MKrX/3qn3UaIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL/6ZkYYzyYhtd+/AqstVhrAQghEGPEWosxBqC+H34XQgAMxiy2jTESQsAYU7fz3j9kDs65Jc/y9HvjLD6LMdbjGWMojMNEQyASYqzfW2sx1hJjpNvtYqwhGlPnGGMEazDGYHw1EHN4vDSX4TZ1O+PA2IE+w0bFzT99P4e89vn7oigGng+/N2bpmLFfj1FXvu6Lzw3OOZxz9dql9UxXCKF+ltrl6z585fFTHfLv+fN8ffPvKY98LVL+ebwD1X24rqNyyfvb/r5Jc01SvZL83ajnw/mMWr8DvR9Vu+Ex8nnldQohUJZl3fZA+/JAa5XihxCW7P38/BRFUd/nsYf7jJpj2ktpDsP1Tu3yNtZanHMDbfM1TO3yPIfHTM9TrR5uPdK5G97DeazhPTw814WFDkTD+Rdf8pDjiczPz1OWJUVRsGvXLp74xCdy5ZVXcsopp/ysU/u5sHPnTp7//Odz3XXX/axTERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5T6842IYxRmKM9X1ijMFaSwhh4PlDxTHGAGCtHRlzWGofQhj4Pvw+z3HUe2ssxhhC8IQQBuIZa+sxnHEYazDG1PGMtVhr8VV3yZj5Z1VVdU3yNnUOzg3klcZIVz63VJ9ezqHOLz0bHie9CyHU74drtVijuKRu+Rqmd8Of/cxxztVj53VPY6e4ed62X+N87vn4+doN12/UujrnBvJKY6T23vu6zeh5jN5T+RwOVL/hfNJa5LVMOabPA/UdrkcaJ3+e9xlVq1HnbzhGPqd8LdL98F5O46S1ONB+SvMbzn94LwFLzt2ouY8aa1Ruw9I8DrTeadz8edonIQSazWYdN8057YVut7ukxvk4IYT67I8yfMbzK8ZIVVV474nBAg//Oypy22238aIXvYgYI51Oh1e84hWccsopP+u0fm6sXr2a66677medhoiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIjIL4TiYBsaY4gx4r2vv1trAQgh4L3HGFM/T+9SW+j1790z8D6x1hJjXDJuurrd7pJnADFGYowjY+YiYPv5FcYQQqjHS6Naa6EfN30PKad+/mbofR0/RkIIA/nlY6QahuDrvtbaun7D8UIIS+rgnKPb7c11OJe8bZ7TcM1C8CNrmPLNY4z+TNdi/LR26ep2uzjnKIpioA7OuXrOde37fVL81CaPn9c7zX24rvmeTM/yOOnK92na0/meTTVIbZ1zA+ub16OqqiV7PoRQr2l6nmJ47/He17k75+q4w3slr9vwWufthnPLa5ByGD67aWzn3EDcvK557fN1DCHUa5DPJc8t1T6NMbyX8zkNnxNrbT1eyjvlONwuxcv3xKg9k2o/XL/UPo+b74G8Tu12m6qqltQ5j5PnkGKmPVAURZ1Hft7rswWYGElnS+ShnHDCCdx6660/6zRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERESwP15zQ4y9z95F/ztY67DWYq3FmN57Y0z9PsY4cIUQCCHgva+vEMJAm7xfCAFjzMAFDHyOep+r49Y5W5xzFEVBo9Gg0WhQFAXW9sqS8iLGXtvC4dzildrlsRfnvzhGXpdIPr/epzFkOcf+uNVAbVJ9Qgh1rHyc4XodqI5pvOFnqYapJqku+Vx76xmJ8eHXrSxLnHMYY+q8QwhUVTVw5f3zdUxt83mn/ZKej6pB3v5AeyHPs97ZxtTv8jzyvTo8T2PMkvrkNSzLso6Zcs9j5HssPU/9h2MN76Pheae2+Z4E6jXIr5RPWoPhueU1Se1T3bvdbl3/FD/tk+G9n+bc7XYH6lUURb0/Up/8XOXx8jnldc9rXJYlxpgl52V4j5ZlObCnh68D9Uu1aTabNJtNyrLEWrukLp1Oh263W9cljRdjpNvt0m63B+aQ1r/T6fTWofIYIkt/ueQX0RFHHAHAaaedxtatWwHYsmUL3/3ud+s2n/70p/nt3/7tf/MYW7Zs4fLLL+eGG27g4osv/rHySp95jhdffDE33HDDvzkfERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5j6k4+KYWAGNMfaXvANYOPl8UAQNErB1+128R40CsA7XJx8zbGmMG3uftU+wYI5GID55AJMRYt7HWYgBrLc45fAjEEAgh4L3HOouJFhg1Pwgh9OLHiHOu/m6txRiDc44YY+85cSjHCPQ+e7EN1kIv7Vjn37s3AzkMzG3oOlDtsqcDMVIdrbX1nPI6p/x7cwNr3cOuSYpzMEblP5xb3tZ7P/AuZusJ4JzDWltfKf9R8Uat6fCztKYHyj19Dtcj5Zn653Hyeqe+w/1TzQ90NlLMvH2qRZq7c26gf4qZX8PzznNxzg3MIV+j4doO75kDxUzv83Ubbn+gvTBKqmUeb7hmB6ph3jd/Nvwbl88xb59qnddnOHa6H16rvP62X0/7kDOVX2RbtmxhZmaGjRs3AnD22Wdz9tln/4yzEhERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRX3T2YBsaY7DWYoypr/Q9f57apvt6IGsHrjzOcNuHipmep2c/jsX+i9OOMRJCqK8YI8TY++z3SW2890vyttbinKMoCoqiqHOK/Rj5HHqxA+CJMQCBGPtjmt5YzhmKwlEUtv50zmLM6PmmnPN5pNzT8/zKn4cQqKoK7/2SfnncpXWknnc+9/waVYe87fD65jWuqooQwsj65uufck/toZdXauuce8h9l++rgTXK9oq1S49I/jzVvKqq+srreaA9Orzvh78/1JqNuvJ1ikP7d3iMvB7OuSXjDNdneJ2dcwPnIl3Ddcv7HGheqV2+39KaplrmOeXrlLdL++VAV9ovB1qj4TqNqllqWxQFZVnSaDQG9lmqU9oXaQxjDGVZUpblwD7N92Pat8ZEYOmZk188q1evBmDFihU457jiiiu45ZZb+O3f/m02b97Mtddey5YtWzjnnHMAuOGGG9i0aRMvetGL2LRpE4973OO49dZbAbjtttt48pOfzIknnsjxxx/PG97wBgDGxsaYnJyk0WiwbNmyHyuv9JnnuGzZMhqNxk+oAiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8h+FiTHGg2n4hU/+1WInY+rPdD/8LsnDj3qXrjyetXag7XCbUfFjjA85NkBpCyyWECM+hsFxrV3sYwyBSAiBEPrtbC+3gljnOTweQFVVdR9rbX3VsYAQPTHSm6c1vfjZ934i9B5HDAZMxOD6rwZrM1zLh1oXYwwxemKMi3PrP3fOYbM6HGieMUIIcWCtUr8kzdd7Twhhsc79WHn8lHfeLtVtOIeUc2qfzysfI8XN95L3fmBPpHXJ+3nvAepajMotr0e+R/Ja5vUYbp/mbq2lqqqRa5k+h8/C8Pu8jTGmzifFd85RVdWSOuX9vfcj6ze8XsM5DD9LazaqFmneaQ2Gz3peh9zo/ReXvMvzHP6tyPd5Wsf8bCbdbnfJuPkVQhjYl957qqqi2+3WNczXK98X+R7Mz1k6H8YYCmOJ3QpD4Jxff9XIesgvttNOO41LL72Uc845B4AtW7ZwzTXXcM0113DDDTdw+umnc/3113PGGWfw8Y9/nDe+8Y185zvf4dJLL2Xt2rX83u/9HgAPPPAAK1asOOA4mzdv5tprr2X9+vU/jWmJiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiMh/cMXBNoyx92lM796YxefGQAwRTGptsv8CEUIMxBgx/Y7GGGKMxBS4/2z02HHJfd4/Pcvb5VJc7z0hBgKR2H9ujIF+rLy9sxbnHCEEfPCkt91Op+5nrV2S8/Bza+1iTOcIBGIwEAOYAFgg9v/Xe+y9r+trjMVY0/s0EWstvor9fovSOGmeo+Z/oPrmtQ0hLFmbNN/htQMG2ufxR42V4ocQsNbWdbLWLtkbeew8Vp5Xo9EY2AP5u3ycFCOEMDCnh6rN8JjpWapzGmv4e5pH/nmgcR7qPAzv5eE6DOeVOOdwzgEMzH1UrPT8odYZoKqqei2KoujtQe8JIdTtnHMHnMvwHkn7IF/3/LzkdUyx8z2dt81zTnGHfyOGYw57uN+d1M97X9+n/eucq8dI7/O9XVUV3nuqqiLGSFEM/uTW+z9EQgwQ/ahURA7KEUccwRlnnAHAr/7qr3LJJZdw11138bSnPY3f/d3fZXZ2ll/6pV/izDPPfMg4t956608hWxERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+c+iONiGwUcAjDFAxBiDMWAMRCD2XtfPeu3AGEvstQAiMcbsnRkYI/aDpE9jDDHG+uqNaeo2+QUQQhiIm7fvvY+YGMEYjF0cM4ZASGNag+3nXecSgSzV4fHyZwDW2npc73393BjTi28X60kMvStjTMy+BWI0xBj69XCEweZDfc2SuuY1SfmlZ3new+1TbfO65nMbltfDOTfQPvVJbZxzB3wHg3shrX2e6/BeGJ7jge7zvsPxQggD+zPllMcf3pPWWqy1B8zdez8w1+H3KWa9Z0nnKdb9h/NMrDGkN3nuaay0dtbaJWcljZnyH46ff456P7wvYoz1mg/XNh8zj5XnPVz3eo7W4pyr2w7XL30O76XhWqU2w2PmNRnOrRcD0uEPIQzsk7y+RVFQVRXe+yW1s9ZSluXAGHnOMUZ89HjvaRYFhoc44CI/hnQmnvvc53Lqqady3XXX8a53vYu3v/3tXHvttT/r9ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5D+J4mAbxhgAc8D3IQQAnLWLD43BxIgBYv8yxmCzNuk+xoj3vr43xhBjJMaY5dB7PpjXYpu87WIKi+1dabHG9mKbXvsQAt4HquCJMWKxWEKdcC9mb1yDodlsDuSXxk3z73Q6OOfqdyGEur21UNoSg8UQSBWN2Tycc5RlSQyREEPdP49FNEDoj704z7yuw3Mf9Tzl2bsgNbfW4pyra9Nb+8Ux0tyNMfWV3udrkLd3zmGM6cf09TipT6rfwa5lXo/hMdMVQhjIL9UnPUt987j5/aj46Xt6Z60dmWs+n1Hv0zPvfa/exvTOCwYMmNhf2/4+sMaCNcBgzSESYqSqqnouRVEMzM9aSwhhYC+mNUlrcCAxRhqNxkDf4Tmk2EVRDMTM80xt07iL+26xls65A9YsxczXJO2j9D6tRb6u+fdGozEQf/g3pyzdkrn19ObQarXqmN57qqoa2MvWWoqiqOeU9kCz2aQoCqy1tNttYgzEuHT/RwJF2QQTDrge8ottenqaPXv2HPD91q1b+fu//3tOP/10rrrqKtasWcOGDRu47bbbOOqoo3jRi17EE57wBE499dR/91yvvvpqrr76aj70oQ/9u48lIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI/W8XBNjQWrDVYa3sPQsSYxWedju+1iwETwRiDMabuH70nEHGFI4Qw8N4YQ4wRAOcc1lpCCHQ6HQAajQbNZpP5+fm6DYD3nhhj/dloNOpYIQSstRRFgTGGEAIYCHh81cvFWNu7nMGFXl4xRrCxH7eCmMaLBB/AObz3dfw83263S7PZ7I0FxBix1tY5xeiJIWANGOcwsTeOxWAAEwEfCKE3J0+vf6q5jxEC/da9+MbQjw1VVfUWtSj676nrmuoMEILN6m+ydqY/l0hVdes+xrh6HilGUaRxYz2GMaZulwsh1DWp90N/jfK8HnYP9sev69Ff9/x9Hje1y8ceHivtH2MMzjnKsqyf5/MaFac+C335Wqc55zVLaxljpKoqvPc0i954hrQGsbcPAAtY5whxaJz++M5aooGqvxfz9cjzz+uUcknzDiFQFEW99/M1SfNJ80jzTfvaOUdVVVhrGRsbe9i1q89Xyr9/dmKMdDqdgVqldulcpbHz85CvU7rynPPfgDROvgb53oHA3Pws1oJzJdYajOm3CxBCpNUao6qqeu2MsThX1HlWlcc5Q1H09lFqG0JFr6yWGP3AHHp5eqBX42jSCossdckll/A7v/M7vO1tb+PNb37zkvfHHXccW7Zs4dWvfjWNRoOPfOQjGGO46qqruPLKK2k0GoQQeM973vOQ42zevJlrr72W9evX/5tzve2225ienv439xcRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkf84TIwxHkzDL3zyrzDGYIwhxkj0gdTVGEOjKDHQe5euEAih186VJbZ0+BDw3uO9r/taazHGUJYlnU6HTqeDc45ms4m1lna7TbvdZnJyEuccxhiAOk7KI8ZYv0/PnHN1W2sBIiEGAoABjCESqEIgxEhRFBTGQoz4ymP6MWw0hBABu1i8fj2MMfU8O51OPadh1lpMCBA9gdgbf2A1erGc69UpEAdi+RiJEQpT1l3yuY+Sr1H69H7wWWqT1mE499Quj9npdJbUwFpbX/m4aT+kvvl93n94PqPmNpzLcJ7D13D/4XvvPSGEun/KPc/t4Qy3z89Anlu+N+szEAImDp6D/Bqux5J1tob+xl5Sr/RZluWSZ/l+qKpqSdwD1TCvx8PVdzheqlHaIwAhBKqqotvtUpZlf3/21sRaW5/fUecpN5xDjHFgXYfXdmktAyF2sNZgTFoHS4z9eAFCiBjj6vMeQm8dY4BIxJiItQbnbN0m/c455+q5DOc48PvVT+k5L3z5Q85XZNgNN9zApZdeyq233vqzTgWAc845h7e//e0cccQRP+tURERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETk31lxsA07nQ7GGJxz9TNjDc5YrLX4qiLGiDGm9w6w1uKcIwI+BNrtDpFem7Is6/fWWmKMzM/PY61lfHy8jhNCoCzLuj1AjLHOIT2z1tJut3tj9/vGGAkhLN57gEgAoullaYwhRouJYGPEBAPW9N9FDAZDbwwTY7/fohjjwGWtreeV8s+f93K3vYjGLNbLpHF7fYgGTC+PODDoYo1z+Zzz+uTx0xVjIEZGxhmOMfw5aoz8eZrv4lixHj/1S2vyUPPI2w/XOUlrn7PWLhl71DxijDjnMMbUOR8op4czqkb5u/x9nl/v3HiiMZgYIUZsPn/AZudtuA6xt4iYEefiQPmNauO9H9gfg3slDqxF6p/2c1EUxBipsvM/PE5a8zTnPPaouufjj8p7eH+nuNZaQgj1WM65A+6hUXWwpgBCNk7KHYhQVRVFAUXRwDlHVXlCCPhYLa5ZvxbD80g1KMuy18d7vPd1u/p3LPz4+0/k59E111zzs05BRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+SoqDbRhjxBgz8AkQ6X2GGCAuthu+ogEXIQLWWqy1hBCYn5/He1/3K8uSGCMhBKqqIoRAURQ45+oxAUII9XfnHNbaJfnmuTjniMETQ8SkNiYChsI5KApCCHS7XQAMEGLEAib0Eg8h4MoC7z0hhDpuyqeqKprN5kAe9fxjxHuPMwZjLBgD/Xf1gMbU84pE0nR73/tt+mMd7JqlHAaZ/vBmoK0xBmttXf/hOPl9o9EYeJ6/H7UHUt557UZdw3V76Hkwsn/KYVSd6n2b5Tg8x1HPDiTFyOc0XK98zLzOzrl6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qvr1epcuXdLBwYH6vte1a9f08MMP6/j4WPv7+/qET/gEnT17Vmamo+tzPfLII7p69ar29vZ062236WB/X0dHR3r/+9+vxWKhpml0cHCgCxcu6ODgQMvlUu9973v1B3/wB7IQdP7cOV26dEmz2UyLxUKXL1/W1atXtVqttLe3p4sXL471Xb58WZcvX5aZ6dKlS7p06ZImk4n6vtfx8bGuX78us6DDwwMdHBwqxqCrV6/p4Ycf0pUrVzWZtLrtttt1/vw5mQXN58d66H0PabVcKIao8+fP6eLFi2rbia5du6b3ve99un79miaTqS5evKBz584rhKCjo+u6evWq+j6pmbY6d+GCZvt7MrNx3nw+18HBgc6ePavz58/LzHT9+nU99NBDOjo60v7+vm699VZdPHdey8VCD/7B+/Tg+96nnLMuXbqk2267Tfv7+8o56+rVq7p27ZpWq5XattX58+d19uxZubsuX7mi91+5rMVyqTNnzujc+fPa39tTzlnz+VzHx8fjmbjtttt08eLFcQ+uXLmitm115swZPfaxj5VLmh8f6/Lly7p27ZpCCLp06ZJuueUWtW2r69ev6+GHH9Z8Ph/nHR4eqm1bdX2vq9evrfeu09mzZ3T77bdrOp3p2rVreuSRh8c9OH/+gi5cOK+2nej4+Ejz+UIp9VKWDvb3tH9wIM+u+Xyu69evabFYyn0404eHh4qx0XK50JUrV3V8fDye6cOzh7IQdP369bGGnLMODw918eJFHR4e6sqVK5rP51oulzIz7e/va39/X5PJRGamRx55RKvVSjlnzWYznTlzRu36PTk6OpIkpZTUtq3OnTunyWSio6MjXb16VcvlUpLGefv7+5Kko6MjXbt2TcfHx0opaTqd6uLFi9rf39f169fHNafTqWazmc6fv6CzZ89qf39/4zetXCVuyaU8N8uSTDGG9W/eyW9jjHH9u5jH38oQgiSN991dMUaFKPVdJ5l/yD/owAdy9uxZXblyZfx+11136Su/8iv10pe+VHfccYdyzvr1X/913XnnnR/RPBaLhVarle644w5J0g/90A99SHE++7M/W+9617v0S7/0S/qCL/gCSdJb3/pWPfnJT9ZkMvmw5PpX/+pf1ed//ufr8z7v8/QlX/IlkqT3vve9+lf/6l/pa77ma/S0pz1NP/7jP66v+7qv0zvf+U79+3//7/WD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5sxOf6emvzVH2r/punLOYu2h99OxTp+JsixJKZHnOVmWkVI6tD8GkoGff8b/DxEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZEfBfZoG6aUSCmtemaMWXVNP7PWts8AqqqmLGtihCzL6XZn6PVm6HS6eJ9hjMMY276bnZ2j253BWk9ZVqysrFCHSIiJEBMxQZosIRkDBvIix2WeEAODwYDllWVWBisMyxEh1CQghEBZloQQ8N4zOzvL7OwsWZatWmuMkbquGY1GDAYD+v0+/X6fqqpIKVEUBd1ul06ng3MOgLquGQwGGGOYnZ1lbm6OPM/bPOR5TqdTkGUZCajqmrKqCCFgrMVnGXlR4LMMYy2pyfskr857fOaJBsq6YjAaEWIg63aYmZ0l63TAGnyekywEEsZZsk5B0e0QDawMBgxHI4y1dHs9ZmZnKTqdcW5iJMQIgPOeTrdLr9fDZxlhkg+MmfwOVKHCOMPc/Byzc7M474hEsFCHmuFoyGA4oI41WZ6RFznJJPrDPsNyyGA0oD/sU8can3myIgMLw3LI0soS/WGfZBI+82BhVI0YjMbjmUn+rLV47zHGUFUVg8GAGCPee5xzxBgpy5KqqjDGkOc5eZ7jnMN5R4iR4XDIqCzBGLI8Jy8KrHNUdc1gOGQ4HFLV4/qxzpGAUVkyHA7BmLbt/oUF9i8sMCpLnPdY5yiripgS1lqsc9QhMByNGI5G43iHw7ZNiJGyqhiVZbuGvCgoOh2yPMdnWTtuc41rL1HXFWU5oq4rjAHnLDFGqqpkMOivep5SJIQAJLx3hBjwmafT65B3cow1JBJYsN4SYiCmiHEGLIQYKKuSsi5JRFJK1CFQVRVVVRFjPOwbUBQF1o5jSimRZRmdTqfdC2tt+43x3tPpdNo+1eSMFEXRnqk0yWmznymlyZoOfauaGMqyZGlpqZ2naVNVFaPRiLqu2zMdQqDf71OWJdZasixr62vtd+9I38hmfdO/1z5zzuG9B6AsSwaDQftdcS7D2+ywsUWO1vbt2wG45JJL2LVrFwDXX389t9xyCwA333wzn/vc535I0R2dG2+8kac+9an/T2Ps2rWLSy65BDiUk++lydm1117Lrbfeyutf/3p+53d+56jn/M3f/E3OPPNMzj33XM477zw+9rGPte9ijLzwhS/k1FNP5bTTTuMP/uAPvp/lHGbv3r383M/9HI985CN5+MMfznOe8xwGg8ER2370ox/lvPPO45GPfCQXXnghX/rSl9p3DzzwAD/5kz/J6aefziMe8Qg++clPtu/W5kNERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5KH4o21ojFl1rX1e1/Vh7ZxzAMQY8d5j7fh3CJEYK4wxWGvb5zFGjDGklEgJQgiklHDO45yjrisgtf2McZO/4/nCpL+1DleMl9aMBRBJk/nsJI5AVVVtrM45Qgir1ua9P2zdzd8QAiGEdu15nmOMoSxLyrJsxzTGEEKg3+/jraPJXpOfBFRVRYxx1XNgHO/UfJFEnueEFKliDSU4a7HOYazBYBlWI5xzZL2MmCJ1CJR1hbWWotuhHpWEEA7by2ZtCUgxklIipkRqEjiJZ9wQ6qpelaNQjXNXFEW7j82YTT8TD82ZJmM3+046fE+ae2MMRVGQUiKEwHA4JBrw3pNl2aH8xNiura5rvPd0Oh1SSu0+jGvK4awjxUiIEWJsa6OJr7m31hIn+Ziuj/F6IjFGnHPMzs4SQmA0GmGtbfMSY6Rcs7/TNTQd1/S5mV5TY3ovxvHUxMl906+J0Vqz6llK4/ovioIsO7TeUFfUJAjjcYw1WDPer6qqxvtEwqTxWjC0fVNKhBjAGPI8J89z4iQnzdqaZ9N1UFUVdV23+++9b+uhib/JuXOu3ePRaNS2b2psOn/ej8/9YDAghIC1Fudcu4ej0Yi6rnHOked5277Ja5Zl7dqcc218cU19NHvSrMs5R4yhbTdd39P7Vdd1WxsppfZb0exLqFfXl8g/hre+9a3t/c0338yOHTu48MILf4gR/Wh46lOfyvXXX89LX/rSo2r/uMc9jle+8pV0u12+9KUvcfHFF3PvvfcyMzPDO97xDr72ta/xD//wDxw8eJBHPepRXHrppZx99tn/V7H9p//0nzj99NP58Ic/TAiBn/mZn+Ftb3sbz3ve81a1W1hY4FnPehaf/OQnOfvss/nUpz7Fs571LL7yla8A8PKXv5wLL7yQj370o9x2221ceeWV7Ny5s/3mioiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIgcDXu0DUMIxBiJMVLXNVVVUZYldV0TY8RaS0qJEAIpJYwxGGNwzuG9J89zvPc458iyrG0PYIxpx2h+T1/OOfK8IM9znPMYYzHG4X1OluV4n2GMwxqHmSwppdTGAYkQapg8a+KPMWKMaedNKWGtxXuPtbZtZ4zBez8Zi3Y9zrm2vzGmHXu6fYyxjWMcU1y1Rmstzjmcc20M0znLsqx9F1OkDoE4GcNaO557ksumb7MPIYZx/rxr15RIeO8P/U6p3ddmzCbuVXNM1t6o63rVfV3X7Vqa8ZqYQght/TS5afZ+7fjW2nbNTZvG9J4aa9qcrh3bObdqHdPjNPfee+JUrTY1EEKgqipGoxEhhMPmjzGuWk8zXvO32bsj1fL0Oqf3q6n9LMvaNU23mT4nzdqASSyr66tpV9c1w+Gw3Ysmhuk6b8ZqzuP0OtbuT4yRqqoIIbRraa+p9TX5b9qnlFbtdzN3URQYY9rzNZ2j6fU1MXjvCSG0+9KsZXrv156j6Rw2bZs2IQTKsmz3sNnrLMsoiqKtv+mYpvdjOpd1XbdjPVQtNLXT7E8zztp6t9ZhrUPk/9bmzZsB2LhxY3seLrnkEm6++Wb+4i/+gg996EO84Q1vYMeOHbz1rW8F4O1vfzsXXHABj370o7n44ov50pe+BMCNN97IZZddxtVXX81ZZ53FYx/7WL72ta9x5ZVX8vCHP5zLL7+c5eXlh4zlz/7sz/jZn/3Z9ndKiVNOOYUvfelL7Nmzh0svvZQf//Ef5+yzz+YFL3hBe0am3XrrrezYsaP9/ZWvfIXt27e3vz/2sY/xEz/xE/z4j/84j3nMY7jllluA8fnbuHHjqpx8L03O1q1bR57nnHnmmSwsLPDAAw+0bbZv384Xv/jF9vd5553HrbfeCsBP/dRP0e12ATjnnHNIKbF3714A3v3ud/Mrv/IrbVxPf/rTede73gXAO9/5Ti644AIe9ahHce655/LhD3+4Hf+ee+7hqquu4pxzzuGRj3wkr3zlK4Hxd2RpaYkYI2VZ0u/3OeGEEw5b07e//W02bdrE2WefDcDjHvc47rzzTv7u7/4OgD//8z/nuc99LgDnn38+xx13HH/91399xHyIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiDwUf7QNnXOklDDGYK0lxogxBgBjDDFGUkqklA7ra60FIMa46tn0WFVVEWPEe0+e5zjnMMZQliVVVVGWJXmeYS00U4QQSCm1Y2HMZP5xnE18zrnxPCTSZO4m1um5jTF47wkhYIwhz/O2Tb/fJ6VEURSr1t6sf1ozd5OTZv0AMUSMO7Tuuq6x1pJlGXmeE2OkLEtMu5ZDa40hElOkrKp2num9sNYSQmj3qq7rdp3N2pxzxBRIMWGm4gVW9Vm7rrV7a4zBOde+m173keogxrgqD9Ptj/T8SHW0en5LiuGIOW7aNvE3+ZnOxfT807XS7PeRYlr7bG1M03loxmlq73utaTpnTYxrc9ncr90H1qxjur4b7RlZM3eMETMVd1M7Td8mv83ftXlqx15Tc01tNGd3+vvQxNm0ybKsrdsYIzFG8jynKAqqqmIwGLTfgzzP232oqqqdz3uPtbY9O03evfcYY6iqqs2N976NZfqsNTFM79Wqszv1/WrW07QZtxt/e6bz1O7R1D5Mm66rlBIxhMNqROT7cdtttwHw/ve//7B3P/3TP80VV1zBjh07ePGLXwzAZz7zGd71rnfxyU9+kqIo+NSnPsUzn/lMvvrVr7bj/f3f/z3btm3jmmuu4ed+7uf47Gc/y5YtW/jZn/1ZbrrpJp7//OcfMZaf//mf50UvehF79uzh2GOP5dZbb2XDhg2ce+65DIdDPvzhDzM7O0sIgac85Sn8+Z//Oc94xjOOeq3f+c53+K3f+i0+9rGPMT8/z7e+9S0e97jHsWvXLk488cQ2B01OAK6//nquuOIKrrjiisPGa9q/8Y1vbJ9dccUVfPCDH+RXfuVXjjougLe97W2ccsopnHTSSQDceeed7T3A9u3b+dznPgfAk5/8ZK6++mqMMezatYsLL7yQ3bt3UxQFv/iLv8jll1/Oe9/7XgD27t0LwCtf+Uqe9rSnceyxxzIYDHjmM595xDWdfvrp7Nu3j89+9rM89rGP5UMf+hBLS0vs2rWLk046iaqqOPbYY1fFdeeddz5kPkREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREjsR/vx2staSUMMYAYIzBGENKqX2+9mraWWuJIRJDwliLNRaDIZFw1mMtOGshGVIEaxydogsdgwGG5QjnHInxOCEGYoh44/DOE1OgDoGUwDlLiokQalJKOOfGcViLnVwhBFJK7e8mxmYdTZ8YI845nHPEGAFIKbXrcs616wcIIRBCaNtOrz+QsAaMsxgDKQbKuqKsa6w1gMEYMBhiTIwbQSKRjMEaS0iHxo0xrspzjJGyLMmyjDzP23U2V13XOGPH48WIMRbnxmsPIbb5sna8N5PogUTzMyWwtrlPpHGAmOY/xhAIbf8mtpACpMmI1ozHMxCJYMZjxRTbv03fRBqPZab6poRJZlX9TdfhdK1OSym1++KsbWMYzz8OL45XS0pxvAeTNRvDqrpOCWKoSTShTQbgUAwmhva+CWV6nBRXr7vJnzUW6yzE8T4176frDjOuIUxqx20TPF4BxqS2tk2zxhTHscdEGgew+sxiSHEcU0yREEKbT2MndUZspxqf43HtTZ+dZrwY4/jsT/K+9lxMfzvyPMc5RwiBlZWV9ux579u+dV238XQ6nXacuh7XrveeEAKj0YiUEkVRrNr/Jr4QAmVZYq3FOUdVVWRZ1sY0XT/N77bmJ3XUnGvvPTEG4mS/m6vpM36/+qyurUtjDH7yzRH5p/LBD36QL33pS1xwwQXts/379zMYDAC46KKL2LZtGwDnnXceVVWxZcsWAM4//3zuuOOOhxy72+3ytKc9jbe//e38h//wH7jxxhu57rrrgPFZ/o//8T/y6U9/mpQSDzzwAI94xCN4xjOecdSxf/SjH+Vb3/oWF198cfvMWsudd97J6aeffsQ+b33rW496fIArr7ySV73qVfzKr/zKUff5q7/6K171qlfx8Y9//Ijnfa2dO3fyrGc9i7vvvhvvPfv372fnzp2ccMIJfPrTn+ZjH/tY23bz5s0A/M//+T8566yz+MQnPkG/3+eKK67grW99K9dff/2qsdetW8d73/tefuM3foPl5WUuuugizjrrrPabKiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLyj8EfbcMYIyklgPbv9H0IYdVz5xwAxphxu9i0NaQEJoGxFmMMmbN0ik47Rl3XjEbDcYDe473HWkvCkBj3MRZMEw8QU8I6h4kRA1jnSClR1YmUEq6JI6V2LSkl7CSGJt4QAnmek1JiNBpR1zXOObz343GcW5ULY0y7xumcxBjb9ymlQ3lIiRAjZvLeZxnZZL66rokx4pw/lNupNRprMBhCHSf34zbW2PE6Jr+dHcdYlSUJSDGBYZwXY8a5TInYxNvMZcZ7Mt4gQ7ObxoC1bnVMZpy/mA7lsslFs2am0mKMWZU3N9kf0zRK47ET4zEPPR6P2/wdDzYez5sjl28zf7POtbXaCDG2Y07vYbMmVjdv12atxRpzKF+rGo3T03St6vqwczOdpybWNLUPztpDuTPjfU/xUDtjDLR1N661cX4PrWG8J7GtWWNo2zdpSCnSTNTU0ep1HNoPa+245qw5rL5DjIRYtWcpxtjG5Jwjz3NCCO3V9GtqYFzzrj1veZ6vytc4/kP5asZv6q75DbQxeO/Jsoy6rtvvSlEU1JP9mD630+fzUC4PzWGMIYRAlmVTuU2r6mHtvja/7VR9TI83Pc50XcYYWHVwRH7AUko85znP4XWve90R33c6nfbeOXfY77quv+v4v/RLv8R1113Hr/7qr/K//tf/4r/+1/8KwO/93u/xwAMP8PnPf55Op8NLXvIShsPhYf299+13A1jVJqXEk570JN75znce3WL/L5x//vl84xvfYGlpibm5ue8aD8Bf//Vfc9111/HhD3+YM844o32+bds2du/ezUUXXQTArl272LZtGwDPeMYzeP3rX89VV10FwMaNG4+Yi2lvfvOb+eM//mOcc8zNzXHVVVdxyy23cP311x/W9tJLL+XSSy8FYDQaceyxx3LWWWexadMmvPfs2bOHY4899rC4RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERESOlj3qhtauugBSSsQYCSEQYySl1F7Ns/ZvDKQExhjquqbf77N3716+853v8PWvf5077riDu+++m/379zMajTDG4L3HWksIgdFoRAiBqqqoqooYUxtLjJGyLCnLsn0fQiClhDEGay3OObz3GGOIMVLXNTFGYoxUVcXKygr79+9nz5497NmzhwMHDlDXNVmWkec51lpSSm0+pte+9ooxtjkzxrTtAZxzGGMoy5LBYMDKygrD4ZAYYzvXdJ8QAnVdrx4/BFJMENL4PgRSjMSqZjgY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+n2Tx2aupi7W1kPzt5ln7VzGmFXxxxipqoqqqqgne9i0LcuyzVEzbzOmMeaweJurWc/a3Kztf6S8NFdT79/tatp8t/GbWKbfTY/dtGvOxPSZadqujaUZc3rPptc7HZ8xph17+poee3r+Zt6m/9rf02to6rnX67W1OB1Xs58Ww+zMLM46+svLLDz4IIsHDlCNSkwCYyCFSDUqGQ2GOGuZm53DGcN9997Ll77wBf72ttv45te/wd4HHqAcjghVTTUaUY5KUog4a8m9J/MZmR2vz6RIDIFYB9J3yU9zee8Py0Gzjul6b3K9Nv/TuZwe41BeoK4Tdb26ZkS+H5s3bwZg48aNOOcAuOSSS7j55pv5i7/4Cz70oQ/xhje8gR07dvDWt74VgLe//e1ccMEFPPrRj+biiy/mS1/6EgA33ngjl112GVdffTVnnXUWj33sY/na177GlVdeycMf/nAuv/xylpeXv2s8n/3sZ9mxYwePeMQjuO6669ixYwe33nrrqrgaV111FTfeeCMA73znO7ngggt41KMexbnnnsuHP/zhtt0ll1zCS1/6Uh73uMdx6qmn8tznPhfgiOu79dZb2bFjBwDPfe5zWVpaYseOHZx33nncfvvtnHnmmau+04997GP5yEc+siqXzd/vZd26deR5zuzsLN1uF4ATTjiBxzzmMRRFcVj7brfL7OwseZ6zbt26o5pDREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREROSfI3+0DVNK7TXNGNM+izESY8Ra2/42xmCMAWMmA4EBrDEkYzDWtmM457CT3zFG0qRNVVXUdU2Rddo5rbVtPMYY6rpmZmaGqqoAqOualBJ1XeOcI8ZIiBEA51z7bHodzjnm5+eZmZkhyzJGoxHdbredy1pLlmXkeU5KicFgwMGDB0kpccwxx5BlGd57Op1xnCEE6rrGWksIgaosyToF4wwcmtcYg5k8a/o0uQghjDcq8zhjqeuaPM+JzdqKAoCyLMmKHOcdZVkyKkuGgyEY2hw1e1DXNbaqqKqKLMvG76b2+GhrIYSAMYYQQhuntRbnHHVdt/vUrHN6vW1Mk/FW5WLyfjqetTE2V1MvzVzTfaf390ima3dtjEda75GuZn0PlafmDEzPMd2neT+9junx2/Mzye3a2Joxmhpt1hxjXDXGd9PkoGnbjNOM9VB70tw75+h2u8zNzbF161ZmZmY47rjjmJ2dJcsyUkp479tz2sTW1HpKidNPO43jt27lwQcf5L4HHmC40mfDho1sXLeeSCLU47aj4YhyOMQZy/zMLBbDzm99m7Ku6c70WLd+PbPdHkWWkfuMIsvodjrMdHssHVzEApn3ZM4RAWcs0Vq8sQyq0apvmbW2zWsIAe/9Q+Zgba00uVvb3lq76t3aNibB9PdB5Pt12223AfD+97//sHc//dM/zRVXXMGOHTt48YtfDMBnPvMZ3vWud/HJT36Soij41Kc+xTOf+Uy++tWvtuP9/d//Pdu2beOaa67h537u5/jsZz/Lli1b+Nmf/Vluuukmnv/85x8xlrIsefrTn87b3vY2LrvsMv7yL/+SG2+88ajW8eQnP5mrr74aYwy7du3iwgsvZPfu3RSTf/O+/e1vc8stt1BVFWeddRb/5//8nyOu79Zbb23HfMtb3sKOHTv44he/2D7btGkTH//4x7n88sv5whe+wN69e/nJn/zJVbls/gLccMMNHHfccTz3uc89LOY3vvGNADz2sY89qjU+/elPb++Pto+IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyD9H/mgb1nXd3htjsNZijCGlBEAIob1PKRFjJKVESgnvPdZAignS+ErGjNvGSIwRgCzLxn1IVFVFnudkWcZKvz8O1nvyPF81fhNLt9vFWotzDoCyLImTsZ1zZFk26RNxxhFCIMRAAoy11CGQRkO88xRFwdzcHNZaQgis9FewxuIzz759++j1eszNzdHr9Vg4cABS4mFbtnDKKaewsrKC877NjTGGECNlVVFWFd0Ycd7hrMU7T1mWjEYjTBrnMIRAWZYUec7s7Cx5njMajca5c+CspdftsXnzZoDx2vKcGCOj0YiyLHHOUcdAWY3vU0qESS6MMZBMmxtjTJuzJuZmH6eZyX4ZYw5r16xz+t2R+jaa/bPWYq1tnzW/U0qEENq6cM6144YQqKqKEELb9khxAO3Yzbu1sTTjH8mR1tP0jVM1e6T1PtS6v9vvJvbptTRzTd9Pn7smjul1TtfdkeZZO2czzto5p+et63pVLqbzllKirmuWlpa45557uOOOOwghsGXLFo499liOO+44jj/+eObn5w/bnxgjdV2P99qM63rTxk0MhkOGVUl/eZmlg4skY0gket0u+cwM5WiExXDKKadw4gknsnjgAAeXlugP+yyvrLRnP6VEipHlpWX2PvDAuJ+1xBAxKUECCzjrxufIeXCHamq6Hqfzs3YPp2s4Tc1rjMFM2hgme5sm38FxB1J7myb9EmAOm0fkB+WDH/wgX/rSl7jgggvaZ/v372cwGABw0UUXsW3bNgDOO+88qqpiy5YtAJx//vnccccdDzn2N77xDbz3XHbZZQBcfvnlnHLKKUcV186dO3nWs57F3Xffjfee/fv3s3PnTs4880wAnv70p+O9x3vPjh07+Pa3v81FF130fa//RS96EX/wB3/A5Zdfzh/+4R/yvOc977Bv9bRXv/rV3/ccIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiL/0vnvt4MxBmMMACEEUkqklHDOkVIixogxpr0HcM6N+07GSClhmguIMZJSoqoqQgw47ylXVvB5RjLQHw7YsHEji0uLxBgJITAajYgxUlUVw+EQgH6/D0BRFBhjqOuaLMuw1lLXNSYlACKJuq5JKeG9Jy9yQgwMR0PyPKcKNcPhkFE5otPpkBcFzjmyLMN0HQkYDIdY51i3bh0hBOq6Zv/CAnVdY63FWkuW5xhrCSEA0O12sdaRDBg/zl8IgRgjzto2NzFG6rqmrmucc5RlSVVVpCwnyzJWVlbGm+f9uH+K5J2CXq+H8568UxBCoCgK8qKgqipijJRlSQgBn3m891hrV+3n9L5O/57+a4zBWtvubfPce9/2DSHgnGvbNv2nayKl1L6z1rY1ZIxpa+hItdfkdrr92vGb33aS0+lYU0ptfX63Gp9uf6QYpp+vjbWJae36147ZnJ3m99qcTv9t2oUQ2viba+0eTse49v2RNGehyed0n2Y/mmd2qk6b+Zqcb9y4kTPOOIPZ2Vm2bt3K7Ows3W6X+fn5tk+zf828zXmeW7eBGCMrKytUVYWzFu8cbnKVZUmoalyWjc/ag/uIdWD9/Dzr1q3D5zlhb2Dx4CL95RW89xQ+o8hyZrpdunnB8sFFcA5ixCSwcOivMeR5TrKm3Ydm76b36Eh10uYKSJjxHgHWGMxkrc4YTEzEOPlmTs1hrSUBCahieMh9Evl/deONN3LTTTdx00038dSnPpXt27eTUuI5z3kOr3vd647Yp9PpsGvXLk4++WQAnvzkJ7fvnHPUdf19xTD9LWr+DWs0/5YDPOMZz+D1r389V111FQAbN25c9b7T6RwWx/bt29m9ezdf+9rXePGLX8yuXbu49NJLAbj11lvZvn37YfH8/M//PC972cv4whe+wIc+9CF+53d+5yFjv/baa7npppt4/OMfz6233vp9rVtERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5F8ye9QNrW0vYwwAKSVSSsQYcc6RZRlZluGcw9pDQxtjMMZgJ5dZczVtU0pYa+l0OlRVxZ49e7jjjjv46te/xgMP7qWOkU6nQ6/XI89zut0uRVG0YxRFgXOO4XDI/fffz+7du7nrrrtYWFigqiqMtXjv2zVYa8nznE6ng/eewWDAnj172L17N3feeSf79++nrmsAyrLk4MGDpJTaNYUQOHjwIHfddRe7d+/m3nvv5cEHH2Q4HOK9pygKYowsLCzw4IMPsv/AAQbDAXWoCSFSVRVlWVLXdbv2oiiYmZnBWkuMEWMM3nvcJPdZlhFjZDQasXfvXr79ne9w7733MhqNSEAVanbt2sXOXbvYc//9DIfDNl6fZeRFgZnam+k9bNbW5OdI1/S7tbVhjGnHmq6T6XlSSoQQVtXGdI00v+1kr5o813VNjBGgrbW18363NU2bjmX6/fT8Tf+6ro94hRDa/fle52bteZm+nz4r0++bXHvv23PlvR/XgnPtvfd+1Xxr98o5d9h+NXMdad1NzE3fZg+a8ZrnzdWc1/n5eTqdDkVRsH79erZs2cLmzZtxzrG0tEQIoR2n2b8mthACBw4exBpDd3L267Ki0+ngnGNhYYF9+/axc+dO7r//fowx5D5j0O/z4IMPcnBxkeFgQAyRDRs2cMIJJ7Bx40ZGoxH33Xcfe/fuJYSAc46iKMjzvM1js4Yj5SjGSAihrb8mV9N/1+Z+er+n98Ba29ZUUztH2jdrx5f863DJJZe0e3/uueeuerdv3z663W77/uUvf/kPJIYrrriCd7zjHdx5553AuO5vv/32/6uxfuu3fmvVN+jcc8/lzjvv5Oyzz+Yd73gHn/jEJ/j2t7/dtj/ttNP4/Oc/D8DOnTv59Kc/3b5bWFjg5JNPBuAd73gHCwsLRx1HWZYAFEXBwx/+cHq9HvPz88zPzzMYDNr3AN57nvvc53LFFVdw5ZVXsn79+jb+G2+8cdW4p556KhdccAFnnXXW950bEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZF/yfzRNgwhAJBSOuwyxlBV1WHPvPdYa4kx4kzCWIiTdzFGYoxkWUan06EsS5xzhBCYnZ3lxBNPZPfu3ezbvx9jDPsXFti0aRMzMzNkWcbCwgIpJbrdLjHGdj7nHBs3bqTf73Pw4EF27drFYDBg27ZtuPl5XJ5jrcVaSwiBuq5xztHr9XjwwQc5cOBAO+6GDRuYmZnBe0+WZRhj2rX1ej2staysrHDgwAEOHDjAaDQiyzJCCBxzzDFtuz179rC0tES9exejcsSGjRvpdbt475mdncU5R5qsIcZIXdfkRUFRFDjn8N5TVRUA1lqW+yvs37+fBx7cy8GDB8mLnBAD/eGAXq9HVVXce999bU5n182T5zndmR4rgz6DwaCd11oL0K6t2bMQAjHGdr1NG2MM1lq896SUqOuaqqqIMbbPu91u27+pmybnTX/n3Kp8NmOllNp5m3fW2vZ5czXxAMQY8d5jjGnHBRgMBnjv23cPVbvTa5u+pudvYmrmbtR13a6rkVJadW6a39Prb9o1a5vuv/bcNe+bNs14zRqm89y0CSG09977VfFPr8taS5Zlh407Pdd036Zm1u5JlmXMzMxw3333cfvtt/PlL3+ZE044gWOPPbY9s51Ohxgjg8GAoijo9Xp0Oh2qquLv/v6r3LV7NzOzs4yqknXr1tHpdDDGMBwO2bNnD3v37uXhZ57Jhg0bsM4yGAzYdf/9FEXBunXrCDHivGPTpk1kWcZdd93F17/+ddavX88pp5xCr9fjmGOOaeNo8matpSzL8bfJu7aOQwhtXouiWJXnJg+r9haIKbbPmjPR1ElKqf2OTNdRm2MCWe6AQ/Uj/3p8+ctf5pOf/CQXX3wxAG9961sZDoc/sPl++qd/mpe85CVcf/31/PZv/zZXXnkldV1TliU/8zM/w3nnnff/NP6OHTvw3vP1r3+dr33ta1xzzTWcf/75nHvuuW2bl73sZTz96U/nnHPO4ayzzuL8889v373xjW/kqquuYv369TzhCU9g27ZtRz33rl27eNSjHsXzn/983vzmN/PiF7+YRz/60QA8+9nP5pGPfCSzs7PcfvvtAPzyL/8yv/mbv8kLXvCC7zruK1/5Sqqq4rjjjjvqWL75zW/yxCc+kX5//G/vCSecwG/+5m/yvOc976jHEBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5584fbUPn3KrfKSVSSsQYSSlRVVX7bFqMEWcsMQUwk3cGMAZjDL1ej5mZGYwx7VjGGObm5znzzDPZfsoppJTIsoyUErOzsxhjyLKMuq7pdrvtfYwRgPn5ec444wxOPfVUAKy1OOcwTeyTv8YYrLXkec7WrVvZsHEjBhiNRqSUyPOcLMva9VprscZjnaWqKpxznHjiiTzsYQ9jNBpRliXHHHMM/X6fEAIAW7ZsYf369QyHQ5KBZMexO+8xwOzsLL1eD4PBTPIXQsAYQ55leO/xfrxNDoNzjvn5eTZu3MjJJ5/MYDgk857ZdfNkWUZRFMzOzXHKqafS6XaYm51jVFeMRiOcc8zOzjI7O0uWZe3amjw0czf7bSZ71OyptbZ9xpochhDa/a+qqm3nvT9srGafY4ztNV07zfjTf5u+07Gubd88a55777HWHlaz0+s5Uk1Pr615vjaWadO/m7ZNnNbadn3TbZpndV2vGqfptzb3a9s0mppfG8faGKf7rr2qqjpiuyY/zdmbzsP0/sG4jk899VTyPGc0GnH33XeTUmLz5s1s3bq1rWnvfXuWjDHMz8+zbds29u15gK9+7WtYa3nUjz+ak045maIoKMuS2dlZut0unU6HmBJlWVJ0CtavX8/dd9/NV77yFbq9Liefcgrbtm1jw4YN4/OT51RVxc6dO1lcXOSCCy7Ae0+MkRACMSWMtRgm+zFe2KqcHimXa+ut2QfDoe9Ek6vpNs65dv4YI6QE07WeYE1Jyr8SWZZRVRVvetObuPjiiwkh8OY3v7l9vtb+/ft55StfyYc+9CH27NnDxo0bedKTnsTrXvc6tm3b1rZ705vexOtf/3oOHDjAe97zHh7zmMe07/7iL/6C7du3A7Bu3TpmZ2f5u7/7O+q6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s+kzvVfT38Hpv8453GSetTXV1OCRzt147w0pIv/KWGt5/vOfT13X/Lf/9t9405veBMALX/jCw9q+613v4itf+QoA73nPe/jqV7/KZz7zGay13HvvvfzBH/wBAL/9278NwKmnnsp3vvMddu7cyfnnn3/YeC9/+ctJKfFLv/RL7Ny5k29/+9tceeWVhBC44YYbjir+V7/61ezYsYO3vOUt7bOHP/zhnHvuuZx22mntv5vPfvazuf322znzzDPbdr/2a7/Gzp072blzJ4973ON4xSteQVVVPOlJT+Kuu+7iG9/4Bi9+8YsB+P/+v/8PgP/9v/83f/u3fwvAH/7hH/K1r32ND33oQ4xGo+8Z6yte8QrKsmT9+vX8/d//PUtLS1RVxe///u/z6Ec/ms997nNt21e+8pV87nOf4wMf+MARx7rlllv4xCc+AcDv/d7v8fWvf52vf/3rzM7Osry8zH/+z//5sD5veMMb+MY3vsHv/u7vArB7926+9a1vAZBlGWeccQZnnHEG69at+55rERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH558J/P42NMRhj2ntrLSklUkrEGNt7gBgj1trxZQwOhzGGGAKkBAYSEGMixJqUEtZavPdgLXVdU9YVKSWcc+2801JKhBAwxtDpdBgMBmRZRp7nOOew1hJCwDmH956yLKnrGmMMWZbhvcc5R1VVAG28zdjTa2rmSmn8rhmnedfkZn5+HmstKysrjEYjUkrkeY4xhhBCO4+xjhhCOy42YTFt7kiJNInDe493bvzeGLCGsq6wk3d5nhNCoKrr8VqcxeUZXWvwVUWWZxhrcZUfxxviqvUaY9q1fi/NGpr1Tu+/MQbvPcYY8jwnxjjJWWr7NHtZVVX7/Eg15JzDObeqzdq9b+pv+tn01cR0pBqeXvN0TU/XeJOb6bpey3u/KidH02c61rWxNWuKMbbPpt+vXWMT53fTxPdQcUzPuXbs6RiaeaZz1HDO0el0sJOzOxqNCCG05yTPc8qybMfJ87w9dwAbNx9DHQJL/RWMsxS9LpFEWVf4LGPzloeNvw95RuY9c3NzeGvbM92clawoKLod6rpmOBxR9VfIvCcrCkJVkTCYlMBN9slMzvokriPtyZHWO52/9huQ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RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERES+3CQPt6ExZvKL2fU8xkiMEedc08ZaSwih6WeMIYZI4tzOu0i/3+fUqVPcfvsdnD+3SpZlXH755SwvLwOGzc1Nzp49S4yRmZkZiqKg3coBWFpaYn5+nm63i7WWPM9JkoR2u02WZRhjGI1GhBAYjUaMRiNijJw6dYr77r0XHyMucWRZRrvdZmlpibn5eZIkwRiD956qqqiqihACxhicczjniDGytbXF0PTpdrt0Oh3m5uYgRubn55mZmSHLMrY3NlldXeXUqVPce++9JElCVVVsb29jjGFmZoZut0ueT9a0vb2N957hcIgxhvvuu497772XkydPkmUZR44cYXZ2lna7TTSGNM8okhFFUTR7UVUV/X6fT3/60xw7dozLj1/Kvn37yLKMGGOzH9Zatra2OHXqFEmSMDc3x9LSUrPGqqom+W63cc6xtrbGF77wBU6fPs2+fft4xBVXNPucZzkz3R6LCwscOHAAZy3nz5+n1Wpx9uxZbrv1C5w+dYrDhw83+5TnOYvL+zh48BC9XoeTJ0+yvr5OURTMzM6wuLhIp9PBe0+73abVyun1enQ6HSAyGBSUVYW1KWGqPuu11bVYlmVTn9Prr39DCIQQiDHivcd7/4C6nW6/t+7r59NzTPefPh91u73v6vbWWrz3u8bbG8feMaf77n13sTXvjX3673re6bmmY987xu5nkcFgwOc+9znuuucurLWsrKxw5MgRjl92nIMHDxJCwHvf7E+MsYl7c3MTM4YkSej3+2z1twnWML+wwMz8HM655myMMBAjPgbWNzYYDoZkaUq73SVNU4bDYTPPYDAgz3NsYrnttttIkoSyLPHeN7XhnGNclVhrp/JiMIamLqyd5LgsJ+2SxDZnarKuaqedwRi3K/fTv3X7uj6na6uuXe8DIg9XXcPTPvWpT/GEJzzhSxSRiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIh8OUoebkNjDMaYXc9ijMQ4uffeE2Mk+Pp5rFsBEWstxhiqqqQsx1gLy8uL9Hpdsiyn2+0xGo5ZXFykqirW19e5/fY7OH36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xBg5e/Ysg8EAomV9a5MkSUjTlCNHjtDtdun3+2xtbeGcYzgcEmMkTVPSNGVmZoZOp4MvS5yx9Lo9jh09SlVVhBAoy5L1tTWSJCXPM44cOtTEBDDoD/C+otNu88hHPJLLj19Kv99nOBwyHA7pdrskeUYgMh6P6XQ6rK6u0u/3J2t0CUVRUKUZrVaLViujqEpijISqIlQVhIAFnDEkzjHT6XL08GFmuz22t7cpx2O2NjbI04wQKhLrWF5aYid99Le22drcJM9zFubm6LbbjMdjAGKIECOzMzNUK/tw1gIGy2R/fFVBjCwtLtJpt9nu94khMOj3SZ2jnbc4sG8fWTJZR397myRJWN6/gktck6cY42RNIeC931Uj9fvpdnX+vfcXrbe6/fTfF6upenxr7UXbTP99sTmMMTjnHvCuruMQwq46DyHsmmfvWaivut30WNP96nd1rqbj/2JXvebp+af77t2TL2a63cX6fLE8VlXFxsYG586dJcbA0aNH2bdvH1VVUhQFSZJQliV5npNlGc65Zv+LoiQECGGSC2sts7OzLCzM41xCVZWEEMjyDAgU44KyLGm1WnQ6bZKdGhwNh3jvCfFC/eV5zvz8PC5Nmv2BC9+bXWsykOyqA8P06xgNMYbm2eQ37uQrTAaY/H/n14AxGCACcWd/Y5ycxzrDxuzUjbU7g0aI4Yvumcg/xDvf+c7m/sYbb+TEiRNce+21X8KIRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETkX5Lk4Ta01mKMwVr7oO9jjM3fxpimvbUWaxxECCEAk1/vPd57qqqiqiqS5EI4zjmSJMF7T7/fxyYOX0WKoqDb7dLpdFhcXGRhYYFTp04xGAyoqoo0TUnTlBgjWZaxsLCAc4711TU21tYoxwWddpuZuXm89wwGAzY2Ntjqb+A7HWZmZlhYWGB+fp6qqjh79iyrq31KU2AxHDp0iJMnT7I9HGCtxTmHMYbgPQBlWTZrjDFidnIDUFUVxoCvKoiR6D0mRiwRYsSEgDOGdquFcw5fFAwHfcqiYDwc4ccl42KIc46VlWX27duHMYZz585x5swZtscFvqxYXl6me6BLjJHRaET0gW6vR7LsSKzFe481hmG/z3AwIIbAwvw8Rw4fJsbIcDhkPB4TQ8BZy+LCAtYYzp49SzEeMy7GlEVBmmckSdLkYHr/YozN3scYCSEQY2yuqqoIITS5qmvFGLNrjOnfuu30s7rOpmu0fl7X2MXmqGuvjrEec7rtdD1P39fvmz2eGrcew3u/a7x63XtNx1+3CSE0ebvYNT1/nZfpdTdnbk8+9+Ztev46X3tztneuvXsCMBqNWF9fZ2Njg/X1NVZXV7nkkkvYv38f8/PzdLtdhsMhzu2uhSRJyPMUsJw7u8poNMJaS7vdpt1uXzhLBoKviERC8BgTabdzsiyjLEtWV1c5d+YsxbCgN9Oj3Z3Ufp7nzbqyLGvWVZYlWTap3RgjgXoPp/chEMLeGps8n+xzAAwx+ib/k3NgiTFM2k3tB9YSQqCqKuLUnhki0UAwEUMkxQIPrBORh2tlZQWAxcVFnHMAPOMZz+A1r3kNWZbxnve8hw9+8IPccMMNfM/3fA/XX389v/Vbv8Xb3vY2yrKk1+vx1re+lcc+9rHccMMNvOtd72JlZYVPfepTzM/P8853vpMf+ZEf4bOf/SxHjhzh3e9+N71e72HF9ta3vpX//b//NzfeeCPee77v+76PO++8k+FwyAtf+EJ+/Md/nN/7vd/jl3/5l/nABz4AgPeeyy67jPe///3MzMywuLi4a51fTJ2Hubk5siwDoNfr0W63m3sREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfmnSR52w2R30xgjMUZCCMQYATDGNO+NMVhrsdZijCHGANHgnMM5R5Ik5HlOlmUkSdK0L8uSoigYDoesrq5y7733cvr0abJWziUHDuGco9VqARBCoKoqrLWkaQqAtbaJazrWEDxbW1ucPX0aX3myLCPPczqdDs45sixjNBpxzz330G63OXr0KMvLy+R5TpIknDx5krIsufPOOymKgs5Mj5nZWYqiwMaATSZxjUYjkiSh1W4RQiBJEpIkwSVuJ1eBGALOWfI8o91qURQFaZpgraUYj9nY2OT8+fPcf//9rK2t0Wl3OXz4MN35eayD++67l9OnT3HgwAGOHTvGwsICSZJwzz338Ld/+7cYYzh27BiXXXYZvV6viWE4HFIUBcZYQgjNPlRVhfeeEEKzJ2VZsrW1xdraGufOneOOO+5gc3OTw0eOsLC0hLW22ct6/621zZpDCBhjdtVEvS/13ky/r++ttbva1u9ijLvGmm5T19j0WHvb1PFdqMfYXNM1O923bjvtYnHWz+rndR/v/a5+0+em5py7aKzTbeucTfebzsv0+urn9d4YY5o4LrbevbFN5/yLmT739TrG4zFVVdHpdFhaWiLGyPb2Nmma7rSfzOG9n8pThTGGLMtot9t0u11CCAyHQ8qyIG9lDEdj0jSl1crJ86zJyWg0ZGtrk35/QGoTsiwnhEBZluR5jrWWKvgmV2VZ7prfWktRjHflss51XS/ArhxP56nOrTEGA9RZizt9pmtiuu4ewBgMEQwYvnju5V+G48ePk+c57Xa7efZbv/VbXHPNNQ/a55ZbbuGzn/0sL33pSy/6/uMf/zgA7373ux/w7hu/8Rt5wQtewIkTJ3jNa14DwEc+8hF++7d/m7e+9a3cfvvtHDp0iG/91m/lb//2b5vxPvOZz3D77bfzX/7Lf+H5z38+H/3oRxkOhzzykY/kN37jN/ju7/7uh1xnCIEf+IEf4I477uCmm26i3W7znOc8hze84Q1cc801PO95z+Pnf/7nue2223jXu97Fa1/7Wj73uc9x5ZVX8p73vIdHPOIRXH311Rw/fpwbb7wRgG63y4033sg3fdM3cf311/OCF7yAF7zgBQ+Yu87Dz/3czzXPXvva1+5qc/311/Pyl7+cZz7zmQ+5jn+Ib/zGb+Qtb3kLV1555UO2W11d5fnPfz79fp+XvOQl/MiP/Mg/WwwP1w033MC1117LVVddBcB73vMebr75Zt7ylrf8s83x53/+53zHd3wHSZLw5je/mec85zn/bGM/mIudFWMMa2trzM/PP6D9w92z2i/90i+xtbXFD/3QD/1zhfxPikdERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETkSyl5uA1DCAAYY5q/6yvGSIxx13tg13MiJC5p2njviTHinMMYQ1VVAIxGI4bDIcPhkKqqOHDgAEtLS4yKMe1Wl2ExZjwek2UZSZI0Yw2HQ/I8J03TZo76fT1Pq9Wi2+tRjMakaUq326Xb7TIzM0OWZYzHY5Ik4e677+aOO+5gOBzS6/Xw3lNVFVVVkaYpnU6n6WOtnczjLN57rLWEEPCVZyeQSZ582IklYEzEWEgSS5I6qspirSVGz/b2kK2tTbyvWFpaYnZ2FoB2p8XsbI88X6TVyrnttts4efIk3nsWFhZYWlriyJEjDIdDTp06xec//3mqquLYsWPMzc0RQmAwGOzs2WQdxhjKsmzW1axl53m/32d9fZ3RaMTs7Cy9Xo+ZXo/RaNS0r/tnWUaMEe89zrlddRFjxBjT7EUIAWtt86yurbpP3S7GiLWT3NT1VPeZ7tfU2FTd1ep6rOet+wI455p563iSJHlAjHvre/qaPgvAzj7GZoy9Z2E6H9NrnI63jst7vyuP02dr7/3Fxq/bXCxOY0wz79456vnrNezN5/Tf03lJ05RDhw6xuLjI/Pw88/Nz5HnOeDzeWU8gzRxJkjTn3VpLURRUVUUIHucs1k7ONERcMslnkjisZeqbE4BIu93iwIED9No9ilFBkqYUVbkz3oX813UaY6TT6TR/dzodwmhIkiRNvidzT+ojTVNCCIzH46Ye9n77pmuUEDCY5jtQn4l6D6bro6knazHWgomECJbd9Sz/sv3O7/wOJ06ceNjtb7nlFm688UZe+tKXXvR9VVUkycP+p50/+IM/4FOf+hQvfvGL2djY4NJLL2V1dZXhcAjAU57yFI4ePcqv/dqvUVUVT3rSk9i/fz933nknzjluvfXWLzrHq171Kh73uMfx+7//+1hr6ff7fOhDH+L06dOsra2xurrK/v37efSjH41zju/6ru/i7W9/Oz//8z/P29/+dr7ne77nIcd/5zvf+bDX+/9E/4t53/ve97DaffCDH6TX6/GRj3zkHzT+P3SfH8oNN9zA/Pw8V111FQAveMELeMELXvDPMnbtN37jN/jWb/1WXv/61z/g3T/nWqZ9sbOy18Pds9qrX/3qf0xYD9s/NB4RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRLyX7cBtWVYX3vrkeMJC1WGsxxmCMaZ7HGIkx7rp3zpGmKcYYqqqiLEuqqqLf79Pv9xkMBpRlSZIkzMzMsLy8zP79++l2u2RZhjGGsiwpioKqqgBIkoSqqqiqihgjSZKQZVkzTwiBmZkZjhw+wtVXX821117Lk7/yK3nkFVewuLRIb2aG/fv38/gnPJ6vfsYzeMQjHkG702a736fy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tllYWGBmZoYYI6PRqLn3wWN83FUzMXqqqqKqSrIsp91pkSS2OY/OOWL0GGN3+hlCmKytKAq89xRFQQgB5xzD0RCbuCZeYy7UJoBh8j2p46+qqmkbCNidOUMIhBCofElZlVS+3BnAgY/EaC/sK5E6q8YYDAaImDhVM1N5N8YQdurIx4jxfpLjCHma7Wor//Jdd911tNvt5u+PfexjXHnllfzUT/0U3/It38JP//RP8/a3v52//Mu/ZGVlhTe96U3ceOON3HjjjbvGcc7x8Y9/HICtrS0+9KEPkec5w+GQffv28bnPfQ6Az3/+82xsbPCpT32KPM9573vfy3d/93fz/d///fzpn/4p7373u/nrv/7rXWOfOHGCV7/61fzxH/8xx44d40d/9Ee58847GY1GLC8v8/73v5//83/+D9///d/PN37jN7K+vs6rXvUq3ve+9/GUpzyFX//1X+clL3kJT3/607npppu49NJLeeYzn8lf/uVfNuv5hV/4BUIIfO/3fi+PecxjOHToEO95z3vw3vPxj3+ca6+99kFz+L3f+71ceeWVvPvd7+bMmTM84QlP4LGPfSxPf/rTeelLX8p4PObmm2/mSU96EjfddBOvetWr+OAHP8g3fMM3NGOcP3+eq666imuvvZZbbrmFm2++mTzP+aqv+ip+//d/n5e97GW86U1vot1u8/d///dsb2/z1Kc+lSc84QkPa59vu+02br75Zsqy5Oqrr+ZjH/sYX/u1X/uA/bzuuusuupZ6/efPn+cv/uIvMMbwxje+kb/6q7/iE5/4BPPz8zzjGc/g+uuv54Mf/CDtdpsnPvGJvP/97+e5z30uz3nOc3jZy16GMYY777yTa6+9lrvuuovrr7+ed73rXbzmNa/hm77pmwC44YYbmrjf//7382u/9mt87GMfY35+nle96lW87nWv4xd/8RcB+Iu/+As+8YlPsLS0xEtf+lLe8Y538PrXv37X2l/3utfx2c9+lhMnTvCa17xmV87rtfzwD/8w4/GYT3/60wyHQ572tKdx1VVXcd111wFw1113cfPNN7O5ucnx48dZW1vjT//0T7n//vu58soreeUrX8n8/Hwz9r59+x70rOR5zl/+5V/y2c9+lic96Un8m3/zb3b9W7u2tsZP//RPc/LkSdrtNoPBYNe/Iw/m4x//OLfccguXXnopr3vd6/jv//2/8453vIN/9+/+HTfccAMvfvGLAfj1X/91XvnKVwIPXrt76/3bvu3bePazn83v/d7vAXD27FkAfvAHf5CnP/3p/Mqv/AoxRr7jO76Dn/u5n+OHfuiH+KVf+iXuv/9+3vSmN33R2EVERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERET+qZKH29Bau+vvGOOua/p5/WuMAcAYQ57lJC7Fe48xhqIoWF9fZ319nRgjnU6HhYUFjDE45xgOh/T7fZxz5HmOcY4jR46wtrnBxsYGt912G1tbWywvL7O8vMzBgwdZWFggxsh4PCaEQFmWeO+x1pK3Wpw6eZLV86sE78myFDCUZYm1llarRTUacvfdd9Nqt0mSBGMN3ntcmnD+/Hm2trbob25RVRU4y+xwSAiB3twsNnG0Wi36/T7WWuZm5+hv9zlz5jTnz51jrjdDt9smzRJidBh7ITcAzjlcEvDes7q6Sn8wwJrJmC5JyLKUsiw4e25If9jn9jvuIHGOECPj0YjReEyn3aYoSzY3N9nu92m3WkSgPxjQ7/eJMZJmGcPBkKrtyVs57U6bwWDAmTNn2draAqDfHzAcDijLkqIomJufZ2lxkdJXDAdD1jbWac90m7qIMRJCaGrBOdfUS1VVTW0YY5o29br31kwIoRl3+pp+X/efHmPv+Hvn2FvLddvpPZjuOx1HPdf0uxACxhiSJGnGmK73+nnddu+52Ls27z3e+6YW6t8kSQghUFUVZVkSY8Ra27wzxjSx1jHsXXcd697ndUzOuWZde/dl7/muz+d0m+ADzjna7Q4LC/NcccUVLC0tMRwOKYoxWZZRFAXE3XsdY8R7T1mWlFVBu90my7ImJ5OYI2VZMRqNdtZtdvpVhDDJZZomRB8xBpIkxVrb1J0xNN+ENE1J0sk3qF5DWZZg2LXOeq+rqmr2b/p5URS7aixJErIkwRmHjbtrKYRAiBGm98AY3HR+gUDERUu0Brh43cq/TL/zO7/DiRMnHvD8ZS97GTfffDPPec5z+NCHPsTKyspDjvPKV76yuR8Oh3zXd30Xt9xyC9ZaRqMRd9xxBwBbW1uMRiOuvfZavvu7v5vrr7+efr/P6173OtbW1nj0ox/Nc5/7XJ74xCd+0diTJOGyyy4D4ClPeQq33XYb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X/jrDktERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5NfO7ntPg3EWYy3WWowx/Yv+p3OufyWOJElIkoQ0TUmTBGctxkLE431JWfYvYwyNRoORkRFGRkbm50iIMdLr9eh2u8QYMaYfZuYSCJGyLIkx9vt1u+zauZPt27cTQsAYA5jdYVvbjyVLiTEQyhIDJM7VsREjIQTKoqDX65HM76XI8/5va8myDGcMeZ4TiLg0odlu0Wq1SNN0fl1YOrGULE3p9Xr0ej2sczRaTZIsxYcwnz+HMQZrLWmakiQJzjnSNKXVapFlGfn82gAxRvI8xxjDyMgo27ZuJe90++OtoyxL8k6XsiyxEUIIECLGGFqNJo1GAxuhLEt8XtBIM7Isq/NcliVZltFqtXDO0el0mJycrNdMkqQ+7yRJaDQa9X4r1XnE+VzGGBfcg35c1TXYf7EqN3ZRrS2eb/CMB/vuLR7v/YK4qjkHY6hqpTqPusYH5qzmqq5q7OL9LP6+OCfVHgfXGNxj9b2qi8Hr0eIb3NdgDvM8r+up1+uR5zlFUdTP4WDuFn9Wz3a1ZtVe7zdE8rygyPO6rrz3889RwtDQEK1Wq7+G668TY6zX9jEQgUajQaPRoNVqYYxhZmamrr+yLEmSBO/DfK02GB0do90eIklSkizDmASiodXqP5NA/Z7IsoxGo7HgLKrzqPMX6OekCPWn9x5fzteOj/09GNefJ0AIEaLB2vl3XpphkxScrS/jHMZawnz9QxyIwc+39WsvS1KssViz769lkcUOPvhgAM455xw2bNgAwOWXX84Xv/hFAG699Va+8Y1v/Jqi+3+vykf1+fNcdtll3H777Vx77bV86EMfAuDOO+/kzDPP5OCDD2bNmjXcdddd3HPPPbz97W+v378nnngijzzyCPfddx/nnnsua9eu5eijj+aqq66qn/Nrr72WZcuWsXbtWo455hguuOACdu7cycaNGznrrLN+pX3u2rWLP/uzP9uj/eMf/zinnnoqRxxxBKeccgpnnXUWn/70px91nuuvv54///M//7nrffOb3+SCCy74uf1uv/12LrvsMjZs2MA555zzc/uLiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyH9Myb52jDECYCLE+d8xzv8YYDAY07/mBwJgjcU6Swhx/gqUZUmMPWKcxRhDlmW0mi2yLCOEgLUWYwzel/R6PYIx/THWYK3Fe08IgeGREUZGRpiZmamiJYRQx4wB7z3WWlya1mOLoqAsSxqNBq1WixgjMzMzlGWJtZZGo4FzjhgjnU6Hubk5RsfHASjzgl6vh/eeNE1JkwRjDI9s3FjHHWNkNi/quRqNBsF7ijwnhFDnrCzLBb+99+R5jjGGEAKtVj8nRVEwNzfL0qVL6XQ6dZytVqve0/T0NBMTE/18hVCfQ57n/QNPErqdDtY5rDE0swYGw+z0DN57Go0GYyOjhBDI85yyKDHGkDhX58J7v/t8B+qjzvc+1FEV2+Ix1bzG9M94cN7F/RfU2V7WGVxrcI5q7qp+qliSJMFau7B29jJndW/wc1/3P7i3wTkerd9gvNX3GHfXd4xxQR4W56+6V9VX9Tl4f7D2qpiq3HjvybLs0XNtwFqLNRaDwTrbf86coygLirxY8CwHs3v9/tVfb+eOSRqNBsPDw7SaDcqyX3dZauh0OrTbTZyNlGVJWXiKvKyfYe89FkuapDjn6ncLQJqmC3JY5a2Kqaox7z3e+wVnufhsBnO4uJ769ePm31eeGAPGRJwz8zkN7J4uztcd8/m3de09Wj2L/CpuvPHG+vutt97K2rVrOf3003+NEf3HsnLlSt7znvfwne98h89+9rN73F+/fj3Dw8OsXLmS888/n+c+97lceeWVdLtdTj31VJ785CfzzGc+E4CLL76Y97znPXjvecELXsBb3vIW3vWud/GVr3zlV4px165d/Nmf/RlXX3113XbjjTfyzne+k1tuuYVjjz0WgHvvvZe///u/3+scZVlyxRVX7NN6p5xyCp/4xCd+pZhFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5DeH3deO3vv+FTwhBGKMhBDwIeC9pyxLyrIkhNBvn+9ftXe7XTpzc4QQSNOUVqtFs9nEGEOv12NycpJt27bR7fVwztFoNEjTFOccvV6PHTt2sGXLFrZs2cJDDz3E97//fb70pS9x22238ZWvfIXvfve7dLvdfmxQx1AUBZ1Ol+npaR7Z+Ajf+ta3+MxnPsMnP/lJvvrVr7Jp0yaKomBubo5t27axbds21q9fz/r169m1axfGGJxzWGtpNBoE7zHGMNxus2TJEpYuWUKr1cJZS4yRdrPJ6Ogo+y1dyujoKBaYmZlhZmqKvNvFGkOSJFhrsdbWuS2KgqIoyPOcmZkZNm7cyL/8y7/wmc98hi996Uts2bIFYwzee9I0JcZIr9djdnaWTqdT57vb7fKtb32LH/7wh2zduhWAVqtFlmUAGGNI5sd777HWkuc5Dz74IP/2b//G9773PTZs2MCuXbuw1jI0NATAzp072bRpE9PT0xhjfm69GGMwxtT7rL4Pjo0x1tfexlf9q2tQNWZwncX9Fo9ZHFOV/8UxVLkJIex1/M+L6dH6Lr6cc486V6UsS/I8r5+txXmLMe41B9X8SZLQaDTqK8sykiSpa9o5t2CuwWd38TM8+HxXe3TO0W63GR4eptvrMjk5SbfbrfvHGMmybMHcQB2XMYY8zznggFUkSUJZlnjv6fV6lGVJmqa02+362a7irZ6DsbExJiYmGB0drWu8qtuxsTHa7Xb9HqlyBCx8h3lPnuc/s7aqcdX8zrk6v1UuqzMc3Odg/YcQFpxPtY+iKOj1evR6vb3WgPzmuvLKKzn44IMxxnDXXXft87hzzjmHW2+9da/3li1bBsDExATOuQX9//Ef/5G///u/58///M9Zu3YtN954IwA33XQTj3vc4zj55JPrT4APfehDnHfeeVx00UUce+yxnHnmmfzgBz/guc99LscccwxPfepTmZmZ+Zmx7rfffhhjOPzwwznkkEN4y1vewj/8wz9wzjnn8Bd/8ReceuqprF27llNPPZV/+Zd/qccdfPDB/Mmf/Alnnnkma9as4frrr+eDH/wgZ5xxBgcffDAf//jH67533nknZ5xxBkmScNJJJ/HJT35yj3xUnz/P2NgYWZYxPDxMq9UCYPXq1Zx22mk0Go29jvm7v/s7zj//fKD/3picnASg0+lQFAUrV67cY4xzjvPOO497772XDRs2MD4+Xt8zxvC2t72N0047jUMOOYQPfvCD9b1vfvObnHnmmZx44omcdtppfO1rXwPgiiuuYHp6mrVr13LKKacAcO211/Ke97yHY489th5/1FFH8Yd/+IcA9bqve93rOPnkk7nuuuu49tprefWrXw1AURS8/OUv58gjj+T000/nqquu4pxzzgHg9ttvZ+3atfW8N910EyeeeCInnngiv/Vbv8XDDz8MQJZljI2N4ZxjYmJiX45ARERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP4DSn7xIab/r+l/EuP8R/8zhIC1dndbCPgQCCGAiZRlSb850Ol02LVrFzt27KLX67F06VLa7SHMkCXGiDGGsizpdDrMzc0x2m731zDQbrcZHR3FGEOMkZmZGebm5rDWkjYbGGPqe6Uv6fV6hBAYGRlhzZo1eO9JkoQ8z5mdnWV8fJyxsTGazSbWWkIIlGVJt9tlaGiIdrtNnud0u13KoiCf62CcxUQw1uCso5lllHlBr9NhbmqavCzodboUeY9YlBgMo2Oj/RjTlBgjIQRijPXV6/WYmZmhKApijBRFwfT0NJOTk4yMjJAkKVNTUyRJQrvdxnvP3NwceZ6TZRnj4+OEEPDek2UZIQTyPK/322q1iNbQ6/XodrsURUGWZSxbtgznHHmeE0KgKArm5uZoNpu0Wi2GhoYoioKiKMjzvI6/roqqHubP3drdZ1jlMy6qleqMquvRDPb/eX32Fk8VS/XdOYcxhiRJcM7hva9/G2MIVb3uJdZBVZ73FlfVVo2z1tbPRfW9ys/ivAzupSiKPeJeHM9gDqs62ltuq/bBnHnvcc7V81Q1Obhm1Xdw7sE95kWOLwJpmpJkSR1nlmWUoVyQSx88QJ3rPM+ZnJzkwQ0PsWPHDpYsWcIhhxxCs9ms7+d5viDWJEkoioLt27dTliVJkjDUHiJ1aV33g882QKvVwlpbn0V1foNnaVO7IPeL81Xl0jm34DwHc+O9pyxLvPd7rFf1rcZW9VONHXx3yn8Oz3/+8/mv//W/8oQnPOH/2Jx33nknALfccsse9575zGeybt061q5dy6tf/WoAvva1r/Gxj32ML3/5yzQaDb7yla9wxRVXLJjve9/7HgceeCCXXnopz372s/n617/OihUreNaznsWHP/xhXvGKV/zMmEZGRvDe87WvfY1jjjmGv/zLvwTg0ksv5TWveQ0A3/jGN7jsssu455576nGzs7N8/etfZ/369Zxwwgm8/vWv51/+5V+48847eeYzn8mFF17Irl27eOlLX8oNN9zAU5/6VD73uc9x8sknc+aZZ3LAAQfU+ag+Aa655hpWrVq1YJ+Vd73rXSRJwplnnrkv6Qbg1ltv5YMf/CAA73nPe3j2s5/NX//1X7Nz507e8IY3cNJJJ+0xptPpcOutt3LGGWfsdc5Go8Edd9zBPffcw6mnnsqll15KCIHnPe95fOADH+BpT3saX/3qV/nt3/5t1q9fz/XXX8/atWu56667ANiyZQsPP/wwj3vc435m7JOTkxx33HG8/e1vB+Daa6+t7/23//bfuO+++/j+978P9Otnb+6++27+8A//kG9961sccMABvPWtb+Xyyy/ns5/9LGeeeWady73VpIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj8Zkh+kc7GGJyxGGMwxvQbQ4QY8d73++w5CGstNrFAJMRIURSUZUm326XX61EUBTFGGo0G1hpCCP2pQ6AsS4wxNBoNdu7c2Q+6kTE2NsbKlSsxxjA7N8fs7Cy9Xo9ms0kSM6zdHacPAWstPnhGR0c55JBDyLKM7du3s2XLFh555BF6vR7tdhuAZcuW0Wg06PV69Ho9ut0uIQR27NjBimXLCSFgrCFNU4wx5HlOt9vFe9/PkXNYaynzgh07djAzM8PY2Bijo6P0uj2M7fep9giQpinee5xztNttxsbGOPTQQwGYnZ1lbm6O7du3s3TpUgyOEAIhBGKMmPkc93o9du7cydKlS/He1znodDp0Oh2898zOztLJe4yMjNBsNsnznF6vR5Zl7L///vU5pGnKzMwMk5OTADSbTRqNBkmSYK2t192bwftVn6otxgiwIO6qz+C9Ki/VGGNMfb+qxcVtg/cG1xhsG4y5GjsYW5yv5ere4tgGx1fjBuNZ/H0wJmvtgrWrPQ7uc/G1+N7inA7OX/UPIdR9qlpcnLeqdvaW38H5q3qu7i+OjRjpFT1iCc4atu/czqZNmwghsHz5cpYuW1rXTKV6TgDyPKfT6fDAAw8wOztLnueMjo6ycuVKsizDe08IgeHhYfI8J4SAc448z3nwwQfZtm0brVaLVfuvYmLJBFmWEUJgZmaGHTt2MDk5SZZljI+PMzQ0RJqmOOcWPDt7q6HB3FfKsqxzMlgzIYT6/Tf4XO6tjhe/IwafFWst9lGeKfnNdPbZZ//Kc1x22WU0Gg3Wr1/Pgw8+yPHHH8/HP/5xyrJkzZo1fP/736/7Xnvttdxxxx2sXbuWb37zm1x55ZXcd999TE5OcvzxxzM0NESe59xzzz10Oh0AjjnmGH7nd36H6elptm7dymGHHcaKFSu47777+NGPfsSdd97JDTfcwEtf+lJe+cpX7jXGk046if32249PfOITHHrooWzatAmA73znO7zhDW/gm9/8JieccAL33nsvW7duZfny5Rx00EFccMEFGGN4y1veQlEU/PVf/zXHH388P/jBD9i2bRuHHXYYL3nJS/jJT37CZZddxvT0NMceeyy7du3i8Y9/PDfeeCPnnXceALfddhtvfvOb6XQ6OOd4+9vfDsDtt9/OK17xCk4//XS+9a1v8frXv54XvOAF+5z/TZs2MTU1xZFHHgnA+9//fi666CL+6I/+iC1btnDuuedy6qmn8pSnPAWAj370o3zpS18C4IlPfCJXX301mzdv3mPeiy++GICjjz6aJEnYtGkTO3fuxFrL0572NACe8IQnsGLFCu666y5Wr179c2M999xz2bZtG3mec++99wL9/3tccskle+3/hS98gUsuuYQ0TQF40YtexI033rhHvy9+8Ys8/elP54ADDgDg5S9/OW9605vq/9OIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyG++ZF87xhj7XwwYYzDG9H9aAzES5y8DEHf3NwDG4IMnxAAY0jSl1WoxNjbG8uXL6fUKer0eZVniXLJg/qIoiDHSyDKaExMAeObnNoZms4kPgU6ns3tNYxZ8t7Y/X6PRIJQl27dvp9ls0mw2OeSQQzDGkOc5W7Zs4YEHHmB4eJj999+fJUuWEGNkamqKubk5pqam+N53/42R9hArVqxgxYoVWGt55JFHWL9+PZs3b+b4449nyZIltNtttm7dyt13382DDz7I+Pg4hx1xBAcfejATS5fSarUIIVCWJdZanHPEGLHWMjIygveeNE1J05QQAt1ulxACIQSmp6bZvn07s7OzJEnCkiVLWLJkCZ1Ohw0bNvC1r32NlStXcthhh7F8+XLSNGXXrl08/PDDbN++nTRNWb16NcuXL8cYw65du9i2bRu9Xo+hoSGWLl3K6OgoWZYRS8/69et54IEHyLKMY489liOP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C/4+LvbkJz+ZP/3TP+W0007b53hERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5N+vZF87OucwxmCNxRiz+0aMRCBNU2KMhNLjvSeEsGC8wYAxgJkfFnHOkWUNsqysx4QQcM6RJAm9Xg/nHI1GA4DR0VF6vR5FUTA7O8vWrVu55557mFi6lMMPP5ylS5fSbrcpg8daS4yRsizrGObm5pj1nlarRbvdXhBfmqYMDw/jnCPGiPeePM+JMZKmKePj4wwPD3PgygN4+OGHMcawfft2nHO0Wi2WLl3K0NAQc3NzdDodnHOMj4/TarU44ogjyPOciWX7kaYp1vVjM8bgnCOEgPeeGCNJkuC97x9OklCWJTt37mRsbIzh4WE2b95MWZYMDQ2xatUqlixZUufLWsv4+DjLli3DWkuv12N8fJzp6Wna7TaHHXYYJ598MpOTk8zOzgJQliVjY2OsWbOGVqtFURR47ynLkrm5OYwxHHHEEQwPDzMzM8OOHTuYnZ3lkUceYc2aNQB1/GVZ0mg0Fpy9Maaul+qz2nuMkRhj3ddaW1/VfNX9qm81nzGGsixxztVnFkKo+1X7z7KMNE33yHO1d2ttPV+SJHUdl2VJURR77GNwLzFGiqLoPxfW1s/IYL9qnWpMtV7Vf/G+nHMA9fNQ3atyUM1TrVX1HVy3uld97m2OKt/VZ1mWdb6rMxg8q+rZrGo0SRJCCHQ7XaZ2TTI5OUmv12N6epqf/OQntFqt/rPbauCcI01T5ubmiKb/PGVZRp7nFEXeX89Zdu7cSafTwRhDURSkaUq73Wbr1q10u10ajQbee5xztNttOp0O27dvZ3h4GGsMjTQjhECe5+R5TpZllGVJmqYsXboU7/vvhRBCvcdqf2ma4vH1eQzut+KcW3DOVe2XZf/9VfqCGHfPnSRJ3WfxWQ7OV9XD4vMR2VfNZrP+7pyr3zlnnHEGIQSmpqb43//7f/PiF7+Y0047jQsvvJCNGzdy4403cvnll/OOd7yD3/u93+Oyyy6r32s/S4yRiYkJ/uAP/oBNmzZx3XXX7VOc1157LR/84Afrv51vectbOP/885menibLMgB6vd6j7q96Pw7+9t7zv/7X/+IVr3gFZVly/PHHc9BBB3HrrbcCu9/VT3nKU7j55psBuOaaa1i1ahVHHHEEDz/8MMPDwz8z7nvvvZcnP/nJ9d/31atX88d//Mdccskl3HfffZxyyil13w9/+MO88pWv5L3vfS95nrNu3TouvPDCfcrPz5NlGbfccgtXXnklV111Fc1mk0996lN1/L/7u7/LiSeeyPDwMN/85jd56UtfytDQEJdccgmTk5MsW7aMZrPJ+973vn1a72Uvexnf+973OPbYY1myZAmnnHIKGzdu3KPf8ccfz5//+Z/z9Kc/HYA1a9bwgQ984FHn9d7z3e9+l9WrV/8SWRARERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRf4+Sfe2YpikAFlO3xRirL3jviTESvK+/A/3exuB9SSBgjK1asdYSY8Q5R5IklGWJc5Y0TfHeMzs7y8zMDNY6Wq0WAN57AJYvX86KFSuYm5ujKEsApqenaTab2MRhrMUYg3MOXwbKsmTLli1sfOghJicnabVarFixgpUrVzIxMcHw8DAAvV6vHgfgnGNkZASAVquFy1JarRbdbpepqSmMMSxZsgRrLd57duzYQZIkpGlKURTMzMyQpinGGKwxZI0GGCjLkrIsCSEAEEKgKAp6vR5FUZDnOZs2bWLXrl1s3bqViYkJ1qxZg3OORqOBMYbR0VHGxsYwxtTz5XnO8PBwPe/c3ByTk5PEGBkZGaHdbmOtxVpLp9Mhzp9ddR7VuTrnaDab+PnzLMsSay1LlixhaGiIbpHX96o82fmcxxjr7/3jX1gzxpi6LYRQ10o1X3Uvxlhfg/W2eL7BvtWcAFmWAdR5qdau9j94VXNUtVuW5YJ9VH2q9at95nlejx3cSxVjmqZ1++C+q/7VvcXjF++vGrv4qs5tMCeD6w+e7+K8VXMnSUKSJPUeB+cbHL+3sf1nO7B16xbu+vZ32LR1E0uWLOHoo4/msY99LGsOWoP3HmstWZqR+7yuJWstFosvIxsfeogf/vCH5HnO2rVrWb16NbOzs+zYsYN2u92vuW6XTqcD9Ov67rvvZufOnbRaLfZbuh+rV61iYmKCoaEhms1m/QyXZUm326UoivrZqWojhECv1yPPc5pDzQVnXY0frOPq/mAuq9y5xBKCX3Cu1bskTVOstXW7X/SeTJKkX1MsPH+RX9WLX/xivve97/HZz36WW265hSVLlvDDH/6Qww8/nIMOOgiAAw88kNHRUe666y62bdvG2rVrAbjmmmv4+Mc/zle+8hXOOussXv7yl7Nr1y5GR0cZHR3lgAMO4E/+5E8AWL9+PRMTE0xMTCxY/53vfCe33norAKtWreK1r30tH//4xznooIP4r//1v/Ka17yG8fFxfuu3fos//MM/5C/+4i8A2LBhw4J5tm3bxszMTP27LEseeughAE4++WQ+9rGPccghh/C6172Oyy67jDvuuIONGzeydu1aVq5cyRvf+Eb+7d/+jRNPPJE3velN3HHHHfucw6OOOqpea9DHP/5xnv70py9oO+mkk/ja176213muvfbavbYffPDB7Nq1q/69+O/Atm3b6u+nnHIKX//61/c6zwc+8IE92i6++GIuvvjifVp3cYxpmvLOd76TkZERiqLg4osv5owzzgDgnHPO4a677qr7XnrppVx66aV7XWexb3/725x//vmsWrVqn/qLiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyL9/yS86IISw4LcBjDHEGIkx9tuMASDGiJnv55zDGQvGEiN47ynLkrKsPktijBRFQa/XI89zZmdn6Xa7NBpNYow0m01CCAwPD2OtZWhoiDzPmet0SNOUbrdLCAETLTEEjDFYa0mSBGMM+69YwZKxMYqioN1uMzIyQrvdptVqkSQJRVH0k5IkhBCIMVKWJSEErLUAzMzMUMaASRw4S9LIGBodoT0y3O8fA4mzuCzFpSk2TbBpgveeXp7jspQQAnmeU5Yl1lrSNK1z6JxjeHgY7z3OOWKM5HmOtZZer4e1ts5zletqn9VnWZbkeQ7A0NAQQ0NDOOcwxjA9Pc32bdvI85xms0mz0cAaQ6/bpdvpEGMkeE+v22VudpbpqSnGxsYYarfxZcnGjRsxxnDAgWsIIVAURb2HwbMfjG9vqnoZrJtBzjmcc4QQ6rMY3G+Vr8H5q9xUbWma4r2va7YaV61f1Ya1tu5X9R2MrTr7wfYq34vnrNav4nXO7bFvoF5rcO7B58Bai3MO7309Z3WGi+er5lmcT+99HefgWewt38aYOhdV/GVZ4r2v68paW+enipMYabaarF69huGhISb2m2DlypV478FAURTEGGk0GhhjCCZQliXQf86sMfRiwX777cdhhx3Otm3bKEuP92H+mSxxLmFqapo8z0nTlEajyfj4Eh7zmLUsWbKE8fFxdu3cya4dO+pnuFovSZL6GXq0PS9+nqpzW/xsDdZhlcfB+yYAhPkzqM7NAgZjHNYyP0/E+0AI5UBtzp+xdez9iZHfRC972cv4X//rf7Fp0yae9rSnMTIywvr16wG4/PLLWbduHevWrfuV1rj00ks58MAD+e3f/m2WLFkCQJZl3HLLLVx55ZVcddVVNJtNPvWpTzE8PMy2bdvqsUuWLOHv/u7vuOqqq5iensZay5vf/Gae/exn8w//8A+8+tWv5t3vfjfee/bbbz9uvvnmnxvP1VdfzX/7b/+t/p0kCX/1V3/Fs571LJYuXcrzn//8X3qvY2Nj3H333TzmMY+hLEtuvvlmRkZGGBkZ4eabb+ZlL3sZc3Nz5HnOSSedtE/x/iwXXnghF1544a80x7935513Hr1ej263yxOe8ASuvPLKX3nOU089lVNPPfX/QHQiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8u+FiTHGfen46ZvfPz+g/9tai7WW1DqMMcQY+5cPhBCopjXz46OJQCQCIVD3L8uSubkuc3NzWGsZHh6m2WhTliWzs7N470mSlCzLGGo0mJ6eZvuunTQaDZYtW4YxhumZGYqiwDnH/vvvj3GO0pcAJEkCxrB121Ymd+4gsZalS5eydOlSjDHMzs5SlmW/H9DpdJiengag2WxSliXT09MkScLY2BgjIyNs27YNX5RsuH8DS8aXMDo+xujwCDZxzExN0ytyEutotlvMTs+QNTKCD0zst5RGo0EIgaIoCCGQJAlJkhBjpNPpMDc3R1EUJEnCyMgIxhgmJyfpdDoYYyjLkjRpEGNkdHSU8fFxrLX1GeR5zgMPPECz2aTdbjM6OsrDDz9MjJGhoSGWL19OZ26OnTt3Mjs7S6vVYr/99qvX6fV6NBoNms0mRVEwOTlJs9lk2bJlzM7OsmPnTlqtFo1Gg/GlE/140pRGo1HnsSiK3QVmTP29OnOAEMKCPouvqr6894QQ6v7Vvb3NX32v5hisw2q+GCNFUVAUBcYYsizDOUdZlpRluaDmQwgYY3DOAdSxDMa3+PGp1q547/eIocrF4PzVXvM8x3uPtRbnXL3v6owXj48xLlhzsL2Kp4p/8DkdPI/BvDnn6t9VTqoarfZT7SnGSCg9kzsn+eH37+EH37+bwhcsXbqU8fFxjjzySI474ThGR0eZnp7uzxfLBXHiItYkEAwjI6M88MADPPjgg6xYsYIVK1Zgra2fj+p65JFH2Lx5M8YYDjnkEFqtFjPT03RmZ+n1eoyOjtJoNMjznDRNAdi5cyfGGNrtNu12u85jtbckSeiVvT3qafCq8jp4DVQLpS8JwRNjWHB/cX5jjHjvKcsS7/2CGmgmbQzwrN95CSL/UbzpTW/illtu2aP905/+NIcddtivISIREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfl/KflFOscYIe7+Xl3GmP49AGMwxuzuT39IWZZ4XxIiGGNJkoQ0TTHGYG2+O6D59hAC1lqstTSbLZrNJmNDQ4QQmOnMkaYpzWYT5xydbpder1fPhwFr7UCcgRACSZLgjKEsS/I8p9lsMjIyUq/T7XaZnp6m2+3inGN4eHjB3lqtFq1Wi8J7yrLApik2cXTznGZRMDo8RMt7ipmAMQaXphhnycsSawzDw8MAeO/JsmxBDsuyrHNQFAUxRqampuh2u+zcuZMQAkuWLGHJkiUUucd7j3NuwVlU34eGhogx4r3HWkuj0WB6epof/vCHfOMb3yCGwMjICMuXL2diYoIkSej1epRl2c+Rc3S7Xebm5uh2uzQaDbIswxjD7OwsRVGQZRnW7j5Hay3e+/rsB2umyuHgVTHz9TJ4AYQQKMuy3kc1Zm/9+zXUP8PBOYwxhBDqGAbbF8c52FbVTvW5uN5DCD/zORmMa/BcF5/T4LkP7iGEUK+xt31VMVR9kiRZUO8hBLz39bplWS7Y7+JzsNYuOKfB9ZxzC2pp8T6cc6RpyujoCIcccgiBQLvdZmxsjCVLljA3N8f27dtZsWIFRVFgjCHLMvI8Z2pqCk/JUHsEXwRCiMzMzNRz93o9AIaGhrDW0uv1CCGQpinDw8MLctftdNi5cydJkpAkCY1Gg7IsKYqizkG32939joA6R9X+q73tLVeD9lbH1TvHGIjRLDijqgarsVV+q3Or6xNDDIGFq4n8+3fNNddwzTXX/LrDEBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRXxO7rx3TNCXLMtI0JUkSrLUYYwgxEkIgxti/5r+HEPDeU5YlZVEQY8RYi7X9JUMIlGVJUZTkeU5RFBRFgTGWJEkIIdDpdOj1ejjnaLfbzMzMYOfn2LhxI1/72tf4whe+wA9/+EOmpqb68YQAMZIkCWmaAlCW5Xw7eO/pdrtMT08zPT3NzMwMs7OzTE9PMzs7i3MO51y9P2MM0B/Xy3M6vR5FUeDSlLGxMRqtFpOTk/zox+v53ve+x8ZNmyiKgtHxcSYmJkjSlMmpKR546CF+tH49W7ZuZXZ2ljzPCSHUlzGGRqNBq9UiTVPm5uZ44IEH+MlPfsL27dspiqLuOzc3R6/Xw3uPtXZBzAB5njM3N8f09DRlWTI0NMT4+DhZltHpdNi4cSO7du3CGEOr1cJaS6/XY25ujm63S5ZlLF26lNHRURqNBnNzc9x///08/PDDzM7O0u10SNMU5xxJkuCcq880hNAvrPlzGszj4LX4PkCMcXfNzJ9ZjPFR+3vv67opiqIe472vc2OMqc+8yluMkTRNsdbWtVqdweAaVV6r9ar7g/sdjLcsy3rtKvZGo0GWZXWeqv1X61aq9jRN62dscc6qHC2+BvM1uH71fbHF+azEgWe56uecm39Oi3p/1fmmaUqaZTQaDYaHh9lvv/044ogjeMITnsDpp5/O8uXLGRoa4qCDDqrjH1yrKAomJyfZtGkTS5YswRgz/w7YHV+e52zevJktW7aQ5zkAvV6PTqdDURTkeU632wWg0WgA0Ol0CCEwMjLC2NgYxhjyPMd7X+e42WzSaDRwzhFjpNvt1usO5nsw549Wu7vPLiHL0nrOKpfWWrIsI8uyei5rbf2Oqs47dY4QygV1IfKLOvjggwE455xz2LBhAwCXX345X/ziFwG49dZb+cY3vvFrim7ffOhDH+L888//lebYsGED55xzDrA7Jz9PlbPLLruM22+/nT/7sz/jne985z6v+cd//MccffTRPOYxj+GUU07htttuq++FEHjVq17FYYcdxuGHH8511133i2xnD5s3b+Z5z3seJ554Iscccwzvec97HrXvP/3TP3HKKadw4okncvrpp/Pd7363vrdlyxae/vSnc8QRR3D88cfz5S9/ub63OB8iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIo8m2deOxpj+p+1/xhj7N0IkxDhw30IIuwfGSAgBYw0ucRhjCSHivSfPc7wPJElCu93GOYe1hk6nw9zcHN570jTFWksI/X6jo6PYNKHb7dZ9hoaGWL16Nc1mkzRNKYNfELN1jqGhIUwIGCLDw8OMjIzgnMN7P7+uxTlXj4kxkiQJzjnGxsbw3lPkOdZahkdH+vGmCTFGekXOxk2P0Ol0OOyww1ixYkX/noFoDEmWkpcFGx/ZiLMWZy3GGKy1dZzOOZxzJElSrwuQpikjIyOMjo6SJAmdToc0TQkhYOfnqfdpLUmSUBQFw8PDDA0N4Zxjx44dOOc4+uijefzjH8/krl3MTE3T63aZ3jVJOuEYHxnFRJidnSXv9mikKY0kJbWOH977I3784x8zNDzMiSecwMGHHcrQ8DBpmtLtdgkh1PHurWZ2l0Lc6/fBnIcQiPP1NLi/xXOFEOq+1Vxhvu4G56m+V5cxps6vMYYYI2VZ1mOttcQY67oA8N7jva/PqRoXBup8cQyVao7B+Af3niRJPa7aZ5IkC/Y3OGe19uJYq70O7rfqlyTJgjwuzmVZlgvmX3weg+tWcdZnE6HZajIyMsoD99/PTzb8hM2bN3PAAQcAkDUzVq9eTaPRwDlHCIFer4cxhqGhIaZmJ3no4YcYGRojBIjBYE0C0dJstCmLwEObN9LpdFizZg1Ll05gTULiMiIRosVgaDSbJM6R5zkhBGZnZ2k0GgB0u12MMYyPjzM8X7fGGNI0rd8BvV6vzlf9LhvI9eIzHLwXYyQSdn8SwESMBYPBWoN1BjA4+u+4eq7Y72OMIcERiNhoEfk/6cYbb6y/33rrraxdu5bTTz/91xjRfwznn38+l19+Oa997Wv3qf9ZZ53FG97wBlqtFt/97nc5++yz2bhxI0NDQ3zkIx/hBz/4AT/60Y+YnJzkpJNO4txzz+W44477pWJ7zWtew7HHHsstt9zC7Owsj3/843n84x/PqaeeuqDfzp07ufjii/nyl7/Mcccdx1e+8hUuvvhi7r77bgCuvvpqTj/9dP7pn/6JO++8k+c+97n89Kc/JU3TXyouEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfnPKdnXjkXuMTbijMUYU7dHwADOuf7vGAkGbIzz3w1YyIselIZGo4kxFgBrLWmaMTw8grX9tqIomJqcodvt0mw2WbJkCc1mkzzPMUTysiBJUw459FCOOvroek2XpTTSjAjkszPgfX/9EGg0Gv25xscJZYkhYq3Fh0AEMIZIpAwlSZoymmUQIyFG0iRhycQEZVEwMzdHlmWMjY0xMtKPeXR0lDVr1tDr9cjznBACw8PDZFlGWZaMLxnnkEMPYW5ujqKXkzpLkjhihLIs8b4kRvA+YozBGMP4+DgrV65kzZo1dDod0jSl2WxircVaS/DQ7XZJ0xTnHH5+r1UODzvsMAC896RpSpqmTE9Ps2HDBqampmi324yPjbF06VLGJpYwMjZK6T1t72kNtWm1Wv3DNYZVq1czvnSCY48/nuGRYSYmJvDe0263cc5RliXGGKzt10WMEYAQQl0ncb4WqvOoYhsct/gKIVCWJdZanHN1ezUPQJIkeO/3WCuEQAiBXq+Hcw7nXP+8va/797fXn69qr/Lrvacsy3qdoigIIdRzVeOMMTjnFqxZjaliqeap+g8+O9U8IQS89/UzMdg+OF81ZjBvVS6rPVa5Hxy7+IwWxzG4xmCOq7wkSYJzrs7z4FlGHyiLgoml45z6uFP5zl3f5u7vf48HH3qAI486ikMPO5RGu0HRLXCZwxSGXq/HcLvNfhMT7JrcwdSuST760Y/Sbg2zevVqDj744LoGq/PqdrtMTk4yNDTE2NgYIQS+//3v871/+x7toRYjQ22W7beUlav2J8syZmZm2LJ1E51OB+cSRkfG2G+//Wg0GoQQKIoC5xxJkpAkCb2yoCwD1lLnarB2F9f0YO76F+RlTghVrh0uSYD+e8SXAQykSVqPDSFABGPAGoezjtQl2GiR33zdbpcLL7yQH/zgB7RaLZYvX85f//Vfc/jhh//csZdddhlr167l1a9+9R73li1bBsDExET9d/mcc87h1a9+NVmW8fd///d87nOf40Mf+hCvfOUrufzyy7npppu47rrrKIqC4eFhNm/ezDe/+U0+/elP85GPfIRly5bx3e9+l/HxcW688UZe//rXc88997BmzRpuueUWhoeH9xrnRz/6Ua677jruuusujj76aPI857777uOCCy7g9a9/PX/wB3/A1NQU3W6Xc889l7/8y7+sn73BvX7729/m3/7t3wC4++67edaznsWGDRsAuO2223jzm988/6w73v72t3PuuefinGNiYmJBTn6eKmdjY2NkWcbRRx/Nzp072bJlC8uXLwfg4IMP5tZbb2Xt2rUAnHLKKbzzne/knHPO4RnPeEY91wknnECMka1btzI0NMQnPvEJXvKSl9RxXXDBBXzsYx/jLW95CzfffDPvfe976/9DvOUtb+HZz342AA8//DD/3//3/3HvvfdijOE5z3kOb37zm/nud7/LK17xCgCGhoY4++yzuemmmzj11FMX7OnHP/4xS5cu5bjjjgPgrLPO4oEHHuDb3/42J598Mn/7t3/L+vXrATj11FNZtWoVX/rSlzjvvPP2yIeIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyKNJ9rlnNBD6H1iDNRYAk8T+bWuIMeJDiQ+eGDyRCAastTgS4nw/Yww4iy9Lgi+JxpJaS5okzHY6pI2MZcNDOOdI0hTjHNYaDDCbdzDGMDQ8RJqlFHlBXuSUviDPeyRZQtZMiSHivQcLRZkD4FyCSRKiD5QxYI3BJY5oImVZgo00sgY+BIhgIuR5wVxekLmE0dFxsiyhLEs6cx2GWm3SJMEZi8XQyDJ86Yk+MDczS4yRxDrybg+LwSUWa8CXOaFaP3X4EAjBA5YsS7HWUPqCACRpRjSGvPA4B9ZCmqakzQYhBLpFjrUWYw2eCM7ikhQMOFKMMSzbfwU2Tdi+ayeTM9NYa0n224/R0VFa7TaF95RlSdZskGUZzjm897gkwRhDe3iIpfvthzH9M/AhgDV472m1WgB470mShBjj7pKJsV8T3hNCwBiDtRZr7YJ+xpgF32OMC9pCCHVbNR4gz/O6vepfrVeWJY1Ggxjnz3aec25B/2q+KvYqLudcva8YY7+GncM518+3MYQQFsRXtVf3vPd1zIP9qvmzLKvbqs/qqmJa8AgOxDfYt9rjYA4WW5yjqs9gnqs1q1yUZUmMsc5FNabaZ38C5uvakGVDPPaUkznm2KNJ0oSh4RGyRsZcb45QePDgnGWo3SSxhjLvsWxsCaefehqHH3I4HhgeHmZ0dJQ0c/R6HXwoaTRT2kWTJLFgIu2hFo1mSoyezVs2E0pPu5WxbL8ljI8N470nTy2tRkbe69Jspuy/cjlZmoIJFCESrSEAeVlinaPRaJDn+YLzipH5s2H+rBfWsDEWY+L8WZdkSQPnmnhf9mveBwyGxDlc6rDO4qwjxEDwAY8n0H/X4KEMYCP0I5P/DF760pfyjGc8A2MM1113HZdffjm33377rzTnnXfeCcAtt9yyx71nPvOZrFu3jrVr1/LqV78agK997Wt87GMf48tf/jKNRoOvfOUrXHHFFYyMjNTzfe973+PAAw/k0ksv5dnPfjZf//rXWbFiBc961rP48Ic/zCte8Yq9xvK85z2Pl7/85Rx22GF85zvf4Ytf/CL/5b/8F5rNJhdddBG33347Y2NjeO95znOew9/+7d9y4YUXLpjjwx/+MMcff/xe5//JT37Ctddey2233cbo6Cjr16/nrLPOYsOGDaxZs6bOQZUTgMsvv5x169axbt26Pear+r/3ve+t29atW8dnPvMZXvKSl+w1hkfzwQ9+kEMPPZSDDjoIgAceeKD+DnDwwQfzjW98A4CnPe1pXHTRRRhj2LBhA6effjr3338/jUaDSy65hKc+9al86lOfAmDr1q0APPaxj+Xmm2/m9NNPZ/v27dx2220cddRRe8RxxBFHsH37dr7+9a9z5pln8vd///dMT0+zYcMGDjroIIqiYP/9918Q1wMPPPCo+RARERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER2Ztkn3tGAEMETIRIxBhDjLF/O8b6O0C0hhggmtBvsAaDqacyxmCtrfuXZUm32yXLMpJ2hjEG7z0hBIwJpGlKXuYkWYpzjjKUzE7NURQFaZrSarUwKRhriTHioycSSRKHcw6APC+JERLnsMYSifjgcc6QNlIgodfr4r3H2oRmo0W7PURZerqdHnOdObzvx5Ym/dRNT01TFAXWWtI0JcZIo9EgyzK893S7XXq9HjFGrIngDESPLwvKCMZUOTC41GFMpCw9YT6VSZpgjMM6i3VuPmcLc2etrc/CGIN1/RyEEAgh0Gw2Wb16NcuWLeP444/HQD/GRgOsJcSIcY4YA528h8GQJK5/5LF/VgZDDB7vA5EIbvf61fkzf66LVfEBuHoPLKiXwXHGmHo/1T6q9hDCgvGL5zDGkCQLy3pvMQ3GPZi/fr2Zeq29xVjlteo7OFf1e3E+Bp+VR9vz4u+D8y2OefBzcfti1X72FkOMkSRJ6v0URTFf//0cp2n/eRtcc0Gs1vXfBTGQJAkTE+OMLxnDx4APgcLnlHnJ8PAIviyIhadXlPRCxMSIwzA2NMzSpcuYnpsjTVNGRkYwxtDr9eh0OzjnGB4ZZmLpBO12i16vSwiBFfuvYOWqlRACMRQ4GzFEcl/QbrcYGxtlaWeCovQ4Z0nSap91YvAh4GPEDryPqnpbfPZJkix8zuzuZ7f/jERiiBAt1gDVsx3N/JqRMP9Oq2orzj9f/Vdj7A+Jj16v8puj2WzyzGc+s/59+umn8853vvMXnufaa6/lhz/8IXNzc/z4xz9m//3351Of+hQTExMceeSR3HzzzXXfD33oQ/zv//2/Wbt2LevXr+eKK67gu9/9Lrt27eLoo49mbGwMgB/84Ac88sgjAJxwwgm85CUv4ZFHHmHbtm2sWrWKFStWsGnTJn7605/y5je/meuvv57nPOc5vOUtb1kQW6vV4uyzz+Zb3/pWvf7ll1/Oy172Mg499FB+53d+h4ceeoiNGzeya9cu7rzzTt7//vfzjGc8A4ArrrgCgPXr17N27Vr++Z//mdnZWbZv385pp53Gww8/zPbt23nCE55QP4/WWh544AGOOOKIvebrxhtv/IXy+9znPpc3vvGNvOQlL9nnMV/4whd44xvfyOc+97mf+fen8tOf/pSLL76Yhx56iCRJ2LFjBz/96U9ZvXo1X/3qV7ntttvqvsuWLQPgXe96F6997Ws56aSTWL58Oeeccw5bt27dY+6xsTE+9alP8Ud/9EfMzMxwxhlncOyxx+7xd1JERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5FeR7GvHGCNggDj/vb5T36/ajTFYawkEYjTEGMAYiBBCwJj+SOccBgMYjDGkaUqr1aYsPWVZ0mg08N7T7fbwviRNU4yN82MizUaDVrNFjAFflpSlxzmLwRBj7K8TI74oKb2nH4Yl4IFIiAFiwDtIEos1FovBJilEQ7fbodvJ+/sLAIY8L0hTR5IkJElCq9UixkhZlvR6PWKMFEWB9x5jTJ0L7z0hBArvMdH310oSrLXEGPEhEOavsgwYazE2wTmHnf/E9ueLPtR5Hryq/Jdl2c+tMXjfz6W1FuccIyMjOOfm1ykJIZAkCc1mkyRJ6v5Upz0/ZyQSq8/5/Q7ur4qn7h/jgtgWq/a9sJZYsC+gzkkIoe7br6HdfRavaa0lTVNCCAvmHKzlGCMhhDr2xf0G9zWomtN7T4yxfy6LDO7JWrtgzkFVTSze8+I4H23uR5v30eKp8jPYtvgMQwgL9pYkSZ37wTpbON4SvKfXy4kmEubrGWNI0oR2a4giLwBD4lKMMThjsBGIkRAhWFvHUBQFeZ6T5zlZlrFq1Sq89zSbTYwxJElSxxJCIElTLBZfdgk+4Fz/2bTW0mq3yHzEOTsQ715yRFywt8XnYufjG7w/mE9jDDEEYqxq01GVT9XX+91rVKp562clevYaoPzGe+9738tznvOcX2rsv/7rv/Ktb32LpUuXcuGFF3LDDTfwR3/0R1x22WV86EMfqvt98IMf5IgjjgDg4osv5vd+7/c46aSTmJ6e5pOf/CS33347Bx10EMYYWq0W3nvuuusuPvCBD3DRRRdx3XXX8dWvfhWAF73oRZx++um0Wi3e85738KxnPYtPfvKTvOAFL1gQ2zOe8Qw+97nPMTMzwz/8wz/w7ne/mzRNGR4e5sEHH+SOO+5genqaP/3TPyWEwOmnn85b3/pWDjvsMK6//npuuOEGDjnkEO666y4AXvayl9FoNLjjjju47rrrePe7382ll17KH/7hH/5Suft5Tj31VO655x6mp6cZGRmp/05Wut3ugv5f+tKXePGLX8z//J//k6OOOqpuP/DAA7n//vs544wzANiwYQMHHnggABdeeCF/9md/xvOf/3wAJiYm9ph3sf3222/B2V5xxRUcd9xxe+177rnncu655wLQ6/XYf//9OfbYY1m6dClJkrBp0yb233//PeISEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREdlX9lcZHGOE2P8eQuj/xmCtxVqLMQZT9WN3P+89McZ+P9fvV/02BoqiwHtPlmWkaYpzjuHhYYqioMgL8l6PvJdDhEaWYTDMzc5hAGcdSZKQJAnWWKzpz2+NodFokGVZHUua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EREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfnPIdnXjsaY+av/vWoDAwZijMQYmb+1aIwhmrhgvhAC1lqIgRj7451zeF9SliVzc3Ps2rWL9evXMzU1zc6dO1i1ahVLlowxPj6Oc44YI0VREELAGIP3HgBrLdZanHNAf+6yLCnLML9OQpJYYozk3R6lz0kSR5Zl8/sIGGOx1tDtdtm6dSsPPPAgmzY9wpYtW1i1an+OPPJIVq9eTavVIoRQX9570jTFOUeapsQY6XQ65HlOYi1ZmtDMMqw1GNuPASBiCKH/3TlHiBGiqfdjrMU6199niPUeq1xW/QCSJMEYU8dT9Y0x4r2v71WXMYZGo4Gbn3/wXnWOVS4Hz3VQtQ9jDDHGeuzgeVd9qjirmllsMM7Ffep8Dawx2McYs2C/g/0XrzW4pyoPi9ca/D245719f7S+i+MbbFucy72tWfVbPO/inDyaxfuqn8lF51GWZV0zVR6rmhgcO3h+1R0DJNZSFIEylFhncWkK8/VU7SvGiLGWNM1oNpuYEOl1SkIMZFm/Lc9zZmZmyPO8jiHP8wX5StO0rvPEOUwMFL1OPzZjsNZhbf8dETC76wHq56pfZwHMfFzsnn9xjQ5ei8+xfo5s/zlefB6DZzc478Lz61/G9N+n8p/DX/zFX/Cxj32Mz3/+84yPj/9fWePFL34x//2//3fuuOMOrr32Wo455hjuueceHve4x9X1eMopp5AkCV/96lc58MAD65p93etex0033cTHPvYxLrroIl75yleybds2hoeHOffcczHGcN111wGwceNGQgisXr16jxiWL1/Oxo0bAZiZmeG1r30tK1as4M477+QHP/gB5513HjfddBOtVouXvexlZFnGrbfeCsDIyAgvfelLeetb3wrAS17yEkIIlGVJkiQ89rGP5aabbuLwww/fp3zceOONv3AOzznnHF7ykpeQ5zmnnHIK3//+9/fa77777nvUOZxzvO9979vrvUsuuYRLLrmk/v2ud72r/r5q1So+/elP7zHmGc94xqOu96UvfYmrr766/v2BD3zgUeNasWIF//zP//yo9xf7+te/znve85597i8iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi/zkk+9rRGLNHW4wRTCSGWPeJMTLY1Zh+uyFijMFaAxiMMYQQ5seY+XuWXq9Hp9OhLEuazSYHHXQQU1PThODxRUmv26XMc9pjY2RZhvce7z0hBGIIRO+JQJokZElSr1OUJalz4CwxBpyxYCLBWoiO1CUk1tLr5VhrSdMEMHTnppmdnqGZZRx68MGsXLmSougxOzvL9PQ0jUaDJEnw3vf3OZ+DGCPtdpvly5eTZRl5npOmKUVe4owlzVKstWD6SQox4n1JjJEksVgDht15McZgXP8zlGbBecQY6+/OOXq9Hs45jDEkSYJzjiRJ6n7OOYA6b1XcAGVZzp+hWTD3YNvgutVVnX91FUWxoF8IgRBC3a+KYfG4wToa3NdgPNU8g2OttXv8rs6kyt/gfDHGeszgOABrbX1v8b4H97q33yGEeky17uI9DM41uO7e9lWdz97m2P287flsDtpbrIO1Wq0zeEZVf+/9Xte11vbPyAfyXo8YAq1mk6SVkZcl0UCSpEQDRVFgrcFah03t/J4sM7NzbN28hY2PPMKPf/JTluy3lCOPPJKVK1eSJAlFUdS10mq1KMsS7z3OOebm5ti8eTPbtm0jsZalS8ZZOrGEkeFhQoxMTk4xNTVNt9ulPTzM8uXLsdbB/PuprmsiMXgisf9OWHTOg3uuzra6t/v9FefrEjAL62GxwbofnKf/PWBMpP9SkN90Dz30EFdddRWHHnoo5557LgCNRoN//dd/BeCaa65h1apVXHHFFb/SOs95znP4gz/4A4444giOOeaYuv2jH/0oV1xxBddddx3GGG688UYOPPDABWOTJOEzn/kMr3rVq3jb296GtZaXv/zlvOxlL+OjH/0or3nNazj++OMxxjA0NMQNN9zA6tWr94jh3nvvZe3atRRFQYyRpz3taXzhC1/AOccJJ5zAhRdeyHHHHcfSpUs5//zzF4y96qqreMpTnkK73eaf//mfefe7383VV1/N2rVrsdaSJAnveMc7OPzww3+lPP0saZqyYcOG/2vz/5/2vve97//a3Lfeeuv/tblFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5D8uE2OM+9Lx1ptv7A8wEWNM3R4JQMRaW9+PcfcVYiDGQPCBECJg5q8BsT/WWkuMMDfXYWpqCoAlS5YAhp07dxBLT9ZIaLfbJElCr9ej1+vRbDYZHR2l2WxSFAVzc3N470nTlHa7TZqmeO8JPjI722F2dgbrDMPDQ7RaTfqhR5xzGGPwPuBcAhh2bJ9k8+bNgGF8yTij42Ns3vwI3W6X8fFx2u02eZ7T6/VwzjE8PIwxhizLSNOUTqfD5OQkeZ7TyDJaWYPUWXwI5EVBjIE0zWg0m7gkmc+hwVjbv4zBGEMkEqGf0zLubo8R732dvyRJCCHU51Hdq/YWYySEQJIkWGsJISw8rxDq/iGE+re1tp6zirHqX5WQcw7nHNZayrKs+8cYKcuynqve43wdDX6vS2J+zsF71XrVmtUeBu8N5qHa++Lx1edgDqur2sfgvIPjB/tV7Xb+nEIIeO+JMdb5qs6jaqvGeO8py5IkSfY67+LYBi14/vbt8a3jcs6RJMl8nfv6nKp1qriruqpiHFy7yk0IAV+WxNLjIoBh166dbNqyhTIGli5fxvIVy8kajXru6Pu5cBi63S4PPvAAP/3pT9k5OcX07AwrV67khBNOYNmyZfWYan3nHN57Op0O27dv5/777+eRRx4hlCXLli7lsEMPYdXKlRTe88gjG9m48RF27tzJ0v2WcdxxxzExMdGPe6DUYowE5s/d7D7zwf0O7tl7X+eyaq/PIwaIYcH5Pdo5VWdb3etfHmsAAs+84Ip9OleRfw/e9KY3ccstt+zR/ulPf5rDDjvs1xCRiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj8v5Tsa8cQAsYYjFnYHmMgxjjYE2C+r8FiiMYSI5gYAEPV3RiDwRCZ72stMUZijDjniDHivWdsbJwsS5mbniEvuvR6PTZv3sxDDz3E1NQU4+PjHHXUUbTbbay1bN26lc2bN1MUBUuWLGHlypW0Wi3KIrBt23YefPABur0O+++/goMOOpCxsVEajZQ0TfHeA1CWJd4HyrLEOdePOwSccwwPD9NoNIgxsnnzZrZt28b27duZmZnhoIMO4oADDmC//fbDWkue53S7XWKM5HmOMxYTE2bn5nh440a2bdtGljVYdcBK9l+5kuHhYay1/f0bQ4yREPo59fO5djaZz33/XpX/EPrxWmvrMTFGjDH1+YUQ8N4TYyRJknrc7vPtX9U5VNfgXMB8TvZeI4OxVb+TJFlQJ4P7qtoH169iGrxfGayTKiZjTF0z1fkNquvR2nqOan6zqKiruhu8tzg3i+etvlcxLG6v5hxc0zlXr1O1V7ENjh+Mq/oczNnifAy2L5578Ky99/X6g2MWP4fVGGstSZIsmCNJEsoyMD01xfT0NJOTk2zc/AidPCf3Je12m/1arf7evacsS5IkxTrHXLeD956Vq1bxmMc+lh07drBp0ya2b9/OsmXLaDQazM3N1XVanVm322Vqaopms8nRRx9NDIG802V2tsOOHTvBWvK8oNVsM7R6GGMtmzdvJssyRkZHiaG/52pvzlqKosBas6BunXN1Dhfnd/BMdteGhciC/otrpzqDKu+DZ91/RwLGIvIfyTXXXMM111zz6w5DRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+TZJffIjBGANAjLH+Xnm0NmKsv8cIxpj5y2Jiv78xhhgjRVEA4JzDGEOWZSSJY6jZ4uGND9LpdCiKgrGxMYaGhvDeMzU1xa5duxgeHqYoCrIsI4TA3NwcU1NTlGUJWFqtFitW7M/k5E6890xOThKjZ3h4CGMMZVniXIJzCSGE+rLWEWMkSRJGR0cJITA9PU2v18Nay9jYGM45Op0OMzMzNBoNGo0GWZZhrSWEAPO5iRFigCTJyLImIQRmZuaY3DWJtZbR0VGstcT5eGI/YXV+rLX9NsBau0e+vff1feccSZJgjCGEUOc9hECe5/XY6rOarxo/eG/xOnu7H2Osc1a1VVddC/PtVV76NREX9I0L6mXvsVRjF+dg8ZjFdbm3dQZ/D15VTva2xuCe9xZjlYvqdwiBsiwxxuCcwzm3IE+L4/Xe75G3we9722M1X1Uji2umylvV31q7YP3q7Kp8pGla11OVh7Is558JizH98bOzs2zetInW0BBHHHEk0RoazSbWWrz39ZohRjD9z5nZWfL553hiYoKJiQnKsmRmZoZer0ez2axz1e12F8QHMDY2xpo1ayBENm3cyMzUNDt27CRrNMnSJksPXMb4knG2bd/G5s2b2bFjB+12m8DusyvLkiRL+/OysKYGczxYp4trs8pr4mxd01X/qs4frX4Gf8cIZeEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZH/n90+j/ekqu88/tc5p6q+y927+3ZDN2CDKIsCjSIgo4h7ov5cCEkUR0Xwp2gSNWbGjNEYzKqJ0SQyBhcUiZJxiTouBKIRlLhFo8QlmojQyNY0vd2+936Xqjrn/P74fqu67u0LNDOTnzPm/aTr8f1+q87yOZ/POXURERERkf+X2ENtGGMkxgjE+p4xpr6cc1hrsdau6BNCwHtPiLG+12QaY436O0II9Pt9hsPhqG8IDIfD0XNjMUC30+HorVs55eRTOGLLEQTv6fd69JaXaWUtjn3wsWw75RSO3rqV6alp2q0WE50uc7NzbJyfZ2ZmBmctvvSjmGLElyXESAxhlBwzWosvS2IIJElSx5GmaR3z3Nwcxx9/PKeffjqbN2/GGMPS0hLee7IswxhDWZbEGOm0u6Rpi1a7w8aNmzjyyKOYnZ2lLEqWlpYZDnLK0uN9qNceQoAYwYxyF0Jo1ONAHar8N+uysnbjoo/bVM+q+jnnMMbU7ZtjVs+qfnVc92N1HN77OhdrPa/2C7BiT1XtqthijPX95r1m3Pc2dlmWlGWJ9/6gvve296v1VrmvNO9V11r3qrVWeW6urcpvdVXjNmNcndNm7tbaCyvOXggYY0iSpD6fVZ7SNF1xr7nOSpIkpGl6UD0AirJg0O+ztLjE/v2L+LJkdnaWLZs3M79hnk6ngzGWsijBGFySAAaMYWp6mvUbNjAzO0tRFCwvL9d17ff7DAaD+uxUa/Pek+d5fS/GSFkWgMHZhHxY0uv1McYyOTlJmqTEOFrD4uIiwzyvc3Rgr0XSNFlxbpp5bdZ8dZuVeTtQq2Ztm/u0KIq6Hs28l2VJnhcMBznDQX6fZ0rkvmzduhWAc845h+3btwPwkpe8hOuuuw6AT37yk3zta1/7KUX372/1+r75zW/yy7/8ywDs27ePN7/5zYc8VpXL6vP+XHDBBVx//fVccsklXHHFFQB84xvf4KyzzqLb7fLsZz97RfsrrriCSy65hOuvv54LLrjgkOMSEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfm/jT3UhiEEQgh47/HeE0IgxkiMEQBjDNZajDEYY+p+kTj+cqBtxRgDhrqPc46qq3OOEALD4ZCiKEiShDzPscaQJinOOqyxpElClqYkLiEf5gQfSJOEiW6XdXPr2Di/kXVzc3TaHQB279rFj/7t3/jRv/0bd915F8tLy5gIrVaLTqdDu90mxkA+GOLLEjuOy1lHkiTEELDWYq2lLEvyPAcgTVM6nQ5ZlpFl2ahtjJRlWecsz4t6PcPBkL179vKTW3/Cj2+6mbvu2kFRlDiX4MtAWfoVfX2o8u4P3BvXYXUtqviqOlTPq5ynaUqSJHXemzVrjle1d87VY45KGVfUu7pX9S3LkhDCmvuomqvaS815mvum+l3NW81dzQWQJEkdW3MPWmtHNWvE3ezfHGP1veZVjdPMZ3O85n5vXs1nVU6qulTjGWPqnK2uW9XGObeifs2YV5+3qk5r1aq6Vud4rXWslY/m9xACxpg69zFGlpaWuHvH3ey8eyc//vHNfOfGf+amH/2YXq+HNZayKIkYrHVY6yi9pyw9k5NTzG/axNz69QDcfffdLC4uMjExQavVWrG/W60WSZKMz1GO96PzUZYldrzmEOP4HWIBA1jK0o/7twlhVNMkSer9P8rDgdxVz5p1Wn1Vbaurzltkzffh6lyu3iP12fGxzpH8x/CUpzyFk08+mW3btvHYxz6Wb3/724fU75xzzuHoo49m27ZtHHvssTz5yU/ms5/97L22f+9738vjH/94AD75yU/yta997d9lnqbrr7+ea6655pDaruXSSy/lzW9+MwCf+tSn+PVf//X62e/8zu9w/PHHc8YZZxzUb/X6TjvtND784Q8DsG/fvnrMQ/WpT32KPXv2AKM1bdu27X77bN++nTe+8Y0AHH744fzZn/0Zb3/72x/QGHfffTenn346ZVk+oHhFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH4a7KE2jDESYySESAih/r36eXXLGIMxBmss1tr6tzFmxfPmvbIs8d4D4JwjyzKyLCNNU9I0xQDD4ZDBYEAIYcVYWZZRFEUdTzVW1bcsSxYWFti3bx8hRmZnZ5mbmwNgaXmZwWBQz1utxxhLkiRYaymKgn6/z2R3AmsteZ4zHA7x3mPt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MweeYxo9wLkEay1lWeK9xzlHjJHlxUV6wNLiEmmakKUZwXuctVhjcNaSOEcMgRgiiXMYoLe8zNLyMstLSxgcrVabVpaRZSllWdDKUianJkgSS7/Xo9VqkyYJ1jr6gwFlUWCtIU1aZGlKnucsLCywtLREnufEGCmKAu891lo6nQ69Xo+iKOq8GWPw3gOQJgmLpafX69E1XTqdzmjNxpJlGe12q85liIEQqryOMhtDIITQyDf1pzGm/m6tHeffrHgOUJZlPUYlxlj3CSHU8d6bsizr9s25qrGaMcYY8d6viDlN0zq25rVac8zm2ABJMtorzf23em+uda/5uzln9cxau6Lf6j5Vv+r+Wu2qzzCu1+r1VN+rc7U6X80crh6zGUOV26puq9fWrOta1spbc+5qzCovVazVnETI85zdu3dz6y234oNnYnaaB23dyrr5ebJWazxOJM8LOp2EVqtNQY4xlsGgz969e7njjjvYsmULmzdvxlpLr9fDWkuSJIQQaLVaOOcYDoekacrRRx/N1NQU+/btY3lxmTIvSUyKwTAYDAFDWZZkWYt2u01V5hgjMYzeU839W61n9fusWn/1TmrW56B6VNeqc7n6nK2V59EcBmMCcPA5kJ9dL3zhC7nuuusAuPrqq/+XxznjjDN4zWtec7/tdu7cyfbt2/n2t79Nq9Xi/PPP56Mf/ShnnHFG3WbPnj30+30AjjvuOI466igATjvtNHbu3MkNN9wAwGMe8xj279/PpZdeSr/f56yzzuJJT3oSZ555JhdffDE33XQTX/7yl/nABz7AzTffzKc//Wm2bt3Ku9/9bo444gge9rCH1X8rm66//nq2bt3Kz//8z3P77bezf/9+8jznlltu4Stf+QrGGN72trdx0UUXAbBt2zZ+/OMf8+hHP5oHP/jBPP/5z+fVr341X/va1/ilX/ol1q1bx7nnnsuv/dqv1e/j66+/nrm5OX7zN3+TD3zgA3z605/m1a9+NS95yUu47rrr+MhHPsJzn/vcg2I77LDDuPjii4kxctVVV7F+/XpijLziFa/gHe94B//tv/03AL7//e/z53/+51x55ZV85CMf4VWvehWnn376irFuvvlmLrnkEq699lqmp6e56aabeOxjH8v27dtptVo88pGP5Dvf+Q779+9nenr6fmsrIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIvLTkjyQxjFGII4/wRiDGX+31o5bGYwZPzOmbmuNAWcJITK+hTEGMND47b0nSRI6nQ69Xo8f//jHzM2twzrHoNfDWUsMkXvuvpv9+/YxOzeH9540SUhcQuIcg36P235yG8YYiqKAGOkP+rRaXYgQQ6BdtjAGnLNEH3BpSrARIphxTNZYWllGlqTsW9jPjp07mJ2bY6m/hHOOVqvFcDhkYWGB4XCItZZer0en06HdbuOcI8aIMWb0PUQW9i8wGPSJMTIYDMnzXQwGfUIMzNgZvA9470dpMZEYw8oijHN0oB4Hcl1dRVHUNbHWEmOs46hy3PwdYySEsGKsA/Vs1oo171fX6nshBEIIK+aq2lXzVnOv1Wat/RfCKD9VjCGENdd48L697+9VTM2crc5rNW4Vb3WtVq2tGUcIYcU4VeyVas5q7NGziLUOa834zMRx3AfiXyuGZo6r7865+nuz3s65FfeaNan2STM3q+tlnaXd6bDpsMOYnJhibv16pudmaLXbTE5MUhYekzo63S79QZ+y9DgXGQxzQvAsLS6xc+c9GGPodjpkaYovS6wxZGmKcw4PlGVJDIF8mJPnQ1qtNg866ii2Pmgr/V6P3ffsYfc9e+gt93EWnHWE4AnBj9d9YB0uceP1UO+lZs2a67TW1veq81zlpJn3er+vOq+r905zX63et85CjCWw6szLz7Qrr7wSgA984AP85m/+JldfffX/0jhrvYvW8pOf/IQ777yTM844A4A777yTVqvFV7/6VTqdzkHtsyyrvzvnVvwOIfC5z32Ok046CWstt912GzfeeCNnnnnmQeNcc8013HTTTezfv5+XvOQlTE5OYozh7rvvrtsMBgMAbr/9dj772c9y6aWXct5553HFFVfw0pe+tH4O0G63V8RVliUAu3fv5tJLL+W9730vSZJw2223MTs7S6fT4ed+7uf4xCc+AcAVV1zBi1/8Ys4991z+y3/5L1x44YV8/OMf57jjjmP37t08/OEP57nPfe695jHGyNvf/nY++9nPUpYlCwsLnHXWWfXzrVu38sQnPhGAX/qlX+KCCy6g3++vmZOzzz67vmet5Sc/+QkPechDSJKEubk57rzzTqanp+81FhERERERERERERERERERERERERER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82YAPvnJT7J+/XrWrVv3gMe64YYbuOSSS7j00ksBOPbYY/nOd75Dv98nTVN27tzJpk2bALj44ov5lV/5FR72sIfx67/+61x44YW87GUv4znPec7ob1+e8/SnP53TTjvtoHluuukm/vmf/5m/+qu/AqDf7zM7O0uSJPzrv/4rn/vc5zj77LMBmJ6e5tZbb+XDH/4wr3jFK+j1etx222089KEPrcd76lOfyh/+4R9y0kkn8bCHPYwzzjgDgJNPPpkQAueddx6zs7Ns2rSJTqdzv3kYDAbEGPniF7/IqaeeytatW1c8f8pTnsLs7CzHHHMM1to61w9+8IP53Oc+x6tf/Wp27NjBRz/6UX7hF35hzTl27NjBZZddRlEUbNiwgenpaRYXF7niiis46qij6nbbt2/nuuuuY/PmzZx11lkMBgO++MUv8q1vfYtWq1Wv/01vehPf+c53OPnkkwH4x3/8R04//XQA7r77bowxHHnkkfe7dhERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRn6bkUBsWRQGAMWbFZa3FGHNQ++o5gMEQYyDGSIxh9JsA1gIQY8RaS5IkLC8tUZQlExMTPPzhD8daiy9LSu/x3pM4R5KmTM1Mc9SDHoQPo/vee4qyJG1lbDrsMJxzOOfAQAhh3DfFzTlijHVsIQSKoiDP81F8xmGcwcEoPmvoTE5wWKfNxk2b6LTaFEVBWZZ472m1WhxxxBFs3boV5xxLS0ukaQpAnud13qy1OOeIwWOtYW5ulsM2H0bWamGdI3hPXhQUZUEIYRSfMYQQRmuIEQPgPcRRfomrsx7H/w56sKJ9JB6onzFYY4kxghnXDcP4H3Fcv9G/cZ0NDIfDUZ9x7ax1WDsayzgzfjZad7V+W62HA/eNGbddI06A4MMoHwdWiLO23nduPDdEQgiEEMfjgHGuzqUZr9NaQxzXPYTxngwRLAfiiLHeI/W8MY7jMKP8jWPx3mONwYzjGY0XKL0nxkiSJDhrIUnqtdf1jRFjDQZLtONMW1PPEQGTJlDFZcAYixl9HVUyRryvzlas19Ccy3t/0F5oXoSIGS+omruuT1X78V6p1tnMS5ImbDr8cJIsw2Upt99+O8MiZ2JqkqmpSfI8xxhDp9Mh7XaB0f7p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iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIjI/TIxxngoDa9675+NOhiDMQZrLdba+neSJBhjVrSJMR50hRDqNtUYdTCNPgDOOay1db/FxUXSNCXLMowxeO/x3q8Yy1qLc64ey3tPWZaEEIgRjDkQdzVuM6YkSeoxqtiqcUIItJK0HrMsyzrOav3NnFRzFEWB954YI3kxxDlLq9UiSZLR2CEQV6+XOP7vQF6IESIQDoxfxVd9VlezTs3crm6/ev1V7tbcLI11ZVm2om9zvBgjzrm6Ps14qjiq3K3OVzV3s0bNqzlXjPGgdlVfa20d21pjVHlpzr9atb7V+7aZ1xDCvcYfYyTP8xU5beYnSRK8L+p7q+MIIdT5W13XA7ke7enV66z2pXOONE1X5G71OW3mdK02q2u/eq7qbDTPXdWuKAoGgwFJktDtduv7aXrgHLVaLfbv30+n06GdZhTBM+wPyIscQiQYmGh3yMuS4Eta7Q5lWdDv90nTdBQPkGVZnbeiGOXVWkuSJPV+rOpYnfHmWpr7oizLuk7V72r81Xmq9lCInhADxEgMK/era+QxhICJB86btRaHwQC+KDERnnT+hQftRxEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZH/GyWH2tBaC4AxZs0rhIAxpm4XYzxoDDP+rNqOG8J4jCRJKMsSX5aU3mOtxTmH9548z5mYmCCEgPeexDna7TbWWsqioChLyrLEWjsaHwgx4r2vY0mSFGvdirirWL339Tq99xRFUf+21hJjJIRAvyhptVpMTk7Wc5VlSQiBGCNpmo7W4P2BNQLOOay1rN+wDoj0+33yPCfEiEsSsjTFJY4QI8PhkBgj0VCPYYwhApGIrXN3IK8xjn/HUczGGKr/6jyPP6sahRBGY43HrtZqjCGGRv0MB+Usz/NRjDFimvuDapp4YM56mANrWb2f6pgbc9Rtq7WP52vurdE6x6MbAwacdVhrCD4wWp4lxECMAWJckdN67vF+qcZuxhQbOTso/iquEIkmjuO1K/YOoy0OxpA4N4rVGtY6L6vXH3wYx74ql1XfCJgDYzTbVXuuLMsVY1d9q/WFEEb1jlBtqjhuX53PGCKBsKqmpt4bSZIQQmB5eZler0eSJExOTuKcwzlHt9vFOcdgMCDP89HaQqg/+/0+w+GQJElI05Q0TZloTWLGtSnKkryfY60lzdJRnYuCVrtdj1uWJTHGer3tdptOp0NsnKkqD0mS1Oc3xli/Z6r8OOfqHDbrVNW1mecD3019ThslXFPVp65Z1cEY4v30lZ8973//+7nwwgv5xCc+wbOf/ez7bPvHf/zHXHnllQyHQ574xCdy2WWXAfCqV72KGCN/8Rd/8X8kpg0bNvDNb36TrVu3/m+Ns3XrVtrtNt/73vdIktH/cpx22mm89a1v5ZxzzvnfD1RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH7qkkNtGGOsP6219XdjDABlWWKMwVqLtba+H2MctRv9gBAgBOL4WRi3CyEw6PVotVpkaYo1hhgjqXN0223s1BQxRvr9Pv3BgGGMtFotkiQZzRUC3Xa7nrMsSwgBCyRpSpIk+BApSo/3nhACzjnSNK0/rbWkaUpZlnWbijEGIpjxevr9PiGEepwkSciyjKIoKIqivu+cwxiDMYYkSdi7bx9FWWCMwTlHlmUkSQLGUIznBQhEYhjl1yRudC9GTBjVwY0ySpVWUz0HnDmQ/2YbxjW0ow+cdQQMYTyWMQZTtRu3BTAYDNTXqN6+3hMYA8QDE8UIMWAiJMaCod4T1X5wLlm5P0LEWoM1BmssIQS896M+VWyAMRZjD4xTj8H4dwRjIiYaTIyj2M14/4ZRbMaaUQ5ixJoD+TAhEsc1N+M9buq0mXo+A+BH7Syj+GJdL4iM9o4x43mIRD+upbWjNj7gSz/OuanTZ60dZ3uUUout11qdt+b5G/1HvcdWt7PWjs7Cir0QV+TPjtLGgdKP1lFtIefsOL8rtgXWjubEGsowOletVotut1ufwRACrVaLhYUFJiYm6nNSnZU8z3HOseXIIxgMBgyHQ7z3DIscigPxZlnG1Mw0g8GA/UuLo/OUpdjE4UMgLwoM0Ol06Ha79dh5nte5sdau2DPe+/q8VfuzeVVnopmr6nf1CaN3V6wOoYl1Ipvvx+qziqHar3VfwoG9Jf+hbN++nfe85z2ceeaZh9T+hS98IW9605v47ne/y7HHHsuf/dmfYa3lQx/6EH//93//7xztfSvLcvT3bJXhcMjll1/Oy172sp9CVCIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi8u/NHmrDsiwpyxLvfX2FEAghEGPEGIMxBmvtmhdAjJEYY93Pe1+PGWPEOQdAURT1vRACg8GAffv2sbi4SFmWtFot2u02xph67izLyPMc7z3GGNI0rcfL85zl5WV8CCRJQpqmtNtt2u02WZZhrcV7T7/fZ3FxkTzP63FXaPys5mi1Wjjn8N4zGAzqHCRJQqvVIk1TrLWEECiKAmst7XabbrdLq9UihEC/36fX61GW5WjOxrwRDuQ5jPJxUFzj3DZjqz5Xt40x1rkF6vpUuazmurerqns1dnP8qr7N78YYkiQhSRKcc/VeqOas+t/X3NV+q8ar8ttcbzVftb5qX1bjrrX/mnlba/7m/qzmr9qtlQdjzIp+RVHAuH6rxyrLkuFwWMfZ/GyOvzqfzflH43iKolhxPpvzVXuquqr8rI5xrf1UzW2MqWtXXc45nHOkaVqvO01T0jQlxkhRFOR5Tr/fp9/v0+l0SJJkxbOyLOt5FhYWKIqCLMvodrv1ubTWkmUZg8FgRUytVgvvPfv27cN7z+zsLO12m+XlZfbs2UOe53Q6HSYmJurzuTp/RVGseNdUe7K5H6ocFkVx0P4+eN+sfCc292fz3Xhve957z8CX9EO5Zk3kZ08IgZe85CW84x3voNVqHVKfww47jCc/+cl8+tOfJsbIYDDgk5/8JFu3buWUU07hG9/4Bk94whM47bTTOPXUU/noRz8KwPbt25mdneV3fud3eOQjH8mxxx7L1VdfXY/7qU99ihNOOIGTTz6Z1772tSvm/OY3v8lZZ53FySefzOmnn86Xv/zlFWP+5m/+Jo94xCO49NJL14z5kksu4fd+7/fo9XoHPbvqqqs444wzOPXUUznllFP49Kc/XT8755xz+I3f+A3OPvtsjjrqKH77t3+bq6++msc85jFs3bqVt73tbXXbH/3oRzz96U/nUY96FCeffPK9xiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIv/nJQ+ocZLgnAOgLEuKosBaS5IkGGMA8N4TQsAYU99rMsZgrSWEQIyxbtNs3xyvepamKYPBgBgj3nuMMTjnMMYQQsB7T4wRgBhj/T1JEkIIFEVBPsxJs4w0TYkxkuc5IQSstVhrSdOUJEnw3uO9B8BaC1DHO9WdYGlpCe89nU6HJElWjFONHUIAqGOMMVKWJWWZ0+60MdXaraUsy9H3EMnLfJTjUfgUeQ7AxMQEJjEs71/Cpm0cpo6ruqp1DIdDsizDWlvnpcpptY6qVjHGOm5jDEVRUJblirpW+YwxjvKY51hrybKMTqeDHa8hz/N6vCq2qtbD4ZAkSUjTtK5fFV9V+2q+Kv/V/Wp9AEVREEIgSZI6v1X+Wq0W3nuKosA5h3Oujts5R5Zl9RqKoiBJEqy19Z4qy7KOuTlv9Xv1Po4xMhwO6XQ6OOfq2Ko6NNtVe725rzqdDmVZ1r+b56vKcxVXc29V9bTWUpQlZTgw5ur+1dpbrVad72pO5xxJkrB7925mZ2frvd+M2TnHYDAgy7L6zDX3VVmW5EWBdaO5Qwh1m+ocVOus4q7yX+Upz3Pa3U59P8uyOpbhcIj3nunpacqyrOfN85w0TUnTlBACS0tLpEnC5OQkvV6vft5ut+uxANI0rfdks5ZV3NX7qzoj1b5M07Q+59Uer/ZYte4QPRgwGGzjfWZGL6U67mrvN99TGINxFghEe9BrU35Gve1tb+M//af/xCMf+cgH1O+iiy7it3/7t1m3bh3/8i//wvve9z4uuugi9u3bx0tf+lKuvvpqDj/8cHbt2sUjHvEIzjrrLAAWFhY4+eSTedOb3sQ111zDq171Kp72tKexc+dOXvziF3PDDTdw4okn8u53v5vdu3cDkOc55557Lu95z3t46lOfyj/8wz/wC7/wC9x00031mA972MN4y1vecq/xnnLKKTz+8Y/n7W9/O69//etXPHvqU5/K8573PIwxbN++nTPPPJNbb72VVqsFwK233sp1113H/v372bp1K3v37uWGG27gzjvv5LjjjuPCCy9kamqK5z3veXzwgx/k+OOPp9frceaZZ3LGGWfwqEc96gHlVkREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREHrjkUBvGGFf8ds4RYyRJEpIkwRgDgDGm/t7sW11NIYT6e9WvamOtrcfx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v7MB2u12/d05d9Dv6ryvW7eOG2+88X7jEBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGR//OSQ21orcUYA4AxZsX3GOOKttXvEMKB7z4QQ6j7rB6nEkLAe4/3vu5rra3nb7VapGkKQK/Xq+9NTU3R6XTqeLz3hBBI05RWq4VNHN5H0jTFOcfU1BRJktDtdnHOMRwOabfbTE5OMhgMAFi/fj0bNmyoYwwhEGZmmZmZYd26dXQ6HbIsI8syAFqtFnmeA9T3Z2Zm6py0Wy3Wzc4yNztLCIH9rTZ79+5lcXERQiSGSLvbZsPcOoL3hLLEh8DUxAST3Qm67TbRe4adDotlifcegDRN6XQ6DIdDkiShKAqSJFmRq4mJCfI8pygKnHN1Tp1zTExM4L0nz/M651UeYxzlbGJioh7PGEO73cZ7T7/fZzgc1mtutVq02236/T5FUVAURT1uM49V38FgQJZlpGmK957du3ezZ8+eOv9VHpeWlrjnnnvYtWsXw+GQ6elpyrKk0+mwtLTEnXfeycLCAjFG1q9fj/eeyclJdu7cyZ133slwOGRycpKNGzcyOztLlmV885vfZOfOnezZs4csyzj88MPZtGkTSZLUc8zMzBBjpN/vs3//fvbt28ddd93FXXfdxdLSEuvWrWPLli2sX7+eXq/HHXfcwd13300IgVarxdatW5mZmcE5x44dO7jtttuIMXLEEUdw5JFHsmXzEWzfvp0f/vCH7N69m06nw+bNm9m8eTMzMzMMh0PKsqTdbjMxMVHXM0kSIpG8KPChZDgcEkJYcUaWlpbYvXs3O3fuZHJykomJCUII7Nu3j71791KWJc45ZiYmmZubw1pLv9+nHO8t5xzdbpfp6Wmstezbt4/FxcXRXm63WbduHbNzcwDs2b2b3mBQ76d2uz2KMcY6L845Wq0W3W6XVqsFwGAwYP/+/UxMTFCWJSZEklZG5hI8EYdhYmKCxX0LYA1pkuCNwVnHRKdLOj3aj8MiZzgcYozBWluf7WpvW2vZu3cvxhicc2RZhnOOGCPD4ZCiKA56H1VnpHr3VO+z6myE8fusOifWmfEzgHjgvRgjpvH+pPG6rNrECNEHMBb5j+HlL385L3/5y+vf55xzDq9+9at59rOffUj9L7zwQt785jfzpS99ife///0AnHXWWXznO9/hV3/1V7n00ksBuPHGGznxxBPvc6xHP/rRvPjFL+aHP/whxx9/PO973/vqv2XHHXccIQQ+97nP8eQnP5mvfOUr7Nixg23btrFr164HtOY3vOENnHDCCfV7DGDv3r0cffTRAHzwgx9k7969D2jMKsbp6Wne//738+IXvxiAm266iXXr1rFu3boHPJ6IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiDwwyaE27HQ6WGsxxmCMAcAYc9C9exdX/Gr2jTES4+h5q9Wi2+2SpilZlpGmKc45AAaDAWVZEkJgYmKCzZs3kyRJPff+/fux1mKtJYRACIEYI0VRkPeWyQtPq9XmsMMOo9PpAOC9r9tt3ryZdrtdx5TnOXmeE2Nkbm6Ok046iU7WYmlpicFgAMD8/Hzd3ntPkiQMh0O897RaLU444QSSJBnNEQKD3jLOGEIIbNq0iTRN6/z5ECjKgjRJOf7440mShLws6C/3iAZSl1CWJdPTs4QQKMuSPM/x3gOwfv16jjvuOKy1APXzGCOHH344rVaLNE0pioKyLCnLEu89zrk6z9X9aj0xRtI0pdPp4JxjMBjQ7/fruKs8J0lCmqZ1vh/60IfS7/frsaucWGs5+uij6Xa7hBAwxpCmKd57er0e3nu63W5dQ4CiKEabNUnw3lOWJc45vPe0223KsqQoijom731dk6OPPpoYI8PhkDzPMcYwOTlZ758YI0mS1Dmr1u29r/NkjME5x9TUFBs3buS4444jxljHX+2fGCPHH398HWP1vN1uY63lqKOO4hGPeES916vPww8/nPXr12OMIcuyem15ntPtduv77Xa7zm9RFETiqFaEeg81z2a73WZmZoaZmRmSJCHLMgCmpqaYmppiOBxijGHjuvW02236/X5de+ccWZYxMTFBq9UihECe5+zbt49+v0+WZaO9Mf68a8dd3HrbbQwGA+bm5pifn2f9+vXEGNmzZw+33347g8GAJEk48sgjedCDHoQxhp/85Cfccsst7Nu9hyRJ2PqgB3H8CScwNTnJbbffzq233sri4iK95WWOetCDOPLIIymLgt27d9MfDLDGEGKk0+2y8bBNTE9PMxwO2bt3L8PhEOccnU6HyclJJicnWVpaYmlpibIsabfbzM7OMjs7y+TkJL1eb8X7qarR6no1VXt0tB8ikUgMgeDDgX7OwTino8FHr8OqXlU7A7gI5uBp5D+gN77xjWzevJmLL754zecPechDgNE+etzjHgfA3Nwcp5xyCtdffz2nnHIKRVFw1FFH8clPfvI+55qfn+d973sfz3nOc8iyjJ/7uZ9j/fr1AGRZxsc//nFe+cpX8hu/8Ru0220+9rGPMTk5ya5dux7QmjZs2MArX/lK3vjGN9b3/vzP/5zzzjuP2dlZnvCEJ3DUUUc9oDFh9LfhM5/5DK9+9at5+9vfjveeDRs2cNVVVz3gsURERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5IEzMcZ4KA0//sHLRh2MWTmAMSuuZpt66BiJ3hN8qO/FGOur+bvqG0Kox3LOYYyhLMt63mbb5qdzDmvtivFijHjvwVgCkBcFIQScc7RaLZxzFEVBv9+nLEva7TZZlgFQFAVlWY7GtpZQetrtNu12G4DhcEhRFFhrSdMUa20d/3A4pN/vk+c5aZoy0e0y0W7TyTKKoiAvi3r97XabVqtFUZbkeU6MkSRJiHa0bmst1lqGwyHej55lWYZzrp6vuvr9Pp1OhzRN8d4TY6zjyvMcgE6nQ5ZleO/p9/v1GpIkwVpb5zKEQK/XoygKnHO0222SJGEwGNBqteocAaRpijGmbru8vIxzjm63Swij2jfzWtUgTVNijHV9W61WnfckSeo6Wmvx3tf9vPdMTU0RY2Q4HOKcq+ufpilLS0s450iSBOccMUbyPGcwGJDnOXNzcwCUZVnHF0LAe09ZlmvuzWq86rLW0uv16n0zMTFBmqb1OPv37ydJknqPpmlKNq7/0tISZeHpdDq02+06d1W9sywjSZJ6j1XxhRDqvBRlgY8Bm7g6r8PhkBhjPZf3nl6vhzGGqakput0uxhi89zgMy0tLZFlGWZYURUGWZVhr67paa+s+leZZtNZinGP/0mKd66IoSNOUNE1ZXl7GGMNgMKAsS9I0JUkSyrJkeXmZvD9g08aN7Nmzh6IomJycBGDv3r0Mh0NarRZLS0ts2rSJ2dlZFhcX2blzJ4PBgBACg8GANE3ZsHGedrfL/v376+fVXm6322ze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uvnmmzn22GN505vexG//9m/fa7vzzjuPZzzjGVxwwQUHPfsv/+W/MDk5ySWXXPJ/JCYREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfk/JznUhjHG+rsx5sB3a1b8rtpW7a2xWGcw0UIwYME12sQYCNETY8QYg/GeEMbzWUOMkTIGYvQMihxjR/M7ZzHGEYEylqOxCjDWYq3FOYcFDBBihBgpfYnzo+fGGqy1MH4eYiDGQFEMMdbiYyCEACZSekNRFuR5SSuZYDRcXJGTKi/NXByUM2MIBjwRYsCE0f2qnQmj/gZDjAETIiEECl/ivR+tOzi89zjn6r7e+1Gs43mstXUsa8UTvKeKrMqVCYYQwoF53Ci3RChjAB/AHxjDWUuoaxgPms/7eNBeaebMlwVlWeJLD2bULoRQr8M5hzWGAOS+pAwBUxYrxknTdLSeEA7KdZWHtVRtYwiURahzWOUDwKYJ441IxBAZx27AWQPOEgwUZVGvca2cG2tGu9CAwWKjg3Cg5ta6ugZVTZuSRj1jjHWNVq959dpjjDjnSJIE2zgT1fj1njOGNE3rZ8F78mJUmxgj1lp8WeKShI2tw3DOEXygKIu67kmScOSDjloxvveeYjyO9575+XmyLMNaS1mWlGWJMYaHPvSh2AjD5R7FMCdNU6ZmptkwP8/hWzYzGAxGe8Fa8rKs6zA9Pc3DH/5wQgj0+33KvGR6YppW2mJqYoKjjjiCBx15JHmRE0NgZnKK+fl5du3axb5du+gtLlGWJdMTk0x226xfP0c0lmy8n7z3eO8py7LOrXNuVa4hxsZnY3+FEMf3qz3t6/6j1DussZgkGeUsJkQ8JTkHRpL/CD784Q+zbdu2Q25/0UUX8fSnP503v/nNXHrppVx66aWceuqpfP7zn+e9733vv1+gh6AsS5Lk4P+teN/73scTnvAE3v/+9/OGN7zhoPfc/47qb8a9ve9FREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREROTfX3KoDWOMABhj6ntrfY8xEmMkhFDfM8YQQySGiDFmfAEmQgQTTN3WWgsk4/kCIYTxeL7uZ4whAgaIjfkjYI3BmgRr3Ir4ALwPxBhwztXPYzSEEPDBE2PAmNEYxphRLObAuo2BGAMxmnF8ccX4McbxnKPIRuNX8a1sV8Vfra/inMMlDmstxpg6j9V1YI4Dqmd1HmI86PmK39ZS3anmaY5jrcVaO45zVLcqzmr+JEkwIay4X41ljKEsy/uMq+oTiVhj63mbsfoQDvQ1EcOBPXZfe897T4yRdru94n5zjVU8a+1Xay1JklCWJWEcA/HAGWjuudX5q+ZrxlnnxVqsc6P+q3JRzTPa/wfGqH6vHnuttTQ1f+d5XsfinKuvan8NBoODYgmN2sJoX+Z5TpKMXhnNulexdzodWq0WAEVREGMkSRKyLKtzWRQFeZ4TQiBNU5xzhBCZXTdHf7nHcDhkedCn22ozNTNNd2qSEEI9v/eeEALtToc0TUnTdDS2j3Q7E2RZytxgjhAC3W4X7z29/jIAg8GAzUcewTEPOYYkSfClJy9yhsM+i4uLtDpdbJIc2Pvjyzk3aj/eV/f6DgRCvZdGOyXGsOIMV/UEMNZgja3z6YMfvxdXnleRpkc+8pEcdthhfPazn+Vd73oXl19+OV//+teJMTI/P8+1117L7/3e79Hv93HO8Za3vIXHP/7xXH/99fzqr/4qZ599Nl/+8pcpy5IPfOADnHbaaQC8613v4q1vfSuTk5Oce+65K+a89tpred3rXkdZlszNzfGXf/mXnHjiiVx//fX8yq/8CmeeeSb/9E//xOtf/3p+8Rd/cUVf7z1XXHEFf/d3f8fznvc8vvCFL/DEJz4RgB/+8IdceOGFLCws8JCHPIRer1f3u+uuu7jgggu47bbb2Lx5Mxs2bOD4448H4JJLLuG73/0uS0tL3HbbbXzuc5/je9/73prr/tGPfsQFF1zA0tISIQSe9axn8fu///t8+tOf5vWvfz3WWsqy5A/+4A941rOe9e9ZOhERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRn1nJA2lsjFnxO4RQf7fWHvQ8xkiMkRACMURiBIsbj8VBbUMIdR+IK56BIcsyIoEQRpcPAWstSZLgnMO5FGMM1tg6vlFfMIA1hmraEALee2KM+OAJ0Y8Skth6rdYajDWjtVmHtQ68JUbTiHNlfmKMGAMHHsUVuRuNa+urmSdjzEE5bLarOOdWtG2us17v+PlaNWmO12xTPVu9trVqW/V1ztX1uDerY1lrbOdc/cwYQwiBsizrftbauo1zbs18xRjrmt5bfVbHUo2ZJEl9v9obVZ/V46xefxVfsx5V/9W1bdZ8dS6qM9C8XxTFij3TbN+836zBinMXI61WC+/9ijU155uYmKifV7E2n7daLYwxeO/rOZIkqeeucuS9p9frEWMkSZK6TTPPAK1Wq65nnufkeU4MAWctrW6HsizpDQZgRvsjxIgfDLDW0m63McbQ6/XI87yuQVnmLC4vkeUpeT6gKAp6vR6BCDGQtVpMTU1RlCW9Xg8fA0RwzpKmKVkrozcscON3SlWvLMvq98tgMFiR+2bdmud7lI9ACIw/w4o97H0gxnGdiMQQyfNAXgxot1Mw936W5GfPC1/4QmKMnH766bz5zW9mfn7+fvtcdNFFvP/976ff7zMzM8P73/9+3va2t3HzzTdzySWXcO211zI9Pc1NN93EYx/7WLZv3w7AD3/4Qy6//HLe+c53ctlll/H617+ea6+9lu9973v8zu/8Dt/+9rc5/PDD+a3f+q16rp07d3L++edz/fXXc9JJJ/GhD32I8847j+9///sA/OAHP+Cd73wnl19++ZqxXnvttRxxxBGceOKJXHTRRVx++eU88YlPBOAFL3gBF198MRdddBHf/e53Oe200zj//PMBeOUrX8npp5/Otddeyx133MG2bds4/vjj63G/+tWv8u1vf5tNmzbd57ovvfRSnvGMZ/C6170OgD179gDwhje8gXe96108+tGPJoTA/v37H2DlRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERESkkhxqQ2PMis8YIyEEYozEGLHW1pcxBmtt3SaEgDUWZx3GRKwdj4Wt+1btqvFijPXcMUIIEV8UGGMYhWCAqq2B8VjGGGIMhAAhhHEsDucSsGDGc1RzVWuyxo7XZkbzeT+KzVkSdyBexm3uLUej+eO9Pl9rfVW+qudlWdZjVbmuvle/m7Gvdb/qs3ocGOWl2bf6vVbcq+tefRZFUcdc8d7XOV/raqraeu9xzq1YQ9XeObci5mp91fckSVbsudXxF+P90oyz2d9aW7dtxl3tRWDFPq7ar85n83tzzzf7NPPZzMfq3KxeR7POa/Vb3bf6rPLivSdNU7z3eO8BcM7VZ84YQ1mWFEVBnud1zFVNYowURVGPW/Wt8luWJdbaeo4YY923LEt6vR55nmOtZWJiglarRYyRPM/rMZNWRpkXZK0WSZJAWVAOcwJxfEGSJPgYGBSjsXCWLGljrKWfD4kYut0uibPYxGDyBGLAAM5akjRhMBwSDbjEkbgMZy0hRnyRk5cF7XZ7xXuoqkWe5wfVoVmrtfbeaM9BCCvPwMpzO/odYiTEUFUc1n59yM+gL33pSxx11FEURcEb3vAGXvSiF3H11Vffb7/nP//5vO51ryOEwC233MLS0hJPfepTueyyy7jppps4++yz67bWWn7yk58AcOyxx3LGGWcA8OhHP5q3vvWtAHzhC1/g53/+5zn88MMBePnLX84f/dEfAfD1r3+dk046iZNOOqme+1d+5Ve44447ADjmmGN43OMed6+xXn755Vx44YV13ze+8Y3s3bsX5xw33ngjF1xwAQAnnXQSj3nMY+p+f//3f1/Ht2XLFp75zGeuGPdpT3samzZtAuCaa66513WfffbZ/Nf/+l9ZWlricY97HE960pMAeOITn8irXvUqzjvvPJ7ylKewbdu2+827iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIisLTnUhsaYFd9jjADEGIkxEkLAGIMxBmstAN77ut2o46i99/6gsY0xpGlKWZaUZVmPW40dYyQvCrIsIcsyMufq+a1NVsVnMebAuM6lZEmKL0tCiGAixAPPrXNYZ4DRXBiIYfTdlx4i+BgofcBGiNHUsa1eh7W2jmX186pPNW913Z8qn9UYIYT77bN6/uY8VQxAnduq7eqY1lpns51zDmst3vu6rmutqblfmm2auWrmZ3Xb5t6q9l/zamrmq+pT9Vu93mo/lmWJMYYkSXDOkWVZvQ+rMaq+a9VtdTxr1b7KdzPOe2tXxe6cW3Gmmmei0jxnzbVW/YuiOCjvzd9JktT3qnPc3MdV/2rsJEnqfCRJQlmW5HlOkozOZhWzMYYsy+qx3fjMAqRpuvI9kSYMypyYDymDx2GxbpSf4EuSVguKWNekGsPY0TwxRPI8Z0jEELHOYowjxkhZFgyWhyTOEWIkj35FrjCBOP4dQqhzW8UXQqAsS9I0rdey+h24OqfGgLWjz2Ztvfcrz340WAutLCNLHBYPHNr5lv/3HXXUUcBoL7/61a/moQ996CH1e+9738tgMOCMM87gs5/9LBdccEH9Pnnyk5/MVVdddVCfO+64g3a7Xf92zlGW5ZrjH8rfpcrk5OS9Prvnnnv47Gc/yz/+4z/yh3/4h8DoffKhD32IF77whQ9o3tXPmvPe17of8pCHcNZZZ/G5z32OSy+9lD/7sz/j6quv5m1vexvf//73ue6663jRi17E85//fF772tfe73pFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERORg9lAbxhgBMMZgjMFai3Ouvqy1WGsxxtR9mm2NBQiE4PG+oCxHVwglIQSA8TgOgyNGQ4wGosWaBOcS0jTBOYcxhhAC3ge8j8QYMcYQAxgszqUkSYpzCWAJIVCWJcH70TriaOnGjOczAAYYx2ss1iZYO1pXtf4Qwvgq7/WKMQCBGP2aVzXW6mu0nlF81RpX5K+R1yqm5u+qT5X36l6zLs2rWaNmfZv1ruJaK1bnHEmSrIitmjdJkhXjrtU/SRLSNCVJknvdQ1X75rhpmpJlGa1Wq+5b9Wvuyeb4zXw1c1rdX52b1Vc1bpIkK9a8OpdVvNVebs4dY8R7X++hSlX36qqeV3laa44D+3Dl5b2nLEvKslwxpnOONE1pt9u02+06L1Uuq/bN/VCNVRRFHUNZlgyHQ3q9Hv1+nxBCPW6r1cI5h/ee5eVlFhYWWFhYYHl5maIoSNOUoihYXFxkaWmJoigIITAYDFhYWCDNUgJQ+BKswSYO4yzGGlyagjUkrZSJiQkmJiZIkqTOT6fTIWu1KMMo5mjAOod1DmMtWEOIEeMsaZbS7nToTHRptVu4xIE1YAx5nlOWJas558iy7F7381pneJQzu6J+VZsDeTZ17YyxZFmGMayot/zsWl5eZt++ffXvv/7rv+bUU089pL6vfe1r+cAHPsBXv/pVPvKRj/DiF78YgKc+9al8/vOf5zvf+U7d9h//8R/vd7wnPOEJXHPNNezYsQOAyy67rH525pln8t3vfpfvfe97APyP//E/2LJlC1u2bLnfca+88kqe/exnc9ttt7F9+3a2b9/Oxz72MS6//HKmp6c59dRTufLKKwH4/ve/zz/8wz/UfZ/0pCfxvve9D4C77rqLT33qU/c6z32t+0c/+hGbNm3ihS98IX/8x3/M1772NQB++MMf8rCHPYxf/dVf5eUvf3l9X0REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREHrjkUBvGGAEwxmCtxRhT36+u1fcBrLVYa0mswwDee0JojmfrNuOZiDFiMKO53GhMYyMORwglw+GQ4XBIWXqsdbTbbTqdDsFX4wUAyrIkz3O895gIrTQlSxIwpo4zhEAMkUg5mteAtYZoD7Sp1hNCwGDr9a6do8jqR822zhmcc2vmqjlPNcfqPIcQSJJkxfNmmxBCI5ejeq0ev1mbGOO4JmEcn6v7NNdfjdXsV/Xx3pPned2/arN2fqifV+M0x67ic87hnFsRRwgB733dJkmSg3LY3I/VOrz3B81vjKEsywP7MzlwFPI8pygKrLUratVc81pzrs5TVZtmTCGEFc9X56lZT2NMvReq+6tra4whSRJCCHXbZkzVvWodVb2qnDRrWtWuynNz7ur5WvWqnlW1cc6Rpmm99qIoGAwGtFqt0Tkdj1+WJc45JqemGBQ5IQRc4rDO4X0g7+cYIE1TQjHOezJ6N1TrK4piPK/BWodxjiwb1XI4HI66JEldQ2MMkYAvfR2vseO9EuKK/V/lqFpfWZb12pv7q8rD6F0S6nfIKEUr92cVgzEG7wNFMYohcQ5nHSFEDAf2mPzsuvvuu/mFX/iFeh8ec8wxXHnllfXzl7zkJTzzmc/kmc985pr9zz//fF70ohdxwgkncMwxxwBw7LHHctVVV/Gyl72MXq9HnueceuqpXHXVVfcZy8Mf/nAuueQSHvvYxzI5Ocm5555bP5ufn+dDH/oQL3zhCynLkrm5OT760Y8e9PdhLZdffjlvectbVtx78pOfzAUXXMC3vvUtrrzySl784hfzp3/6pzzkIQ/h7LPPrtv9+Z//ORdccAEnnngiW7Zs4QlPeMK9znNf6/7Yxz7GBz/4QbIsI4TAZZddBsBv/dZv8a//+q9kWUa32+Uv//Iv73c9IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiKyNhNjjIfS8CMf+AuMMSuuFQMZg3MOYwwhBEIIWGux1gLgjIEY8b4kRvDes7i4xMLCfobDHOccs7OzTE9PQ7T0+32SJCXLUsrSU5Q5NjG4xDIY9Ln77p3s2bOHLMs4/LDNbNy4EWMSvC/JshbWWvbvX2T//gW8D6QuYXZ6holOB2MMPoZRXM5irKH0JSF4kiQBIsFEjDFYa4gxMiwKiqIglqP1VusyZvS8SqO1dkV+Qgg0U2yMJUlSkiTBWlvnKsZY52v1mM2xQghkWVZ/b+Z/9bzV89VjVm2qe8CKuZrtmutptq9i997X8Tvn6jVU+Wmqxq3WGmOs42xe1VjVeFWuYox471fMf2+xhxAOyon3fkUtkiSp+zRz2Yyxmrd5rd7/K+u78ozkeb4ij8151spR1a+auyzLOifN+6vj8d7XuWnugWrNzXw2+1fzhRAOmmt1PoD6jFdtqtpUfatzX81V9XXO4b2v7+d5DkCapgQigYiPkTRJiEAxHI6eu6TOWQiBLElHMYVA4hK89+RFQQC8jxgDnU4b5xzLy8t4X9LutEnTlOFwSJZlQKhzlec5mEC32yXvF2ueweZVrb8sS7z3K2sSAsRRDNUV44Hzf6DeBnDj5DrAYEgwBMq8jyHw/3nRyw/aGyKrHX300XziE59g27ZtP+1QRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETkP7DkUBsaY1b8jjGuuBdCwBiDtZYYY31VbQMRN35eFAXLy0ssLCywd+8+lpaWiTEyGAyIITI1NcPExARJkuK9J0kM3W6Hvfv3EgkkScrMzAzee4bDIYPBkF6vz8zMXD2n9548z8nzAmMM0UaKIsdnGe12m8QY8iInz3OstaRZik0zfCiJgMFgDMQIIaxcizGGGCPW2hW5qdbc/N3MnzGGEEa5Wn2/yl019n1p9l9dj2ZNVtfovvrcX98YI977eo1JkuC9r2NxztXxV3thrflW742qj7WWEEL9LIRQz1e1895TliXGmBXzrc53c13W2rpOq3PXjAMO1HH1uqt7a9V1da2ae6AZg3Ou3jOr41yrJlUO1jpLK85VI9fVOps5rNbbPJ+r11P9buapqYqj+rTWkiRJvZYQAs45nHOUZYn3vh5/MBiw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K1eu5EMf+hAzMzN8/etfZ25ujm3btvE3f/M3/NIv/RI/+MEPuP/++wFYu3YtMUampqZYt25dtY9bb72Vt771rdx6661s2LCB008/nV/91V9dsNfR0VH27NnDddddxy233MKTn/xkvv3tb/Nnf/Zn/P3f/z0vetGLuPDCC7n88su54YYbuO2227j++ut56UtfSq/Xe3yFFBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERksc70GKJRIj932bwXxz854wjxkgMsf9JJBCIIfbHRUOIBmssIQZijKRJgnMpzqVAh3a7TdFu0+v18D6Spglr164mxkiz2cQABAhFwERD6hLqSQ1nLKHwmAgWgwUIERPBGbBADAFrDS51YMEXBXmRkxc5hc/xMRAJ+BCJBjARjAXT33KMEYgk1hCKCCFQZiISMcZirAVjsdZhncNaQwRCjMQIIYI1/XkAoqF/L/0cQX8csTxniSESYpltsAZC8FSzGDP4ZvrfDVjnMIPvcXCJCCEG8P2oY4yDPQ12YQwhhOoorxljqjHlPTFGnHMLfg+PAQghYK3FGLNgDmMM1hhsBBMMwUdiCBjAOIvB4DCEGAlVjhn0DNU5AzjnsNZird0v3hgj3nustQB47xf0cxnfcPzD94YQ8N7vW2+wj/32Ywd5GYz33lMUBcH7/rwxEILHFwbnHM7YQdwOZwxFjFV/Da8VY6w+h+tRxlvGYa3Fun6ei8GakUCMhhgDIUaMNUQ8RIsZ9HU0cVDriEvSfjMGQwyhn2v25cVZS6NeZ3RkhE5rhBA8S0bGGG+OULNJP25jcS6BQR8ZA2ma4mwKwLKldWb27iXmAZ8VdOc7jDZbmAgze6fZsW0bIXhGlyyh2WgAkV7ew2Bo2DqdPCNxCXnwtLMOzbEWh658Aq1Wi717p9mxZzcZEecSbJJQhEC726Gb9YjGYJzFJg6bJuRFTlZ4RkcbJM7R7YV+bUIkDPVw2TshBIqiIEn2vS6He6VU9qK1puq58nL5LISw79VhrcUaizEWiIToMQSI+/pefnoVRcGDDz7Icccdx7vf/W6+853v8PM///PcddddrF69+j9kzZNOOonp6Wk+9alPsWbNGp7znOfwuc99jvvvv5/5+XkmJycB2LFjByMj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RoM0TXn961/PZz7zGV784hezc+dOtm7dyqc+9Sluv/32H2t/T33qU1m6dCm/8Ru/QZqmtNttLrroIr7+9a/z+te/niuvvJL169djjGFkZIQPfvCDrFu3DoAXv/jFXH/99bz2ta8F4LzzzuOII45g8+bNAJxwwgm8+MUv5vjjj2dubo7zzjvv31EBOOqoo7j++uv5tV/7NTZv3syxxx7LySefzPXXX//vmk9ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5GeRiTHGxzPwU9ddTTnUGIO1FoAYIyEEQggLznnvq7FJkmCMIcZIjJGiKMjznCzL6Ha79Ho9iqKgVquxZMkSarUaMzMzbN26ld27d9Ptdgkh8MQnPpGD1hzEymUrKWLB3PQc3bxLLalTa6SMNEd55NGH2bZ1G3um9tBpd2k066xauZolSyeIMbJjxw4effRRAFavXs3BBx/MkiVLaLRaJElCmYxI7MdswBqDMQZHJI2RkBdgIU1TjHV478lDAANgCQZiNEQg0N9zhP7c0WAYDMVgzOBzMKK/FsQQMDHinCNNHAB5npMXHudSAvYxa5UkSVWHqtDGVJ9lzcrf5TFcy/IoazY81lpb1XT4fCnGuOB3ea48TIgkzmFCBDOIzVgwEAYx5HmO9x5jLVgzqAkYa3DOYY0hhv465V6cczjXr0eWZVWc1lqKoiCEUMUaQujPs6iPy9ittQty4L0nxkiapv26G4MPnrzI+vkJcUG+y+qUsRH616y1/TgxGGcpAmANxtoFdVhcv8c6V8Za5nu4hjH2n0HrBjmzZpDbbN/z6Rw+AMbhBrkwcVCvEIghUk9SdmzfzqOPbCXPMhq1Oo1Gg1azydjEOI3REWKS4Bble3Z2luk9U8zPzzMxMUGz2WTPrt3MzMww2mrR7fXodjosXbGMdYccQub7NavX68QYmZ+fp9PpEEKg0WgwMTHB7OwsDzzwADFGDjnkEFqtFjt27GTXrt0YYzFYCu9ZvWoVB69by549e3jooYdoNpusW9d/1q2FoiiqGntfUG806HV7WGux1lbvqeGeKe+xi2pV5T9GzKAPyzkWPz+L36HlOO89IRQURQEELnzlmw7wZIv87Hjve9/Lv/3bv3Httdf+p6x35ZVXsmbN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rSXLMmKMFEXB1NQUO3bsYOXKlSxbtoxms0kIgXa7zezsLEVRMDo6Sqs1Qoz78tDtdmm35wFI05QkcSxbtpRut4u1BpfYqv5lPRNXW5D/xT1dvo8WK99zblF9hp+X8rN8LsqclO/Jsr5Z1n+HPe8lr99vHREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZH/jpLHO9B7D4AxBudcdd4Yg7UWay0hBLz31TljDAAxRkIIxBiJMVbXa7UatVqNNE1JkoRer1fNnec53nvSNMVai8fT6/UwDpIkIUmSKq7yaDQahBAA6PV6ZFlWreMSR4yBEC3OWsAQQyDESARMNP29WQvGgDHEGCFSxR0D5D4nFAXGGsDgUodzjhj6eQkh4oBoLd4HIhFnHdZZrLEQwWAwQAiBEMMgPxHo56a/HlhrBr/B+0AInhgthohzDmNMdQzn23vfj519sQ9/r9VSzKBm1d6Gxi2u8XCty/hCCFXdh5X1LccvFmMkEIkhwGC94bFln5R1HO6hGCPW2H7+BrGXccQY99u3MYYQwn5xlPkqigKg2oP3nhDCgr0P9+6B9jMYtCBWY/r1NYt6aHjOwWmKosCyr5blWsOxVPMMxT78PFqzr5ZDu6yuJzYlxKK6Z0EcHoIPeF9Ua1P1lwUDrVaryk9RFBBjvwaDWNI0hQh5r4cxhnq9jnMO7331HCZJUvVVlmX0er3q+S+8xzpHr9cDIE1TYowURUGSJBx00EFMTEzQarWw1pIkCY1Gg4mJCfI8r/bb6+XkeU6j0WBkpFU+xjQaDaw11d4GqSGEfj6SpJ/jJEn6z+QBemb4fPmslT1R9ohLEtygNj+sh8taO+f2690DPXfy02n37t2ce+651e92u82mTZvYsWMHy5Yt+5H3f/KTn+TKK69kdnaW0dFR1q5dy7ve9S5OOOGEHzuWvXv3cs011/C2t73tx773P9qmTZs46qijeMc73sHv/u7vPua4F77whZx//vlcdNFF+117y1vewujoKJdffvl/XKAiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj/D7OMdaIzBGLPgt7UW5xzOObz3xBix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61/ne9/7Ht/5znf4+Z//efbs2fMTX6v04Q9/mJ/7uZ/7D5tfRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP57so97oO0PjTHivacoCoqiIIRACAEAY8xjHuV1AO89nU6H2dlZZmZmmJubo91uUxQFvV6PoihwzpEkCTFGYoykaUqz2cTi6HZ6zM3M0+30MFiajRZjI+M00ibOJJhocSYhsSmJTWjUGiydWMLM9AwPbHqABx98kO3btzMzPY3PciyGWq1GvV6v4svzHF8UxBAgBIqiwHvfz4EBm6TYJKXd6fLIo9vYdP9mNj+whR07dpCmKcuWLMNh+f7d/8bN/3gTX/uXr7L1kUcgRrrtDg89+CD333sfjz68lfnZefK8wBeeIsspssG6ANHii4gvImGQiy1btrD1kUfYs3s3eZb1h4VA8B5ipF6v06jXqaUpvihoz8/Tnp+HGGm1WiRJgjGGNE0ZGxtjyZIltFotgGqfZV3L/McYq/rHGKtaDp8bHj98rZxr+LqxBqwhGAiAj5EAYFjQM8SI6Z/GWYs1Bkv/WpIkOOcWxFL2mbW2Wtt7T4wRay1JklS97Jyr7l88x4FiH46//G6MAbNv/OJ8/Sjee+xg7V6vR6fToSiKBc9auc5wjCEE2u023W6PRqNBnmXMz83R6/TIujnzs23mZ+fIexmzM7M4axlptXAmIRQRAlgMMQQajTrOWHyWk3d79Nodsk6X4D3OuX1rxkjhPXlRgDFVLmOMxFAAAWMiiTNYA8YEIh4fCgqf4UNOEQuKWOCjJw6OgK/qkaZpteZwjhfXc7ge+9erH4tzpuoR5/q56/eAxVpDjHFBv0fiAXu5XMN7v2DtMpbyXVheK3uwjHv4MMbs1yfD88QIj7N15KfI1772Naampjj//PN/5NgdO3bw0EMPceaZZx7w+sqVKwFYsmRJ9SxNT0/zD//wD3zgAx/g3nvvrd57r3rVq6jVajzrWc+q+rXVavHd736Xl73sZRx88MGsWrWKdevW8cIXvpBTTz2Vu+++G4A//dM/ZWJigquvvpqXv/zlrFmzhm9/+9u8613v4tJLLwVg06ZNXHDBBZx99tnUajW2bt3KBRdcQK/XA+Df/u3f+OpXvwrAe97zHr7+9a9X+zjssMN42ctexvT0NOeddx5PetKT+J3f+R3OPPNMDjvsMJ773Ody8cUXc9ddd/GiF72If/zHf+Tyyy/n5JNP5sILL+T000/n7rvv5olPfCI33XRT9TcO4Otf/zof/ehHufvuu+n1elx++eXccMMN3HbbbTz3uc/lne98J41Gg3/6p3/i/PPP5/TTT+fXf/3X+fM//3MALrvsMq699lq2bNnCHXfcwfe+9z1OO+00JicnOe200/bbx6WXXsqpp57KUUcdxZVXXrng2lvf+lZOP/10XvWqV5HnOW9729s4/fTTmZyc5Jd/+ZeZmpoC4MMf/jDHHXcck5OTnHDCCXzzm98E4N577+W5z30up512GieeeCJXX301APfddx9/8zd/w0c+8hGWLl0K9N9L/+N//A+OOOKIBT1TFAXnnXceGzZs4Pjjj+elL30p8/Pz1fxnn302J510EieccAKXXXYZAF/4whc48cQTmZycZP369Xzuc58D4JxzzmHjxo1V373mNa9h/fr1nHTSSbz61a8G4KabbuLMM8/k5JNP5vjjj+faa6+tYhkdHaXZbNJsNhkdHT1gj4uIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIjIfz/J4x0YYyTGuOCcMYYYI9ZanHP73WOMqQ5rLcYYiqKg3W4zOztLnuc452i1WlhrmZ2dJcsyxsbGWL58OdZavPfVXPMz80QTSV1KY7RBPakTCOS9nJnODIlJiCZijaXb6RJ9JBBIXII3kXpap1Gv0+v1KIqCEEIVawiBEAK1tAYxowieEAJ5nvf3bwzOOWKM1X3WWoqiYNeuXTyw6UGazSbHHHMMtVqN+fk2vV4Pay3Lli0DoNftsWvHTubn5tm5cyfz8/M0m03Gx8dptZqMjI5QS2v9+T2YQb6ttf0gLYBhfGyMJRMTpGlKrVYjxkie53jvsdayZ88eAJxzdDod2u12lUvnHCYEsiwnxECapqxYsQKAWq2Gcw5rbXWUNS5rWPZBlmX79cNwn5R1O1DPGGMIRIj9Y7gODK4v7rnynBlax3tPIFbxLVbOW64ZF63lvd9//qGeHY5/eI0yrhgjIYb+dx8W7LX8VtbOLE5ViBgi8/PzLFuxnCRNmZqaYu/evbRaLUZGRqqeDCFU/Vqv1zHGsHfvXnbs2MGO7TvZ+egOGo0Ghx56KMcccyzNZoO77rqLf/u3u8jzgqOPPoojjjiCZcuX0uv16Ha7NJtNkiSFomDv3mmMMYyPj2OMod1uUxQF3nvyPK/2XsYBkNbS/rPSLxnOOZyxUO7XGCyWMNh4lmX9bVe5Gfp/BGv35b/KbQhVD4awL7/e+6p25XiIhAAxhqr3ynsinhDsoK5DPRjDgrpDILJvrcXvvHLvw4bfbc5a3OC5KeMf7q8F/bHofHkcqI/lp9+1117LK1/5SpLkcf9Jfky33norxhj+6q/+iiVLliy49spXvpLf+Z3fYd26dfzKr/wKz33uc/n617/O5z//eUZHR/nXf/1XvvKVr/CiF72I+++/n9e97nX8+q//OnfeeSf/3//3/7Fr1y6e97znAfDd736X17zmNdxzzz3Mz8/z4he/GIDTTz+de++9F4Abb7yRoij4i7/4Cw4++GCWLFnC1q1b+da3vgXAE57wBO655x4AvvGNb3DRRRdVvwFuu+02/tf/+l884xnPYP369Rhj2Lp1K7fffjvPeMYzuOiii9i7dy/vec97OPvss7n44os5//zzWb16NVdddVUV58UXX8whhxxSzbt69Wo++9nPcskll3DjjTdy33338bSnPa26Xq/XecELXsDRRx/NpZdeyszMDL/yK79S5fPcc8/lV3/1V3nhC1/Is571LF73utfxO7/zO4+5j+3bt/Ptb3+b3bt3c8opp3D22Wdz1llnAbB7926++c1vYozhXe96FyMjI1V+fv/3f5/LLruMD3zgA/zGb/wG99xzD2vWrCHPc3q9Ht57XvKSl/BXf/VXHHPMMbTbbZ785Cdzxhln8MADD3D00UdXf99/GOcc119/PcuXLyfGyBve8Abe//7387a3vY2rr76a888/n9/6rd8CqP59cdlll/HBD36QM888kxACMzMz+8375je/mWazyR133IG1lp07dwJwyimn8C//8i8459izZw8nn3wy5513HuvWreMtb3nLj4xXRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP77SR7vwBACMUYAjDFYa7HWVtfLa+XnsBhjdb4oCrIso9fr4b0nTVNqtRrWWvI8J89zvPfVOuX9xhhGRkaw1hI99Lpd5jrzBDzNeovR1igGi7WGIvd0eh0SmzA6Mooxlvb8PPNzs8zMzNBptxkZGSFNEtI0xRdFf+0ixyYJPniMtaRpijGGGCOJtTjn6GYZeV5gkx7OOVqtFuPj44yMjJAkCd57vA9MTU0BsGzJclatWsXU1BR79+5l26PbIUA9beBGEyBS5Dl5nuJsQqPeIEmTKt/GWozr59l7TxjkxlpLjJH5+XlijFhr8d6T5zmNRoM0TanX69RqtSrnRVEwPT3N+Pg41hrybGGeh+tpjKnOH6jGeZ5XfTA87kD3HXAO+j0RiEQDRDD0jwXzGFOdt+w752Og2+vCUB+WtSqPEALOOZIkwRhDCAHvfRV3COGAPVuunSQJzrmq/4b31p+rwBdg6Md0oLmG7x1+FkyMRCIQ2bNnij1Te7j//vuZmZlh5cqVHHbYYaxYsYJGo0EIgaIoSNOUJEnodDqDfppmfGycI59wBHv27KUoCh555BFqtZQ8zzn88CNZsWIFjzzyELt37yYSque2H6eh2Ryh1+v3crfTYfv27Wzbvp1Go8GqVatotVpV75V95EPA5hm1Wo6zlkaaUq+lEAEfiAbConxWeRnUMw6fG+QlhLBfnsoalUIIC95FC+u2cD7vPZFY1RwCMRqgrClY16+NNY6iCP1aDq0/vM7iXl/Qpyx8zw3HP9wDZT+V54bjjTFSFMV++5KfbnNzc/yf//N/uPXWWx/X+FWrVrFu3Tq+/vWv85znPOeAY5xz1d9RoHqOJiYmeP7zn8/IyAj33HMPv/Vbv8Vzn/tc/u3f/o3Z2VkmJycBqr9fAGeeeSaHHnooxhiOOOIIDjnkEDZt2kSj0eC0005j06ZNADQajWrtso9jjDQaDb7whS/w5Cc/GYCTTz55wd+cpz/96ezevZskSfj+979Pp9Oh2WzivefRRx/l93//93nXu95FlmU0Gg0+/vGP84pXvAKAvXv38s1vfpNNmzYRQuDtb387V111FQCbNm3ijDPOANjvuX3605/OJZdcUsX48z//81x//fX75fHoo4/mrLPO4tRTT+WGG27g1ltv5YYbbuCP//iPueuuu7j55pt51atexWmnnca99957wH0AXHzxxRhjWLFiBRdeeCH/+I//yFlnnQXARRddVMW3ceNGpqen+fSnPw1AlmUcdthhAJx77rm84hWv4HnPex7PfvazeeITn8jdd9/NXXfdxYtf/OIq5tnZWe6+++5q7ccjxsj73vc+/u7v/q76d0IZ39Oe9jQuvfRS5ubmePrTn84zn/nMKp5f/dVf5YUvfCHPetazqt4Z9rd/+7d885vfrP5Gr1y5EoDdu3dz8cUX84Mf/IAkSdi9ezff+973WLdu3eOOWURERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERET+e0ke78AQAjFGAIwxWGux1mKMIcZIURTV9fKzHFuOGf601lbfQwgAjI6O0m63iTEyNzdHlmV0Oh1CCIQQaNZbhBCYmZnh4YcfZtu2baRpyhFHHMERRxyBtZZOp8P27duZmppidGSUdYesY2xsjM78PA89+CDbtj1KCIFVq1aRJAlprVbFPz/fZq49T4yRRqvJ+Pg4jUYDAO89QLVn7z3ee5r1OsuXL2d+roNzjvn5NmvXHkye52RZRt4ryLKMbrdL3uuRZzl5ltOen6fd6dBqNTlozWqWLFlCs9ms8hdif8+EALafozzPyTpdNj/wAABpmjIxMcHY2Bjee3bv3s2uXbvYsmULIyMjrF27lqVLl2KtpdFoUKvVSJzj4YcfxjjLyOgo9Xq9yi+Ac25BTYZrVlrcB8NjyqMoiup7eU+McV8fWbNgPBGsMRhjq3ustVD2izE4YzFABEKI+MKDi/vGHiA+59yCmg33Zr1er3p7uL/Le4f7fkGs1XlIkgQi/biG9mgG34fnHBZjxMfA6OgYj2x7lB07dpCmKatXr6bVau0XS5IkJElCCIFOp0Oe50yMj7Fi6QqWLlnGxMRS9uzZw8zMDDF6ammN1atXs2rVKkZHW8zMzDA3N8eKFStoNpu0222yLGNkZITR0VGKoqDT6TA9Pc327dtpNBqMjIwwPj5OkiTkeV7Fk/uCwnu63S5pklJz/bhs7NcmAtHEfd9j7NenX+b+/g3EuO96jLGqT5nj4VwP17fsu/L7cL8Mv28AYuiv7ZwjRr+wzmZhXY0xGPbv88V1Wxzf4uejjKVc60D3DO+ljPeH9Yv89PrkJz/JSSedxDHHHPO477n88sv59V//dY444ojqvu985zvs3LmTZz3rWRx11FF885vf5DnPeQ6f+cxnqvf5zp07KYqCY445hl/91V/ln/7pn9i1axcvfelL+bM/+zO+9a1vUavVADjjjDP4l3/5FxqNBvfddx//8i//wpve9CY2bdpUxeGcoyiKx4zzvPPO401vehNbtmzhyU9+MgDdbpeiKMjznM2bN/OJT3yC0047jZmZGSYmJuj1ejSbTebn5znnnHP44he/CMCKFSt473vfy5/8yZ/wxje+EYCPf/zjHHnkkRx++OHcc889XHHFFVx00UX88i//Mvfccw8Ajz76KJ///Od5wxve8JgxvuMd7+COO+7gxBNPBOBb3/oWp59+Ovfeey9HHnkk5557LrVajc9+9rMA3HPPPRx//PEcf/zxALz5zW/m61//+gH3cSDD74HR0dHqe4yR97///TzrWc/a755Pf/rT3Hbbbdxyyy085znP4Q/+4A844YQTWLZsGbfffvt+4++77z7uvfdedu/ezfLlyx+zRgDXX389X/7yl/mnf/onxsfH+dM//VO+/OUvA/CCF7yAs846iy996UtcffXVXHXVVdxwww388R//MXfddRc333wzr3rVq3jZy17Gb/7mb/7QdUqXXHIJz3nOc/j0pz+NMYZTTjmFbrf7uO4VERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkf+eksc7MMZYfTfGYIypzscYsdZW38tri8dbaxfMF2MkhECv1wMgyzLa7TbT09Ns27aNubk5er0eMUbyPGfNqrW0Gk0a9TpPWHcoK5etwHtPq9WiPTvP2NgYDkvNpaQ2Ie9ltGfnGWm0WDKxhGJthjFQFAVLly6lNTJSxW2MIUkcAN1ulyzLSKwjTVOSJCHGiPeepFbDGINzjl6vR1YEGIwLIVCv1/HeMz21l1qtxtjYKCtXriTLMnye02336HW6TE9Ps3PnTkbHRliydAI3yE0v65GSgjFgTD9HPuC9J4aAc45ly5YxM7UXEyKjzRapdezctp2tjzxCu91m/bHH431BmqYUvYyiKOjOt5mbniErCvbOTDO+dAlrk4RGo4H3nqIoKIqCEAJ5nhNCwAzWL/NT/g4hYK3FOYdzrhpT9ogxprrfWlvVPYSwsEeMwVpD/z/6n6b/K5ZjB/MYa8FABAgREyLWObCmqs1wvwEL+g2o6lgqYx/e23C/hjDI+9D5sl9CCEDEpa7fD2Zf/3vvCUWxYO5yb+W9cShPzjnWrFnD6tWrWbGi39Pdbrc/V1HAoN+IET8Yv2TJEtIkpVlrML13Gp97sk6XkBfUagn1NMVGKHoZibVMjI2RJAnNWoPEWBpprV/3XkZhLZHIypUrWb58OWvWrGH37t0458iyrKqdcZZ6rUniPfPz8+R5TpokWGMgBDBgXT/nPtKvYQgEYr+XDYABU9ZgkMcYwex7xsqeGa7DcO8sfi+V55xzVV/64Il4MP13U5om5Hmo5jKD3rPWggUfPMbYMqyqh4bfZYt7bPF7jhhhEEMZ24HGL36mqucsRCILe1Z++l177bW89rWv3e/829/+dtauXcsll1yy37WLL76YZrPJy172Mubm5kiShCOPPJI//MM/BOB973sfb3rTm7jssst47nOfS5L0/9Q/9NBD3HTTTXz5y1/mQx/6EGeffTYveclLeNWrXsWFF17IiSeeyOjoKNdccw0f//jHef7zn8/DDz/MC1/4Qj784Q/z8MMPs2nTpse9t6OOOooVK1bwB3/wB7zzne8kyzK2b98O9P/ehxA49NBDAXj/+9+/4N65uTme85znLDj3lKc8hbe+9a3867/+K9ZaPvaxjzE3N8cDDzzA8ccfX4177Wtfy3ve8x6OO+44Dj74YJ7xjGf80Bivv/56Xv/619Nut8myjJNPPpnrr7+eT33qU/zVX/0VIQTuvfde3vKWtwDw27/929x11110u13WrFmDMeYx9wFw3XXX8fSnP509e/bw2c9+lr/+678+YCy/+Iu/yPve9z6e8pSn9P9d027zwAMP8KQnPYnNmzezYcMGNmzYwK5du/jWt77FC1/4QsbHx/nIRz7C//yf/xOA++67j2XLlnHUUUfxghe8gIsvvpjrrruOJUuWEGPkM5/5DCeffPKCdaemplixYgXj4+PMzs5y3XXXVfu59957OfLII3nlK1/J6aefzllnnQXAPffcw/HHH8/xxx9PkiT8wz/8w377ueCCC3jve9/L1VdfjbWWnTt3snLlSqampnjCE56AMYZ//ud/5rvf/e5j1gfgkUce4dxzz+Wee+75oeNERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5L9O8mPfYcAYA0CMEQDvPUmSgDEQIzFGYuz/BIOp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cT+07+Snxw033MApp5zC5OQk69ev5y//8i8f130XXXQRV1111X7nr7nmGq688sqfaIznnHMOGzduBGDjxo184xvf2G/MFVdcweTk5H7H/fff/xONpd1us2HDBmZnZwF4znOew/e///1/93yXX345b37zm3/s+773ve9x2GGHAbB161ae+tSnPubYzZs3Mzk5+e8L8ADr/Ud7zWtew8033/wjxy3uhW9/+9u86EUv+o8M7T/d5ZdfTrfbrX6//e1v5+Mf/zgAt9xyCzfeeON/VWgL8r13717e/e53/8TmHt7nf1dXX301F1100QGvXXXVVWzbtu1xzXPddddxzz33PK6xw++LO+64g2c/+9mP6z4REREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZGfFcnjHRhCACDG/hFC6B8eYowAGGNwDpxzGGMG4yMhBNJaSsOlFEVOjJEkSbC2wADWWur1OqOjoxhj6fUykiShKDxpmmKMIc9z5ufnSZKEPM+reIwxLF26lKVLl7Jnzx7a7TbGGNI0pd1uMz8/X8VgTMQ5AEu9ntJo1HDO4b3H+5y8yMjzjNG8RZ6n1R7TNMU5h3OOPM8G+7V4379WHjFGli5dToyRTqdDmqYsWbKM5cuXs2vXLqanp0kGe82yjCzLaDabLFu2jEajQQiBbrfLyMhIlb9hxhistYyMjDA3N1flrdFoYIzBWEOj0aDRaNDtdul2u2RZRr1eZ8WKFQB47wHodDrUajWazSbNZrOKN0kSYoxkWYa1Fu893W6XXq+HMYZavU6tViN1Dk8/rzHG6qgaazDPvr6JVfzDeyvPWWurczFGYrH/vTFGrLWEEKp9DPdeOdfwPOXc5f3DMRZFsSCOBesP1mTQn8Oxl/29uMcX3z/83AzPAf1nJKQpTzjsCSRJwlFHHUWr1aLVajE2NsbSpUsZGxsjyzJCCNX9xhjyomB+fp7p6WkeffRRut0uJ554IjFG2u02MUaWLFnC6OgoWZYxPz/fr12tRpIkVb8URdHv8TzvPwODenfaHdrtNtYYQgisWrWKIs/xeX984T35oD/q9Xq/DwzEwX7N4L7h+iRJMnjO9tVtOH/l+fLccD2Hc7e418pxi8+VuR+Oo6zT4vn2rxmA7/dZyMEXxBir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5NBDD+UVr3gFz3ve8/ja177G6tWrOf/88/nLv/xLfuVXfoXLLruMD37wg5x55pmEELjmmmvYsmXLgvUfeughpqenOfLIIx8zxvvvv5+bb76Z/P9nt87j7arq+/+/1lp7n+EOyc1EQoAwBZnhgiCDgAgUEDEFpIyCWBEoTjx+TsUqRYpKHb6C2jZYEDQ0iqKNSNFvRY1CnUAJiAICEkiAQMh87z3D3mut3x/n7J1zbwJEa4evvp+4PefsvYbP+qzP2rlZxste9jKmT58OUL4j77//fqy1rFy5covyN336dBYtWsTuu+/OV7/6VX7+858zODjIOeecs9n2hx9+OB/96Ed597vfzTHHHMMrX/lK3vGOd3DOOefwxS9+kdtuu41/+7d/Y//992f33Xfnueee2+w4//Zv//aC8/32t7/l8ssv5+GHHy738ZWvfCUAK1as4MQTT+TSSy8t1w1w4IEH0t/fz1e+8hVuv/12PvCBD5Tj3X333Vx55ZVceuml3HLLLbzpTW8aF8tPf/pT9t57b77whS9wySWX8KlPfYr3v//9m9TC4sWLyz4PPPAA73nPe/j5z3/ONttsw4c//GHOP/98vvWtb5VzLlmyhB133LGsy2uvvfZF9+LFcvJSrr76ambMmAHAVVddxeWXX878+fMBWLduHfvssw8f+tCH+Pa3v8073/lOTjjhBObPn8+1117LnXfeydDQ0LjxhoeHueiii1i7di1XX301AA8//DDHHXcc73vf+3DO8Y//+I9ccMEFJMkW/5m9WVuSq/nz5zM8PMySJUtecJxf/epXXHPNNXzxi1/kK1/5CmeccQYPPvggAA8++CD/+I//yPXXXw90cl346Ec/ym9+8xt+/vOfU61Wy7OzcOFCHn74YX784x/jnGPBggVcfPHF4/puzv77789dd92Fc47Vq1ez3377cdxxx7HtttsCsGTJEr7//e9TrVY54ogj+NrXvsaZZ57JFVdcQbVa5aGHHmL9+vUcfPDBHHTQQZuMf9lll/H5z3+em2++meHhYQDe97730Wq1uP/++2k0Ghx22GHstttunH/++dx0001ccsklnHTSSQBs2LCB7373u1SrVRqNBoceeijHHHMMBx988CZzHXLIIbz1rW990fWKiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj8KUm2tKExhhgjEMfftxYTN7Yprgm9aYw12eDbJM5RrdaYOmU6/X2D5HmO955Wq4Uxhnq9Tp7nTJo0icHBfqrVGkmSMjIywrShKYyNjZGmKdtsMxtrLWnaeQbQ39/HTjvtyJw525FlGXmeA+CcwyUGmxgGBvoIoUaaJjiXYIxl0uRBBicNMmPGVhxwwAFY6+jr62dwcJA0rZJnOc1Gg9yPkNZSjDGkaQIYQogY45g0OES1WmVwcBCAVatWYa1ln332oVKp0Gq1qFQqTB6cTLvVZmxsjCRJSJxj2vTpZFnGwMAA1jlCLBO6MZfGlPcrtQpbb7M11lqMMQxOGmTrbbamWq2SpineeyZPmcykoUkAtFotnHP0D/ZTqVSYMm0KeZ5jrcU5h/ce6xz9AwPlfoyMjlKtVqn39bH17NlMa7ex1lJJU2KM3VooiwMMGGswgAFC7rs73ymZ4rOoodS6cbUSY8RgsMaCs+R5TvABYy2JsWDAuQRnLCEEQoz4njjGxdP9XalU8N6Xz6y1WGuJMRJC2KROY4zlvd5nvfcntg8hlOP3rmVzMRX3evNXqVbZ/+UvZ6edd+bXv/41K1euZM3atUweGqJSqeCSzhHNvSe221SrVSrVKn39/WAMy5cvZ/lTTzF9+nTmzp3LwOAg9b4+RsfGePLJJ3niiSfYdrvt2H777Zk0aVJnnBjp6+9nbGyM1atXM23WVmRZtjFfIeKMJXpPs9Gkv7+f/oEBHnv0Ue5/4Jc4Y5g1cxbbbbcdSSXFuE4dxUCZh4nvAe893vvO3k3IvTEG51znPCQJMUbyPB+Xq2I8ay0AIYRxeS2eT6zN3j5JkpT71btHRV/ffV9YYyfsrSnPGtBZZwSwGGMxWIzp1BcmwViDta6st+IqahAgRDaJI0aoJK5znuSPXp7nXHnllXz961/niCOO4O6772bevHn88pe/ZPr06b/3uPV6HYD+/n72339/dtxxR4488kgOOeQQfvrTn/Lkk0/SbrdptVrMnTuXadOmsWbNGp555hmGh4eZNGkSn/nMZ9h333258cYbue+++/jkJz/J+9//fp5//nlmzZrFySefzEMPPUSj0aDdbnPQQQeV869evZpGowHA9ttvz8UXX8xtt93GAQccQJZlHHLIIfzrv/4ru+++Ox/96Ef5/Oc/z/LlyznppJP4//6//4/jjjuOvr6+crzFixdzySWX8E//9E/MnDmTBx54gBNPPJGlS5cC8KMf/Yi3ve1t3HfffWy11VbceeedvPrVr2bPPffk+eefBzr/Br773e8uz9+MGTM2m7tKpYJzjsmTJ5MkCX19faxcuZJvfvObnHbaaUyaNIkddtiByy67jLvuuguA173udeXfGq95zWsAOPvss9lqq63K98aKFSu44YYbmDRpEscccwwAb3zjG7nuuusAWLhwIddccw3tdpsQAjvuuGM531NPPcXy5ct5+umn2Weffdhmm2149NFHOeKII8q4m80mhx12GK95zWt4z3vew8jICK961avKue644w7+/u//nmq1yrp160jTFID169djjOE973kPAK9//es566yzeOaZZwCo1Wqcdtpp3HfffVQqFd785jfz6U9/mve///0vWoPf//73Of7449lmm20AuPjii7niiivwvvN3wSGHHMKOO+5Yfv/MZz7zouMBfPe73y1zAnDhhReWe/BSFi5cyIIFC2g2mzSbzXHnq1arccopp5SxPPbYY1s05kS77rore+yxB9/4xjc47rjj+NKXvsQvf/nL32usXr9PrjZnhx124OijjwbgtNNO44ILLmDZsmUA7LTTTrzqVa/abL/bbrutrB3YeHYWLVrE3Xffzctf/nKAcm9fyqpVq3jzm9/Mb37zG5IkYdWqVTzwwANsu+22AJx88snl+X/FK15R7sd3v/tdPvWpT2GMYfLkyZx11llbvFd33HEHn/zkJ7HW0t/fz7nnnst3vvMdTj/99E3aNhoNLr74YpYsWYK1lmXLlrFkyRIOPvjgTdrOmjWLVatW0Ww2qdVqWxSLiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIjIH7NkSxtaawHwPgIRAGMM1jiMMcS48d5Exhiq1SqVmBJCAAzWGtI0pVKpYIzBe0+1WsVay8jICEmSUKlUGBwcoFarUavViLmnr6+PwcFBRkZGaDabGGMYHBxk8uTJbNiwgTRNqdfr3XnAOYdzDmMjzdYorVYba213zpwYI0mSUq/XqFaqpGkVgBAgy3Ji6MTZ3z9AnudkoY1zlkpaI8syfA7GQKVSYfLkyTQaDarVKv39/fT19RFCwDnH2NgYaZrijGNgYIBJkyaRZRlZltE/MEClUqHZbDIyMkK9Xu/kthsnQIyREEL5OTAwQL1eZ2RkBOccQ0ND1Ot1Wq0WeZ6Tpinee+r1OgCtVosQAiMjI1hrSdMUYwyjo6M0Gg0qlQr9/f3keU6r1Sr3O4RAkiSkaYq1lhgjeZ6Xz2OMECMxRnwI4/bfGIMpa8IQiZhun6JeCsXain4hBLz3uG7tdWrNlG1DiCRpUubDGFNexRgxRrz3ZFmGMYYkSXDOlWNvrl5jjOU4xdjF/MaYTi31zNM7Tm+/3vF6z8/EOfuqNdatW0d/fz+HHXYYWZbRbrdxzlGpVGg0GiRJwuDgICGE8tnOO+/MnDlzyPO8c7YqFbIsA6BarbL//vuz22670dfXR4yRSqVCCIE07ZzB0dFR2lnGzJkzGejrp9Fqlnscck9fvU5/rV7WxNZbb01fvc7UqVPxec42W89m5syZJGlCFgKRiMWW+bPWjltzu93Gez9un3vzCozbnyK3RT7Lc9yTu6JdjHFcvfaelXG1OOEsFe2L+865TgzWAJ19j8FiTWd8732ndkNRw3TaYcAYIjkRj8F26r2sTQ/YMi/EzvulGK+3ZqwB2PQdKn98lixZwtNPP80RRxwBwIEHHsi2227Lvffey5/92Z/93uOeeeaZALz97W9n0aJF5X1rLUNDQwwPD/Pkk09y8MEH85GPfIT/+I//4MMf/jC/+c1vqFar3HnnnZx11ln86le/AmDDhg2ce+65vOUtb2HnnXfmuuuu41e/+hUzZ85k5513Zu+99+b//t//u9lYtt9+e3784x+zYsUKnHOsXbuWKVOmsO+++/Kv//qvvPa1r+Xaa6/Fe89RRx3FQw89xMKFC9l11103Gauvr49msznuXp7nzJ8/n7vuuot58+Zx+umnc9ZZZ7F06VIGBgY444wzABgaGir7nH/++cybN4958+aNGytJEl7+8pez3Xbbcc0113DLLbcAMG/ePO655x623nrrsu3m/s7pVavVuOGGG9hpp51Yvnw5eZ6zYsUKkmTjn1w77LADeZ4DcNxxx3HmmWdijGHp0qXsueee7L333gC84Q1vYNddd2Xp0qXcf//9XHXVVUyZMoWFCxeWY+266668853v5HWvex2HHnoo3/nOd/jsZz/L1Vdfze233w7ARz/6Ud74xjcClPdWr15NrVYr4zLGUKvVWLlyJQAnnngiAF//+tcB+PnPf/6Sa9+ciX1qtVr53TlX5uH3HTNJkvLfYmBcndx11118+tOf5sc//jFbbbUVt956K5dddln5vFqtjvs3oHec39U73/lO/v7v/56VK1fyZ3/2Z8ycOfMl+7xY7PCHydXm9P6bODAw8Dv3jzFy6aWXcsEFF/xO/S666CJOOOEEvva1r2GMYf/99x+35i1d7+9Th1vS9/3vfz/Tp0/n3nvvJUkSTjnllE32pNBsNsu/1URERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERATsljbMsgzvffnbGANAnue02+3ynrV23OWcwzlHjOB9ACjvOeew1mKMwRiD954QAmmakuc5U6ZMIUkSGo0GEPDeY4yh1WqRJAkDAwPU63Xq9TpZlmGtJcZInufkeU6MsRx3dHSEGAOVSqWMO8ZYxpAkCX39fdTr9bJfJU2JMdJut8t7fX0DgKXZbGPorMu5hEmTJjE2Nkba7VOpVMiyjHa7zdjYWJmLGCNZltFqtcjzvMztyMgIWZaV/fM8p9VqkWUZIYRxuU3TFOcc7XabJElot9sYY8iyDOcctVqNSqVCmqa0221arVa5P8V9YwwhBJxz9Pf3l23zPC/3BiDGSAid3GdZRpZlxBhJkgSAEAIhdPbVWlv2SdMUAO89McZyfmMMaZqWbXvrqbhijGW+ijorctJut8sxi9w450jTtMxLb/0lSUKlUiFJknJsY8y4+itqcKLeMYvYJuYkxrjJVbTrXVOxf701D9BoNKjVatTrday1VCoV+vv7qVQqZX2EEGi1Wnjvx52XWq3GwMAAaZqW56H43dfXx+TJk8sxsywr2xT7NTQ0xNSpU2k0GmStNs2xBnk7o6+vjylTpjAwMEClUinHmLX11uy7774M77cfM7feGpwlAEl5vj15npd1kud5WTfFeSvqpLdWetdZ9DHGkCQJSZKU+1vUZPEOKfanOPfFuoo5enNf1GJxfpIk2aRNCGHcPnbWk41bT+c9uPHd0Ykr6a4FQhj//nHOkSQb57PWYt3G9+L4mooQuwPJH73tttuOZ555hgcffBCARx99lMcee4xdd931v3zuPffck5tuuoknn3ySb3zjGyxZsoS9996b4eFh3v72t7N69eruv7swadIkZsyYAcA222zDrFmzmDlzJgCvetWr+NGPfsSTTz4JdM7wPffcU87jnOP1r389CxYsKNf4pje9CejU/I9+9CP23Xdfdt99dx5++GFmzpzJX/3VX/HYY49tEvOuu+7Kc889R7PZLO81Gg2WLVvGEUccwT333MPHPvYxrLVlPIV58+bxiU98ghAC1113HYcccsgm48+dO5f777+fRqNBnucsXLgQgJNPPpm1a9fy1a9+lQ0bNhBj5Gtf+9qL5vcHP/gBH/rQh7j55pvLe8U7/Qc/+AEAjzzyCBs2bADg8ccf5zWveQ177bUXJ510Eq1Wiy9/+cs888wz3HnnnYyOjpbjnHrqqdxxxx3cf//9ANx5552sWrWKE044gUceeYSZM2dy7rnn8rGPfYyf/OQn5fr7+vp49NFHufLKK7nkkkteNP5et9xyCyMjI3jvueGGGzjmmGOATl2sW7dus31e/epX8+1vf5unn34agPnz53P00UePe4e/kN12242nnnpqk/vHHHPMuD343Oc+Vz6bNWsWMUZ+/etfA/DFL36xfLZmzRoGBweZNm0a7Xaba6+9dovXPjg4+IJr3Nz6jz32WFasWMGVV17J2972tvL+z372M44++ujNjjN37lzuuecevPeMjY29ZG29UCyNRqP8W3xzli5dyve//32gs6czZ85k2223fcmx582bxzXXXFP+Hbly5UoATjrpJObPn8/q1auBzt+x9957L/Di612zZg3bb789xhh++MMfct99923RGo855hhuuOEGYoysX7+eL33pSy/YduLeHHPMMVx//fXEGBkdHWXBggUce+yxm227Zs0att12W5Ik4eGHH+Y73/nOC87z4IMPstdee23y96yIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiMifKrvFDa0tryRJSNOUNE2pVqtUq1WstRhjxl0A3Q8AYgTvI+12RrPZpNVqkWUZIQS89+UVYyTGSAiB3LfxISPEnHq9SqVSAcB7T6vVotlskmUZ3vtNYujMGXHO0dfXT5IkGOOoVmvU6/XuWJY897TbGa1mZzznEgYHB+nr78Nai/eedrtNu92m0WjSbuUYY6hW68QIzWYbsAwMDOC9J4SAMQbnHEmS4JzDGIP3vrxf5HHi5ZwjhFBeRU5678UYy7Vt7nPinvXG4ZwDKMfuzXXxe6LenBbj9Y5f5LqIrXfM3ivP83I9xVgxxnJ9xdzW2rK20jQt8zUxpt75i/l658/zfNzVm8vedhPvF7z34/pnWVZ+Ft83t9beWi5qdGxsjEajQaPRKOvee0/SPUfW2rJvkQPnHAMDA1SrVbIso9FoEEKgWq3S19dX5qdarRJCYGRkhDVr1rBmzRparRbVapWhoSEGBgaYMmUKtVqNsbExjDHMmTOH7bbbjiRJqFYqZY0W6w4h0Gy1eP7558nznEajwbp162i1WhhjCDEwNjbG2nXrWD8yQqvdGpePIq/FudlcLRU1OzF/xR6YnpfHxFrqzXUIocxZMXZvHMU1ccyN76VYvid626ZpSqWbm9496Y29E4cnhM7Zmbi2Is7etce48ayMz0fsXvKnYObMmXzuc5/jtNNOY9999+Xkk0/ms5/9LHPmzAHgsssuY/78+S/Y//LLL2fbbbctr69+9atbPPfOO+/Mxz72MU4++WRuvPFG2u028+bNY8mSJSxZsoRnnnmGer0OMO7de9BBB7F8+XL2228/rrvuOnbaaScOPfRQTj75ZPbdd1/23HNPvvzlL4+b6y//8i+54YYbaLVaLFu2jLPOOguA//iP/6DRaPDTn/6UvfbaiyzL+PznP8+CBQs46aSTyv5JkuC9p1arceyxx3LXXXeNG//ggw9myZIlHHDAAXzqU5/iqaeeYpdddhnX5lOf+hStVou9996b4eFh3v/+92+Sk4MPPpgTTjiBvfbaiyOPPLIc48ADD2T16tW87nWvY//992fFihXMnDmz7NdqtTYZ661vfSvf/OY32XXXXct7O+ywAxdffDHveMc72HvvvfnOd77DtGnTGBoa4owzzuD888/ngQceYMmSJUyaNImjjz6aww8/HO892223XTnO3LlzWbhwIRdeeCH77rsvr3vd65g5cybOOW655Rb23ntv9ttvP04//fSyft73vvfxspe9jP33359PfepTLF68mFWrVjF16lRarc67GzrvrGazyYwZM8r5DjzwQI477jh23313hoaGuOSSSwA455xz+MpXvlLWQq+99tqLj3/84xx//PHss88+3HnnnfzzP//zJnma6LnnnivjmuiEE07g1FNPZf/99+eAAw4ozwl0auQzn/kMJ554IgceeCBZlpXPjj/+eHbddVd23XVXDj/8cIaHh18yjsK73vUu/uzP/ozh4WGee+65cc9OPvlklixZwvDwMFdccQXQece/+c1vZquttuKQQw4p2y5durQ8TxOdcsopzJ49m913350TTzyR/fbbb4vjK0ydOpVzzz2XffbZhwMOOGCzbfbcc09uvPFG9t57bz760Y/ypS99abP/Hk7UWzvDw8O88Y1vBODss8/mvPPO49WvfjX77rsvw8PDfO9733vJ9V511VX89V//NcPDw3z+85/noIMO2qI1fvCDH6TRaLDbbrtxwgkncNhhh71g23e84x285S1vYXh4mCVLlvDBD36QNE3Ze++9Oeigg5g3bx6nnXYaABdccAEf+chHGB4e5vbbb+cDH/gAN9xwA/vssw9//dd/zVFHHfWC83z729/m1FNP3aL4RURERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/hSYGGPckoZf+cLVnQ7GdT9N50G0GGPw3ndb2o3PumLstA8hEGPAOQdEQghYa4FInuckSYK1BszGkDp9ItZaTOjME2MkTStUqxUA2q02zVYT5xzGGJIk6c4B3gdC8MQYsDbinMUlFoA89/jcEyNYa7E26cYZcS4hz3OazSZJklCr1Qgeqn111q/fgDGGer1OnufkeYa1lhACaZpijMEYMAbK9JoIsZM/w4T8jMtVJPhAiKGTTWOw1mGdLZ/H0MlBjJFIxGAwxnRyZM3GOYuBDZ05u5+576x5fACx/GoAY2xP314G152LbgwhBHwI9A5aqVTI85wQQlkPIQQwhsQ5kiQhxoj3vtzjYg3W2nF9iqtYcye5ELtteuutk3tT5sp7X85hrS1rpLdPUVNA2aZTl5uaeFxe6HcRa57n49oUa+zUusVgcM4SI+R+fL6K2I0xZUwT11TsVVpJqVaq3bwGcu/Js4wQAu0sY3BwkDRJabaaeO9JnCMCrVaL1DryPKevrw9rLSMjIyRJwsDAQJm3EEKZJ+dceb5iCGTBk+X5uPUVOShqoBhjYr5697Z374v8FeNVKpVN9q2sh+73zdZKj+IdVOxzsaZiP9JKtTtw2Hh+8YQsw/u8jJcAYDAm6ZyTQOe8moCxoXuSTBmvc0n36uxhnnuCjxvfa8YQI8QYqFjABF5z5oWbrT+R38eRRx7JJZdcwkknncQ73vEOpk2bxt/+7d8CcOedd3L22Wdz1113MWfOHEII/OIXv+CAAw7gxhtvZNGiRSxatAiAz372s9xzzz3ceOONAFx55ZWsWLGCz372sy86/x577MERRxzBmjVruPnmmwF417veRbvd5jOf+QwrVqzgwAMP5PWvfz1XX331uHmffvppdtttNx577DEef/xxTj/9dGKMLF26lEcffZRDDz2UO+64g3322QeAn/3sZ7ziFa/4g+bvrW99K6961as47bTTOP7445k3bx4XX3wxP/vZz3jlK1/Jd77zHY488kh++MMf8oY3vIFvfOMb7LfffuPGuPHGG7nhhhv43ve+x7p169hjjz3w3vPEE0+w3Xbb8e///u+8/OUv56abbuKcc87h3nvvZXh4mKOPPppjjjmGSy+9FICVK1cyY8YMANavX8/s2bO599572WWXXcq5fvazn3HppZfy3e9+l7Vr1zI2Nsbs2bMBWLRoEW9729tYtmwZxhiOPPJIzjvvPM477zxuueUWrrrqKu655x4AzjvvPIaHh7nkkkvKsT/72c/y1FNP8dGPfvQPmmOAr371qzz88MN84AMfeMm2DzzwACeeeCJLly79g8fxn3HiiSdy+umnc84555T33vrWt3LmmWdy2GGH/Y/EtHjxYi655BKWLFny3zLf//R6/zu0220OOOAAvve97zF9+vT/6XBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERET+V0h+1w4xxnG/DZEYwRhT3oHO7xg7z4o+xoC1jiTpTBtCwFpDCJ4QAt57vIe04nDOkWUZ3nucsxgiYLDWFpHQarWIMWKMoa+vD4A8zwkhkCQJzjmsDeQ5xGiBThzBd2MLBucqJInDWodzCc4ljIyM0Gg0ynH6+/sBGB0dxVUqONdZg7UWYwzOJRhjyPO8jKdYU+e5w1pDjBB8KHNU5tCYcZ/WWUzceK+4AKw1tH3WzUAc9xliwARDCKHb1nZ3xBBiIIbYjc9hekMw3VY9N4v92xwfI3iPc67s470v1+5cZ/+KeunkI5TfrbU9NWE2WX+MkRDCuKvoa4zBGgPGEImEbh31jr25MYtnxVXc79SgHde/2NvCC+WhiLM37uJe8b03D71xFH1a7RZpmo6LrXf9aZoSY6TdbmOMoVKpUK/Xy3GLsfM8J/edq1hXjBFjLf39/Z0xY6Cvr48QAq1WC5/nnfHzjXvX27eYt91uU61WqVQq5HnO2NgY1lqq1SohBPKwsRYm5rZ33KIOJuYQGLf+zeW4dy9fbC+KuDdXX977cftV5LqYN8/zbn113lUxFmcrju8fDZ13Uey+0wwWRwAwsXt26InDY63rqZOA92FcTYYQ8T7gAbv5chP5gzjnnHM477zzWLRoEW9961s5//zz+djHPsbJJ59Mnue0221e+9rXcsABB/zB5nzTm97Ee9/7Xr71rW+V9975zndy6qmnsueeezJ79myOOeaYzfadPXs2733ve3nFK17BzJkz2Weffbj33nsBmDt3LgsXLuTCCy9kbGyMdrvNfvvtx8KFC18wlvPPP5958+Yxb968LY7/pJNO4vOf/zynnXYaV155JW984xu59tprOeSQQ9hzzz3Ldm9+85tptVq86U1vKu8tWLCAvffem3POOYcFCxaUf6tstdVW3HTTTfT19XHNNddw6qmnMjQ0xFFHHcWcOXPG9X/729/OnnvuSZqm/Pmf/zkf+tCHAPjyl7/My1/+cnbZZZdx8S5dupR6vQ7AunXr+Iu/+AsajQbWWmbMmMFtt91Wvo+uvfZazjvvPD7ykY8wadIkbrjhhhfNxa9//Wt22mmnLc7d7+Iv/uIv/kvG/e9wzz33cMYZZ7DHHntw1llnjXv2D//wD/9DUf3P+FNY7+OPP85VV13F9OnT/6dDERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+V/DxBjjljT86hevodPUECMU3QwOY0x5gem2id2Lnu+x2w7yPMd7T5qmOGdotVp47wnB0z/QR7VapdkcI4RIpZISY8SR4r2n0WiwevVqVq5cSYyRWbNmse2221KpVNiwYQOjo6NYa+nr66Ner5MkCdZa8twTfAAghIAxhiRJMMaQ+5xms8HYaAMfcqrVKn19fTjniDGyevVqli97GuMqbDVzK2bNnEWz2eCZZ1aACQwNDVGpVMiyNpVKhSRxWGuwzpCmKdaazvo8gN24AWXeOt9jjIQQxv3uza8xhjxvb34zu897+xRCCIQQ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iIiIiIiIiIiIiIiIiIiIiIiIiMj/NnbLmxqM6VzO2fJ7CJEQPDFGYgzdz00vZy0usRgLxhhijDSbTdauXctzzz3H6tWru2M7vO+Mt3btWkZGRli/fj1ZluN9oF7vY6uttmLrrbemv6+fkQ0jPPfcc6xfv76zIGtJkoRarUa1VsUYQ57neJ8TYwBD56IbL6H8HmLAe49zDuccIQTyPMdaS71ep6/eR71exxpIEse0aVPZcccdmbvzXKZNnUqet8l9TgwRY1xPfgJESJwjTVLSNCFJEpxzWGuxtrMNMXbaeu87fYrMGzNuJzrPTHnfe99doyeEWO7X5j6NMcQQCT50rhDKOfM8p91uk+d52baYY+Nedtt3r9x7fPBEwFiDdQ6XJER40QtjwBiMNRhrMdaUz0KM3TYQzca2GEM0EOk8DyFgjCFJEiqVCmma4pwrcxJjHJeboj6KNRXr670m7kFvDW+ufZG/3ra9Y3vvCd5vch6InZz6vI0BrDXFDuGsAwztdos1q1fz2KOP8rOf/Yy7f3Y3y55cRoyR/r5+rLW0222sNcQYyPI2MXhqtSrVWpV21mLNmtWMjo2Q51m5d5jYmctEkiTBWsvAwABDU4bw3vPwb37Dj370Ix577DHSNKVer1Or1QghMDo6SoyRer1OpVIBKM+L9552u433vjyHQFlPE2vZGFPWfrEvvTns/Z5lGVmWlfta9C/mtsZCjMQQ8HmOz3J87okhYCJYDKH3t7E4a8t+IQRMZ1OIobM/BoM1pmxnMBgDthu3NZ3nJgIxlM9CDITgCTGW5654l/gQcImjWql1zkmI5HlO9AFnbbffxrMvf7wmT57MLbfcwqWXXsrLX/5y/v3f/5099tijPDcv5l3vehe//e1vOf/881m9ejWHH344N9988wu2nzdvHq9+9asBmDFjBo888ggAF1xwAXfcccdm+3z/+9/n+OOPZ5tttgHg4osv5nvf+175Lp1o4cKFHHDAAey1115cd911LFmy5CXX8V9h0aJF/OQnPyl/H3DAAWVu1q5dy1VXXfXfGs/WW2/N1Vdfzac+9an/1nlFRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP472S1tGCOAIcZI7PzoMuV9KK7NTOQszjmMMVhr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lvYREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfnfyG5pwxgjIQR87smznDzPCSFgjME5hzFm/GUNxlL+LhhjCCEQQiBJEgYGBpgyZQpTp05l6tSpVCoVYoy0Wi1CCOU8eZ6xbt1a1q1fy+rVqxgZ3UCSONI0Jc8zGo0xsiwDIEk68cQQiXFj7CEEYozEGMtYis/iKtpYa0mShBgj3nsAqrUqAK1WGx881lparRZjY2PYxDJ5aIhms0mr1SLPM3w5nwFrMNZijB2XjyK3xTwhBKy1m+StN97ePsVaJt4v1luM2bt+Y+y4OYwx3d+2/O6cw1pHkiQ457pX0nlmXdmuaFuMU8y/ST30rOeF7hf9itiKtsU8E2Pu7de7vhfa297c9PabmMPefr3zFsp8bqbfxLF61zNuP+PGtgbKPYkx0m63yzqKMdJsNVm5ciVPP/0Ua9asJgRPmlYwxuC756PYhxgjzWaTZ599lqeffpr169czdepUJk2aRIyRRqNBCAHnHN57Wq1WWevFPvf39zN16lTq9TrNZrOMpd1uY4yhWq2WZ6O3dnvH6c1FMW6apqRpOq5uXqx2Npe/3jknXsW+9u6F9548z8v4ijGK+8Wz6AMxBKIPhDzHZzmhe7/43Wo2aTdbtFstfDsj5h5ixBrTORPdfXUuIUkSjLGEELvvE1eu3QdPlmVkeQ6ANZYYwfuw2XMvf7wuu+wydtttN+bOncsTTzzB9ddfP+7Z/PnzN9vv61//OnvttRf77LMP++67L9VqlQ996EMAXHDBBaxcuZLdd9+dc889l4MPPnhc35kzZ7JgwQJ22203nnjiCebMmcN9993HDTfcwJe//GWOPfZYnnzySXbeeWdOP/10AE488UTuvPNOLrjgAg488EBe//rX02q1uPvuu5k/fz7HH388u+66K7vuuiuHH344w8PDADz00EM41/l3BODYY49lp5122qLcPP7447zmNa9hr7324qSTTmL16tU8/vjj5fPTTz+dJEmo1+sMDw/z2GOPbVnSJ3jnO9/JZz/7WQD+4R/+gYsvvvhFz+AVV1zBRRdd9HvNJSIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiLyxyrZ0obBB0KIhBABMKbz3doAWGKMPa17v5vOFcEYg7UWAO891lrq9ToDAwPdMQ3tdhtjDN57arUaSZIwODjYbW9I0wTvPevWrQNgw4b1jI2NUa/XyLI2SdJ53mg0iDFiraVaq+CiIcRIpDNvjBFjDMaYjVHHSAiBSqVCtVrFGEMIgTzPGRkZ4elnnqE9Nsro6Ci1Wh8hBFrtDGMtU6dOIUyOuMThEgcmEmLAh864BoNzjoAhRsNExdxFzDFGvPflszKb3ZhDCOWz3jWEEDDGlOP1KtrFGIjREKIHevvHsl8xtzGx7FvMFWMkdPev2M8iFu89IYRyDcW1uTg2xrOxjTHdPHVjmLi+ie03l5/emIBNYpx474XGd86V65jYv/gMPZ/j1tWt9zRNO/vasxcxRogBiyH3Obn3YKCSpt29Bes6dTt9+jSmTJnMlKlTmDp1CrValf7+Ppy1BGtJkoRoOvsQQqDdbtFoNFmzZjUxBrbeemu2334O/f39tNttsiyjUqmQZRne51SrVRqNBo1Go8xJmqbl+axWqyRJUvZ1zlGv16lWq2V+ijVZa19wT3v3pfhe/M7zfFzfzbVrt9ubrefiiiEQvIcIsfv+scZgjAVjsN020Rii7+xHDIEQgRjpfiGG2G0HMUSwhugjnkDIPRGwxmKd7YxvLRYDxhKLscr3X+fdZ9gYJ9EQYiDPu+cLA6bTplPryJ+Qf/7nf37BZ1dcccULPluwYMELPps6dSrf+973xt078sgjAbj88stZunQpw8PDXHLJJQC85z3v4Y1vfCMf+chHNhnr0EMP5bnnnmPRokUAfPazn6VWqzF58mR+9KMfceWVV7JixQrSNOXmm28e1/fDH/4w999/P2masnbt2vJ+7/u2+Pe60Gw2y+9nnHEGV111Faeeemq5rt7ntVqt/O6cI8/zF8zJiznllFN473vfy7333sutt97KJz7xid9rHBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGRP2V2SxuGADEAGIyxGGOJEfLck2UZMcbuFTZ7eZ8TQsDazpQxRpxz9Pf309/fT6VSIYSAMYa+vj7q9TpTp06lXq8zadIk+vv7mTRpkKGhyVhrePbZZ3j00UdYvnwZzWaDwcEBarUqaZrQbrd57rnnWL58OStXrqQx1iTPPd5vvEII5VXEXnxP05QkSQCoVqtUq1Wef/55fvrTn/HQQw/TarXp7x8ghECW50ybMY3Zs7emUktI0oQkdRhrwBowFowldnM4cU5jDNZanHNYa8urUMQVQijvOecwxgBgjME5R5Ik5X1r7SafxVXM0zt2EYcxG+fuzdXGdkXONvYrYijiKcZ9Kb05DyGUe7IxFjOu/cTfG+tt0xh6x4wxlnkoWGtJkqTMSW/fIqbeGumdpzeeF4wpxHH7u7m2AJFObMUZ2RgPVCoJkydPolavUq1VGRwcYHBwgGq1ijGGSMQYOnUGWGswBvI8Z8OG9axZswbvPdOnTyOEQKPRIM8z6vUaxsBTTy3nySefpNFoEGPk+eefZ9myZWW/ogayLMMYQ6vVYmxsrDy3vfnqzU1vPRftYoxkWUae5+Py2lubIYRxz3trs9izzdVtwTlHJUlJnMMZi8VgMSTOUU1TKmlKyD3RBwzgjO1eBhO77yM6/UwEE035nRghRJx1ONvt09lACBEinbZ01pp7T17WnsNY14k7RMB0IjMWMIQQibGTtyRJyloQ+a8yadIk1q1bV/6eN28eN910E08++STQeX/ec889f5C5dtttN/I85/vf/z4Ad9xxB4899lj5fO7cufz0pz8F4PHHH+euu+4qn61Zs4Ydd9wRgJtuuok1a9Zs0ZwT1zfxWaPRoN1ul/eSJOGiiy5i3rx5nHzyyQwNDf1OaxQREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREUi2vKnBGIu1EWMMxhgAYowAhBDKe+N6md7vnX7WWpIkwRhDkiTlOM45+vv7sdZirQUoP1utFjZJqFRT6vUaaSUha3ucswwM9NPX10e1WsV7X/b33tNsNmm1WiRJQpokOGvLmIu4i99FP+cczjkqlQr1ep1qtUoIgQ0bNlCtpEyfvhXTp8+g1WqDTanVaow1mvjoMcZSq1exie2s3RhiNIAlxNhJSDTjYogxEmMsczFRkYPevDvnyn7j890Zu7dtrxgj1lksEbBgLMaY7v5BkiTEGMnznBjDuLE6Y4PpiaW4nHPj5rPWjsttMU7vejf3DMB7v8m6irX1tt/cOifm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EqrVKkmSlHU2cR+99+X33r0qzufEz7LONpPziftezAUQfSD3+bh7BjDdmrHGYLvnvneMsn/3HPSuYdxex0iWZcTYefcV562IwzmHdZ33X+493ntarRYYQzQGl1S6eezuc4TgA8V7MnTfncU7VP40nHrqqbz3ve/lsMMO2+TZhRdeyAUXXMB5553HLbfcwnnnncfdd9/9ouPdfvvt5XdjDHfeeSdDQ0N/sHhvvvlmXv7yl/P1r3+da665hoGBgT/Y2P8ZixcvZu3atRx//PEv2ObSSy/ltttuA+CAAw7g5ptvBuD444/ne9/7Htdddx3nnnvuf0u8va644or/9jknOvHEE/nbv/1bHnnkEXbZZZf/6XBERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5P9BdksbxgAxRmKMgJlw9T6LWAvWGpyzGGMwxpAkCc45YowYY0jTlEqlgjGd/s45kiTBWltexpjyu0scEInRE6PHWnCuMwcmEqIn0rmMoZzXGEOMECN4HwghlPGG0PkdYyTPc9rtdncNHSEEsiyj3W7jvQeg1WqT5x5jEyrVKpVqFWsNIQYyn4OhE3PiiAbyPCfLPCFEjLFUKhXq9TrVahXnXLlG5xzWvvB2GGPKHE2ePJm+vj7SNC3zCpRr8N6X6yz6dvIQ8d5jnaNarVKpVIgx0m63yfO83JckScq4ij3p5Kwzptlkzzd+L/LZbrfJsmyTWHr7FHGNq7Puc+893nvyPB93FeMXe1a0K+bpfT5R7/OJvyeuo/d77+/xfcK4eYs1lTXrXBlzsX/FHhb70TkPEecsSeLKOrDWYAzUahX6+vq6NVPBJa48VzEG8iwnzzOMgTR1VKsVJk8eZPr0qUyaNIC1MGnSIAMD/ThnaDRGybI2fX11Jk+eRK1WJcaItZYZM2aw66678rKXvYy5c+ey7bbb0t/fT5IkpGnKlClTmDVrFpMnTyZJEgDa7TatVmtcvnvPb+/Vm/Mib7057q2L3j0r9rm3xnr3sRjfWYs13eos4okRW5yx7mWNwXbbO2spZjPGjtuXYp4XqpHN1XJn3xOsdYCFaDqfFO+hYuyI7+ah847IyLKsOAWb1K78cTriiCPYdtttN7n/3HPPcc899/CGN7wBgNe//vUs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QyCEgPd+3NgvtN8Tn4cQcKnrvq4MxliiAXrbWkOMdPYodNZcnF3nLCZGDJbEpZjEEYkQAhYIcWMd9NaoTTrvQYfB2Eg7bwEBkRfz4Q9/mBtvvJGjjz6a+fPnv2T7hQsXsmDBAprNJs1mk+nTp5fP/vqv/5rXvOY1XHDBBfzsZz+jVqttdozrr7+ec889F+ccJ5xwAhdeeCEPPvggu+++OwCHHHIIc+bMAeCAAw4gyzJmzpwJwIEHHsgjjzwCwB133MEnP/lJrLX09/dz7rnn8p3vfIfTTz/9Jddx8skn09fXB8ArXvEKHnvssZfsA7B8+XLmzp27RW0nevzxxzn77LNZvnw5SZKwevVqHn/8cXbbbTcAzj33XNI0JU1T3vCGN3DHHXdw1llnveSzzbntttv4+7//e6rVKgAzZswAoNFocPHFF7NkyRKstSxbtowlS5Zw8MEHA/Da176WWbNmAXDBBRdwyimnbDL2okWLuPvuu3n5y18ObPy3uDBr1iyWL1/+e+VIRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERCTZ0obWWgBijC/43BiDMZEYIzHEsn0MER9yiJYkSTHGEEIo+xbfjTHEGDHGlPOFEIgxYm1nDucMSZKUfYp4rLWEEDDG4FxCkhjAduaPsTNO8ASf97Rz5RwhBKy1WGvJ87yctzN3536SJLTbGQBpmpKmKTFGsjwn820Apk2bRpZlNJutToKTlLRSweeBsWaDappCjHjvu+txxBhpt9vjctCb53FriJEkScr+Be/9uHvFmOvWraPValGtVhkYGKBardJoNCBCiJ6RkQ2sWLGCVatWkaYps2dvzfTp06lUKuWcxfpjjAQCIYyvgc6+d65Csa7ee8V4vXu/uTGK+piYh2LfirF6vxdj9/Yv6qjIaTFm0SZJkvJ+bxwT66E3p0U8xhiMtRhroFvj5VgxUqSomKt3HcW9otaMMRCL/EQgB+MAQ6dbZ7wQPN7nxBgwBmIMhBixicEYh3MJ1hry3Jdrcs5SrVa7Ndkk9zkAzVYTIgwMDDAyMoJzDu89APV6HecceZ6T53m3jhP6+/vH1VuWdc5CkaPedRa5LuIo6qf4PrFeirl7c9Srtx6KM1nWVQiY0LMvm+kLELzv9qez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S7vdxjnHlKEhdtxpJ/rqfbRbbVatXsW6tesYGBxgaGgIay3VapU0SWi12+PqtTeX5Z5tZi966+SFasYYQ6VSIcZICKE8q+W4IRK877yDItBTT4GIiUAIVNKUAFgAZ3HGEkznJRgM+JhjI8RoMCYSIsQYCDEQo++815zBOQdEjAfvc/Lck2MwGNI0BZdgsHQH21g7MZImCcZYrO3UTHSdeG33LLRaOZgc+dNw4YUX8m//9m+sWLGC4447jsHBQR599FEArr32Ws477zw+8pGPMGnSJG644Yay3/nnn8+8efOYOnUqv/71rzn00ENfcI7jjz+em266iV133ZVp06ZxzDHH8NRTTwHw2c9+ltWrV/PBD34Qay1/9Vd/xbnnnsttt9027v1+/fXXc/bZZ48bd/fdd2ebbbbhm9/85u+05g9+8IO84x3vYO+99wbgL/7iLzjttNMAeO9738vpp5/O3nvvzZ577slBBx20RWOefPLJLFiwgOHhYU455RQuu+yycc9PPPFErrjiCrz33fO75a655hpOPfVUhoaGOOqoo5gzZ86457vvvjuvfOUrWb16NX/+53/OGWecsUXPNud973sff/M3f8P+++9PmqbMnj2b22+/nQ984AOcc845fOELX2DnnXfmqKOOGtfv8MMP56yzzuKpp55il1124cYbb9xk7LPPPptVq1bx6le/GoA8z/nLv/xL9ttvPwC+/e1vc+qpp/5OuRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERKZgYY9yShjdffw3OOSDSbrfw3mOtxVrbGcgYYoyEEDDGYIzBWoMxEIgY57DO4r1ndGyMkQ2j5LknTSrMmDadkZExNmwYIUaoVmpsvfXWZM2MarVGlrXBBJI0Yi34LKfZbmEiVGpVLIZ27ok+4GMgTVJc4gi5x1iLc44884yNjLF+3Tra7TZ9A/1MmjyJWq2GtRYfPK12kxADNumsK8bYWUdqIIL3kWpSI2SBEAKrVq1i9eo1TJs2jenTp7NhwwaazSar165hdMMIg5OHGBycxMDAAM8++yzEyOiGDTjjWPHsClpZm2qlwrRp09hm220YGBhkcLCfSqWCdZZ2ntNqtTAG0jTFx0Cj0cAYQ5IkmAjtdpsQImmaUnEJ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NBpSliUnTpzADMYrY1bXJgyHA+rUMJvNSCn1vyEEyrJkc3OTQ4cOtTU3HnPxxReza9cu6rqmrut+XVVVMRwOaZqGwWDQP5/NZuScmU6nfX6qqurX0+Um50zT1BSDQZ9jd9+SixACo9FoS962H13Nd+2Louhrp2maPtfd0c3RxWHBiDESQujzvbxn3VjLe7O13iJ4A+Z4NpLn9hvHYlNwYihwEjk5Zg5uWIBgAbOAbxtz+f1w/LQa2ZKPrl8McPavinyV6761y/7gD/6AJz3pSV+hiERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5KtRcbYN3doj4Ti0f5phONmdYEZ2J+dExjHAQiCYQQiEGAgWMJyAYe64OzlnctOQmxpwsmfMjPF4zL79exgOxlTzOZDZOHGMYDDd3OTe6ZT5bMb555/P3j17mE6nrKyscOTIEf7P//7fHDx4kI2NDS644AK+5mu+htXJhJMbU6bTKeWgxIoAwUgpkT2Rc8YXMQ0HQ0IZGI/GFKFkXs/JZGI0wAkRPIO7k1JiY2OD48ePU1UVu3fvZjQa0DSZqqpwd+pmTt3MmVdTKEr27dlLLAMW4OTJk2xubrK5uUlRRmKMDIdDnHbspmmo65qmaSiHBUURmE43KGJgUIwByDlTliXDYsDKygplGRkOS3JRwFE4fPg+jh49yr7de3j8FZezZ89OPASqqur3t2kaZrMpg2FJyg0pJeq6IqVECIGyLAGo6zkpJWIs+75m1h85Z3LO/XUIgRBCm+fFs/Y5hND27cbo2nZ5dfctY3f74znjQGFlW3/bi3WpbZsf33JtFvrz5fvL5911t5Yt78IiLoCiKLY8zznTNA1N05BzZjgcnpaLbn1NrmlyzcqwZDgYtuOmNva6rtnc3OSTn/wjDh06hJlx7rnncsWVV3DZ5Zey/5x9mMFwOGAwWGU+nzOdTtnY2ODQoUP88R//MU3TUFUVj3vc41hZWWE0GtE0DWbGaDTq96uL7+jRo9xxxx0cOXKEvXv3cuWVV3LVVVfx0EMP9bU9mUxYX18npQRASomUMsVS/rbvf1dfy3tpZsQYKYr2E1RVVf8OdrWynM9Te5n7Z8t7lj2Ts/V70X9bltrGGLfs73LtOjAcjMiecQf37isWMAsEi9R1IueGnME9AYEQDIIRY8A9034ZHRZxteMHQty6drbE4YvLNva0LUb5q+vVr34173//+7n77rv5/d//fQ4cOHBWzwA++9nPMhwO2bFjR3/vb/7Nv8mHP/xhDh06xLd927dx5ZVXEmNkbW2N22+//bT5Dx48yAc/+EFuuumms4q3+07s2rXrjM9/4Rd+gZe97GX8xm/8Bs985jPPasy/CDfffDMvfOELOe+8877SoYiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI/JVUnHXLYABknOyZ7BnL7T13x4qIJccNcMCMEEJ/uGeapsHdqeuapknknInBMDOKomRlZYWqqpjNpmxsbLCxsUE1rJhPZ7g7u9dWWV1b4eTJk3z2s5/ls5/9LBdddBGPecxj2L17N5/97Gc5duwYdV1z4YUXMhqN2Lt3Lzt37mznioHhaIjFgJmRc27XZkZRFIQQyDkzGo8oBgVlWeLu7foIWIaiLCnLkqbOpJSo65qNzQ3cnX379rF3715yzpw40d4LIVAU7VhlWWIYw+GQtMjH5z//ee69917m1ZzHPPbR7N69m5QaYhEZDAbEGKnrmrquSd5gZkynUxwnxtjuSc6ERR4BptMpdV3jyamqihMnTnDo0CE2T5xk/7nnMF6dMFpZYTQaURQFm5ubNE3DvJozHLVzurfjF0VBURT9vaapaJoGs/baFvvczd2m03D3PrbuN6XU57MsI3CqT9dveZwt9xf71PXHgXb5/Vxd29PH81P9AM8Zs3Yf3J2UEim19WhmxBiJMZJzPlUjnW5dXd0v5gghbJm3y8n2+8txWf+OGGZgXuCeqaua6XSD2WzK3r172bt3L/v37+eRj7yYffv3YdF46KGHSDkxHA4ZjUa4O0VRsLa2xoUXXsh4POb8889nx44d3HXXXayvr/fvw2AwIOfc52M8HvPQQw9RVRWPfOQjueaaa1hdXWU6nXLnnXcyHo+ZTCaUZUlKiaZptqyze2/cvc9XN3ZK6bS97HKynIflPcw5U9d1P85yrMvtlp9nM9xO5Xw5luVxz1Rj/dhmuHdjOu55EacvxRgW1+2nc8s3LoOz6OfL6zUC7T5Du9dgW9bkgHuiWZzLV4cbbriB/+//+/94xjOe8ad69hM/8RO85z3v4Z/8k3+ypZ5/5Vd+pT83M26//XZ27dr1sPMfPHiQt771rdx0001/voUsvOMd7+Cv//W/zjve8Q6e+cxnflnG/HK4+eabue666zjvvPO+0qGIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiPyVVJxtQzMDwN3JOZNSIoSAmfX3unZmRgiBGGPfJmfHncVh4EbAiCFQFAUxBrxJWHaCQVwcRTBsNCCY0TQNk8mECy+8kAsuuIAHH3yQuq45efIkm5ublGXJ3r17GY1GjEYjmqahaZo+1qIoCHVD3TRMZ1MITghhy7q6mMtQkut2TTFGAFJObG5uMplMqOuajY0N5vM5R48eBTfOPfc8du3ayfr6Cep6jplRFAVlWRJjJMbIIBRMp1OOHz/OAw88wLFjR3HPPPjgLi551CP7diEELAZiNIoi0DQNGcfdWV1dZT6fk1INZNolOGZQlgWTySrHjh3jxPF1QoCLL76Y1dVVmnnFdDrloQcfYn9RsLq6SoyRlBuwzGBQLmINhGDAYt2ppmkq3B2AwWDA4nRL3rbrnrk7KaW+fwiBAMSupqBtt+jj7gTAluqr62vubS2aYdZ27mpz2XJt2qIuuzGWa9qyk5oEORPNiCESQyRYIOHYtv/6WNwBJy2PtVT3RVFsyUH3foQQ+qMMJeZtXdE4MRgsclXXNU1T84UvfIHjx49z331fYHPzJJfZZVx40YXs3LWTWERSSkynU0Joa2Q2m1HXNaurq5x33nns2LGDqqo4cuQI8/mc0WgEQF3XfZ3Vdc3a2hpf8zVfQ0qJ4XDIbDbj6NGjxBgpy7YuqqpiY2ODlBIxxi1rOtN3ot8zM8qy7O91NbEsxtj37fK1PH7TNO1eLvLcte37pEwi9XuwHEdn+zdq+bm7U9epb9vetv7c3Ynx1J4ux9LOByEYvuiQc1rMF/AA7Uvqi2NRuOT+cAy3QMqZfFo1y19Vz3rWs/5Mz/7+3//7/P2///fPep5f/dVf5Q1veANN07B7927+9b/+11x++eXcdNNN3H333Rw4cIBHPOIRvP/97+f1r389H/7wh6nrmh07dvDzP//zXHrppV9yjk996lN87nOf44477uDyyy9nfX2dHTt2AHDdddfxpCc9iTvuuIODBw/yXd/1XXzt134tP/mTP8nnP/95Xv3qV/O6170OgI985CO8+tWv5uTJk4xGI376p3+ar/u6r+PgwYMcOHCAY8eOAXDy5EnW1ta2fGd+4id+gltvvZUjR47wxje+ke/+7u/mx3/8xzl06BDf/u3fzng85pZbbuHAgQNnnTsREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREfnSij9NYzPD3ck5k3MGIIQAQEoJd+/bhRD6Z+5OCEYIBSllYoyEYHg2QojttQVSSoQQGAwGFGUk58xsNqOqKsoYWBkPefDBB5nP5+zYsYOLL76Ypmk4ceIEGxsbHD16lJwze/bsYceOHYxGI+q6buOJkVlVkUg0ucYZUJYlw+EQgPl8TlVV/Zq69YQQKIo2TU1qcHeKoiDnjLtTVRVN0zBZWeO8887DLFDXNdPplBgjTdNQ1zXz+by9N17h+PHjHF9fB+CCCy4gxsDqZAJAXVcMhwNSSuRUE0IgxtjOiePu7bh1gwFlWRJjm6vpbMpsNqOuG6bTKZubm8znc847b5WdO3eysX4Ci4GqrmhS6uPc2NjA3RkMBphB0zSLfU7UdcXm5iZ1XVOWJZPJhPF4TM70OTCzft+7Gum4e7uWnDEziqJo9xvv23ZHN17ObY106+qed0IIBDPaUZzseUuNWghbYnK29u+kuoFF/F0ezYycc5+Dbk3deMu6Wu3ap5RIKWFmixoP/fq311OMkRADIYe2RmYVgzJRMgAcC06MgeFwyGg0JASjritmsylVXTFoSmbzGU3T9LF39WhmjMdjAB566CE2NjaYTqfs3r2bnDNVVeHurK6u9n2KomDXrl39WA8++CDHjh3DzNjc3GRlZYWiKBiPx8QY+3F37NixJTfdni7Xwfbcb8/n9hxvr5kY42n9t2tSQ1rsQVEUW2predzluuh0NdbdD0v10/U701qW69YMLARCDPhSzbo7XY9+7sWfp2IE2krGMOD0WhX5szp8+DAvfvGLue2227jqqqt417vexQ033MDHP/5x3vrWt/La176WO++8s2//gz/4g/yzf/bPAHj3u9/Na17zGj74wQ9+yXne8Y538NKXvpQLLriA5zznObz73e/mla98Zf/87rvv5kMf+hDr6+tccsklHD16lNtvv51Dhw5x6aWX8rKXvYyVlRVe8IIX8PM///Ncf/31/OZv/ibf+q3fyl133XVWax0Oh/ze7/0en/zkJ7n22mt56Utfyhvf+Eb+7b/9t/zyL/8yBw4c+FPlTkREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREzk5xtg1TSrg7IQRijIQQyDmTc+7bhBAwM9ydqqraCYqCoijw7BhGtIg5NHXDfD4nNYkHDt9HTpnNjRMAmDkbJ09QxoA7jAYlADlnHnjgAe6//37W1tbYsWMHIQQ2NjbY2NhgPp8zGAxYX19nc3OTpmlwd1ZXV9m7bx9VU1E3NU3TMJvNGAwGmFkfd1mW/ZqKoiCE0M+bUiLnzHg8ZjbbZD6fc/LkOl/4wv1sbGzQ7G645/N3s3/fORRFZDQacfz4cWazGffdd4iUEjFGGI+YzTfZ3DzBzp1r1PWozZXBfD4jxoh7JkQjWAEGTiKTye7knJnNNwkFRAvUzZz5rCbnzMpoxMpkRAwlOSdWVlZYW1tjY+MEa2trPPKSi7n30CE2Nk5w7NiQyeqYtbU1Uq5ZXz9OXVeMRkNCCIRgxFiwvn6cz33uc0xnG1xwwQWsrIyYTqeMRiuUZdnXRtM05Jwxsz6nneXrnDPuznBQ9PdDCKSU+hoDqOt2n8qyJMa4ZQ/cHUIkk2ExX3+/nQQzo65rADxYX58hBCy2+01Kff/l2Lqjs3y+ZT3Wxtm9A934nZwzZVn270q3PncnpYQ5ENv3YjAYkJpEtMyOHTsoLLJn724e85hL2LVrNxdffDGj0ZDkbR3FGHGDuqmo65rZbNbmdThkMBgAUFUVO3bsYH19/bQa7/bs5MmTNE2zqOsZVVWxc+dO3J3Nzc02TjOOHz/OaDRi586dTKdTptMp4/GY1dVVYgzkRV66XLl7n9fufpebbswYY793y3lu34G21ru1jUajvn3XtmtvZgzKAcXSeMtzdHNu3+PuGcDyDnexL8/VxZVzpmmafr+7vQjBSDmTPWFh67ekaRp8EUtRFO3aUuprx8woQsTKgoEVzOoKkbNx880385a3vIWnP/3pvPOd7zxjm//1v/4XV111FVdddRUAL3nJS/j+7/9+7r333jO2/7Vf+zV+9md/lhMnTpBz5qGHHvqScTRNwzvf+U4+/OEPA/Cyl72Mf/gP/yGvfOUr+zY33HADMUZ2797Nox/9aJ73vOdhZlx44YXs37+fgwcP9v+2uP766wF4xjOewbnnnsudd97JRRdd9CXjeMlLXgLAZZddRlEU3HfffWfVT0RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/nyKs24YIgQjYLiBpwxAwCAYBmR3cpNwIJhhMWAYnjJmhgXDzAghEGPEzEg5MZ1OwWF1dZWcM03TUNc1TVNR1zUpZXJOnH/++YzGY6abmxx54AH+6I/+CAuBiy+6iEc88pGURcHBu+/m4x//ONPZjN27dnHe+eezsrLCdHOTZI5FsGy4O/P5nJwz7k5KiZwzOWeKomAwGDAYDCjLkhgiZRy02TKnaVIf4+bmJvfffz/33nsvd911Fxdd+Age85jHcNFFF7GyssLnPvc5Dh8+zOrqKo961KMYDAYEM8rBgLppOHnyJOsn1hkMyjYnwXAyntt8Oo57wvE2vzkzn89JKYE5VVWRFvkFmM1mDEowM2IRKYp2i82M0WjEnr17OXb8OE3TcOLECXLOzGYzzKxda4zEGCiKyHQ6ZTqdUtcVKSXMjMGwzUtTO+7ejx1CaPd46TznTAgB91Ntu/P5fI4t+gLknNs1LQkhkHPun3cH7TaQAAuhrb/FOGYGSzEAZNtay+6OZ2/n335/keNurC7uTjcmgGcn+am2y3OmlHB3Yoz98xjjljzknHESHqCMkWCBXDdsbGwwm26Sc+bBBx/k2LHjOJlzztnPcDSkyQ3zasZgWFKWA4xAVVWLd6YhhEAIgZQSm5ubfOYzn2EymTAajXB3jh07xv/5P/+HGCNPfOITWVlZ4e677+bQoUOcf/757Ny5kxgjIYQteejGbJqmj386nTIcjRiORw+bp27/tudzec/cva+fLleDwaB/P5fH6fanq5EYI8GMGGLff3lPlvd2eS+W12eL787yPN0al78Ly/F1/VNK1HX7PobFN8+C9bXfxtaeT6fT9h2zQFmWi1rMuENuGrIn6qZG5Gy87W1v4x3veAfPfvazvyzj/cmf/AmvetWruOOOO3jMYx7DRz/6UZ71rGd9yX7/7b/9N44dO8b1118PtO/boUOH+MM/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4nexBxaM7rVuw+veHQhWEm2AiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyP8rwp+2g5ltOUIIhBD6Z8vtumchRAxwB7OIWaBpGk6ePMn6+jobGyeZTjfZ3NykaRrm8znT6YzNzU2KoiClzPHj61R1xayq2JxNmc5nJM+UgwGj0YjBcEjTNOScye7tb5PITQIgxkiMkRACZoa790cIgbIsKcuSnDN1XVNV1SKOKfP5HHenLEtiLBiPVhgNx+QMx46d4J4/uZf77zsMGCGU5Ax13VDVDe4QLBJCgVlxWv7OJrfLsYcQKIqCoij6vAP9WrZfd/e2nuct19tjcXdSSpgZMcZ+vuW8pZTaHOd2rO63O5afnamGkju+mLLbkxACYfFrZu1zW6orAzdwIFu7jpxzH/P2Gtye0y3zLM6X17y9z/Z2y2trUqJpGprU4O5bxgf69Xc57PLYnduiTZfLrkbd23mquuL48eN8/vOfx9151CWXcNHFFzMcDgkhMB6N2nejaSgHJcPhEDOjrmsA1tbW2LVrF2tra1RV1b8b22si58z6+jqHDh3i+PHjXHDBBTzhCU9g//79HDt2jHvuuYf77ruPpml41KMexdd+7dfy+Mc/nhACDz74IEePHqWuqoetw+V66o7lverqe/venfp2tM+XazQtcr88VkqJ+XxOXddbarMbqyzbHBVF0e9P0zTUdd3uY91Apj9sUXzGouAcUsrk7O01XaxGsEARCgzr19jNHWOkKIt+7wE8ex97t0Z3JzUZW3wrRP6sLrnkEgCuu+46Dh48CMDLX/5yPvShDwFw66238ru/+7t/ofHceeedX5axDh48yHXXXdePeza6PNx4443cdtttALzpTW/illtu4ZZbbuFNb3rTlyU2EREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZGvZsXZNjSzLdfuvuVed7782x8YTdNQ1w3gNE0iZ6epG06cWCelzHw+Z3NzxurqKk3TMJvN2NjYYD6vOHnyJIcOfYHVlQnVfE5VVcxmM1JKNKlhOBziQFEU5Jypq4rsToyRwWBAESM5Z0KIBAt9/O7+JdcJkHMG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BUURaHJDzg0if1Z33HEHAO973/tOe/YN3/ANPP/5z+fAgQO89rWvBeC3fuu3+A//4T/wG7/xGwyHQ26//XZe/OIX8/GPf7wf72Mf+xiPeMQjeOlLX8o3fdM38du//duce+65PO95z+MXf/EX+f7v//4vGlPOmde97nV87nOf43/+z//JeDzm+uuv54d/+Id59rOfTdM0PO95z+M973kPL3jBC3j961/Ppz71KS699FLe//7389jHPpbLL798y7q6dQK8/OUv5/nPfz7Pf/7zT5u7a/8zP/Mz/b3Xv/71Z5tOERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE5C8XZNjQz3L2/DiEQQujvd0d3z8y29AUj50xOjllgUA4YjUbs2rWTlBJmAQi4Z0IIzGYzUpO4//7DpJQoioLRaEDV1CTPDMcjzIxjx49TVRXj8RiAGCPj8ZicM0A75+K8aRrMjBhjH3fOGXenrmvm8zkpJQDKsmQwGFBVFfP5nBgjZVkynzXMZjOGRUlRFMymM9bX13nggQeYzWacd955TCYTikFJcifGSIiBkNv8bM8NsOV+jJEQQn+/i6/LY86Z5Lm/Xm7bxb4176d+uzbBIXtuz0MgxkiMsc9XN193vj3urgqW9305VndnMBiQc97SL6XUj4V1YwCLdZgZnjM5ZbJnzNtm7o4v5nUDsP5+0zRb4ttep8s56uZfXmPTNP39LvfdGDHGfj3b3wEzsBAgO8GMvLSlXU63trct8VgMhNDGNBgM+7m6Pa6qipQS8/mcwWDAaDhkMpkwHo8py3Lx/gEhYCFSEPpa7+aMMZJSIqVEXdd9367OuxiLouhzUBRFH2dRFH3uiqJgMpmwsrKCmVGW5Wl738k5n1bH2/PYPVt+P22pDrbX3/b9SSlt6bdc48s1u/w96vo1TdPnu68Tp3/u7sSioCwKzIymrklNglAATnbHcyZ04wKOk1ImeyKlU3Gd4pi13742X2kpH4Hu+2jmzOabiPxF+S//5b/wB3/wBzz1qU/t7z300ENMp1MAvvZrv5ZHPOIRADz5yU+mrmvOPfdcAK699lo+/elPf8k5XvnKV3LNNdfwn/7TfyKEwMbGBr/+67/O/fff37c5efIkn/rUp4gx8n3f93383M/9HP/yX/5Lfu7nfo5XvepVX3T8t7/97X/qdYuIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIyJdPcbYNY4yYWX8dQsDMcHcA3H3L846ZLY5ADEZZgjvkvEkIgR07dlAUBSkl5vOapmlwdzY2Nqjrhs3NTQDqumb/Ofvg+DFyzuzavYvhYAhmpJTIOVMURR9nF19RFIQQSCn1MXZxd0cXfzdOCAF3p65r6rrG3SmKgrIsKcqa2WxGMW7bTKdTZrMZ8/mclZUVNjY2mM/njMZjPNiWHLDITzdnzrnP2ak8WT9/zrlvu/y8iAU5Z3LOpJS25PrMuT+1TwC+iKEbP4TQP+vubY+rk1LCciaUxRnnWx6nW18IgZwzdV0DUBQF9Gu15aDIizx5MnDHFuPmnPFgGKf2NpiRl0JY3k+AqqooioKiOBVrt7bl/c85n3ENXbvlferWBoYZOE72xbEYJ8YIQNM0xBjbebbFmVMi5zbWEALZM55PxVbVFXVds7GxwUMPPURT17gniiJSlgVlEQkG2Z2mriEGmqYh59zP2TQNJ06coCxLmqYBYD6fU9c1ZkZd1/19M2M0GjEcDgkh9PXeNA1N0zAcDjnvvPPYuXMn6+vrPPTQQ33tF0WxJe/LeV6um65NV99dLlNKWLH13TjTfiyPvb2NYeCw/b3eHk9Xl13dL38vSM2pd3Bp2oARQ1uPjuM54yzeSwzDcW+/a077retqu323fFEvYUtNdblo67l9B4sy4F6ftmaR/1vcne/6ru/iJ3/yJ8/4fDQa9ecxxtOuu2/IF/PsZz+bX/u1X+O+++7jggsu6N/P3/3d390yXucVr3gFl19+Od/5nd/JXXfdxfOf//w/7bJEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREROQvUDjrhiEQQqQoSkKIuENKmZwddzALS4cBhlkADAB3xywQY4E71HUNwOrqKnv27GHnzl2srKwwHA4xM9ydsizZsWMnq6trFEVJVdVUdcPG5ibrJ06wMZ2S3GmaxIkTJwkh0qTE5uaUjY1N6roBjGCRaJGyKIkxknMmpUTOGXcnpcR0OmVjYwN3ZzweMxqNMDNijKyurhJC4KGHHuLE+jpFEQkhcPz4MdbX1xkOh+zcuYMYIydPnmQ2m5E9YQbZM03TkHMmxtDnwt235Le75+7knMk5A2Bm/dHuQWAwGBBjxN1pmqYfP4RAWZaEEPo+Z+KLdXdtuhyklLbEE0IgxtgfXdvl/C1bjrV73o3b5bo/si/VVYBFrgBijIQYIRiEAGawNPZiMoqyoCzLPrYu7m7e2WzGbDZjPp9TVdWW9YUQ+pi63C7na3kflmPvzqGN38Kp/Ln7llwt9z/TkVLu97Cu6n4PY4wYbQ5XVlbYtWsXk8mEoiz7mizKYjGH49COUdd9DGZG0zTMZjOapiGEQNM0VFXFcDhkNBr19dLVU7f+nE/VrJkxHA4ZDodMJhN27NjBysoKg8GAwWDQ5zGYEZb2yBY5XK5tW+S9v7dU4929lFJf011OO11cdV2fVqspb60z+i/P1vm7+12Mtq1dUQSGZUkMgZwSTT0HnLKIWDDMHDMIdO/Pqbm6stj63ctA+y4VRez7L78r7TczEkIkBMPC1m+DyJfTjh07OH78eH/9/Oc/n1/6pV/iT/7kT4D2PfvIRz7yZZ3zpS99KW984xt5znOew+c+9zlWV1f5a3/tr/HmN7+5b3Po0CE+//nPA7B7927+1t/6W3zLt3wL3/u930uM8csaz5nce++9XHbZZf/X5xERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+asonG3DnMEsEELELJCzk1ImpYw7hBD7Z2btORhmAQi4W3+klKnrRM6ZoigYjUaMxyPKsmQwGLRHOWDHjp2ce+55nH/+hezdu4+VyYSVySpNdu49dB9//Om7uOfz97J+4iQpO1igqhrW10/w0ENHOXr0GBsbmzRVjWcnhEAIATPr19U0DRsbGzz00EMcOXKEI0eOMJ1OcXfMjMFgQFmWbG5ucs8993D/4fsZDgesra2ysXmS+XzGuefu56KLLmI4KokxEAIYgDnuiaapaJqanDPuDoCZ9bFsj8vd+6NruxxzXbdjmRlFUfRHN0aMkRhjf92NlXNuD8/t5odAjHGxv+2zbr5l3fzLMaeUSCnRNE3ft5uji3t77MtrzZ639HN38tK62//Yci8vryFncvbTx1i67nK5/br7TSmdFm/OuV/bco66dZ9aT7uWoij6fC8fXbvtuehjcAd8cc+X9iRSFAWDwYDxeMza2hqPfOQjueqqK/mar3ksu3fvbmtysd8ARRH7OMuypCzLPgZ3p67r/r0qigKA48ePc/z48b5tl4fBYEAIgc3NTTY3Nwkh9GOWZUlRFH1OT9Vq7vc1hkBfPYt12uI8hEAwI5jBYr8M2liX6n55j7fvTV3XNE3Tv5/dGnPO/XzBjLgUTzDrx+/mZakOTvXPmDkxGEYiNRVNPcdzwswxa/csmBOM9npxD9o85Ox9TpqmoaoqqqqiSQ2OY8GwQPuNaD8SbZ9MH4989bjkkku48847AfjMZz7DE5/4RK655hp+4Rd+4f/anC996Uv5j//xP3LNNdfw9re/nWc+85n80A/9EJdffjlPeMITuOKKK3j3u9/9sP2PHDnCVVddxTXXXMOnP/3ps573hhtu4J//83/Oc5/7XD75yU/yrne9i7vuuosrr7ySq666ihe84AU8+OCDfftXvOIVHDlyhFe84hWnjfWmN72J2WzWX19zzTW87nWvO+tYzuTee+/tv4+HDh3imc985p9rvLN18803c9999/2FzPXltH0Plv1Z83fnnXeeVntmxrFjx/4sIfbe+ta38k//6T/9c43xxXzDN3wDn/rUp/6vjf9n8eWqqzPtybJbbrmFN73pTdx2223ceOONABw8eBAz43u+53v6didPnjzt35ZncuzYMd785jf/ueP+01jev+uuu45bb731S/b5Yu3Odowbb7yR2267jTe96U3ccsstZ2zzX/7Lf+Hxj388Bw4c4GMf+9iXHPPhnCmvZxvndrfccguf/OQnH/b57/7u7/Z/R/zqr/7qWb8fy38fbnfDDTc8bI5EREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREROQvj+JsG7o7AGbW3zMzzIwYIyGE/ro738rI2WmahDuUZUFKsR+3LEtijIxGI4xIEUvKcshksgpubM5LrIC1HaucPLnBkQeOcOLESYbDAefs3c/qjrUtceScqauKel6RBkMGZYnjuDtmRlG0S08pAfR9Z7MZJ0+eJMbYxxRCoCxLBoMBZsZwVDKZrLB3727qlVXGowGj4Yg9e3cyHIxZXZtQlAXZMhCw4JAh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AP/oH/0jHv/4x3PgwAEOHDjA3XffDcAdd9zBc57zHJ785CdzzTXX8J73vGdLDn70R3+UJz3pSTz2sY/lAx/4wMPuwZ+lnpYdPnyYN77xjXzoQx/iwIEDW/L3r/7Vvzpj309/+tN84zd+I9deey1XX301b3nLW864N29605t47WtfC3zx9+Vv/I2/wXvf+96+32233cY111zzRfcQ4JJLLun37t577+WGG27gqquu4uqrr+Yf/IN/APBF9+aLueuuu/j6r/96rr76ag4cOMCtt966Ja/Hjh3rr/ft28fBgwfPWFdvetOb+NZv/Vae85zncNlll/FN3/RNPPjgg6flB+Atb3kLN9544xfdk854PGZ1dZXBYMDOnTv7+2VZ8oY3vIE3vOENZ1zXw303brrpJk6cOMGBAwd48pOffFq/L/YtfNzjHsdHPvKRvu0tt9zCt3zLtwDwL/7Fv+Daa6/lwIEDXHvttfzO7/xO3255/5b9+3//73nqU5/KNddcwxOe8AT+63/9r1ue//qv/zrXXnstj33sY/mBH/iBLf8G6nyxfd+5cyeDwYDV1VXG4/FpfV/96ldz++2388M//MM8/elPB+BXf/VXeeITn8jVV1/Ns5/97P7vittuu40rrriC7/me7+HAgQP85//8n7eM9XB5/c3f/M0zfrMebu1vf/vb+chHPsLf/bt/lwMHDvTfhM6Z/o5Yzu99993H3/7bf5unPOUpXHXVVfzIj/zIaesG+OQnP8nTn/50rrjiCr75m7+Z9fX1M7YTEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZG/XIqzbhjbpg6YQQgRAywEzIycM0B7z6xvizu4dU8IMVKEgrIsGAyGxMIYj0aEEDCbAIZ7XHQOmEU8Gys+ZlANGK2sEIByMGBQlrg71Wzejp8Sw+GQlfEKOSdIGbOwGBsIYG64OymlPuaiKBgtYsg50zQN7n5qHe64O7GIFEVJSAEzZz6fQZMZjYbYypjhcAC0/ep6TuOZ0krcwD2R3XDP4IFg7ZghhDZv1sYF9Pe6+10MnXKxbnfvY12WUtpyLyz2KISwWOOptXVzdMfyXMsxufupPV66v71P1ybG2I/ZrSfn3N4LbZ/smZRS28YMFuup6xrPTuhjsi1zhRAIMRKLYkts3Z51510sy+uMMfbnfTyL9Syva3seunlzzuSciSGAhTbGEAjWPu/WzWKsfrxttdQe7fpTypjlxd61+zmIAyaTCY95zGN48MEHWT9+jJWVMfv27WU4HJBSoiwig0HJvE5bYu7WtbKyQlmWrK2tLWqy7teyurp6qsbd2bt3LyklptMpKSV2797Nnj17WF1dBWA8HvPAAw+wvr7Ozp07GY/HlGVJXdcEM0IwggUsAO54dhYvcfsOmuHZcRb71D7BlvO8lOvluuzytVzDXU25++Ibs3XfcvZF2SzGM8dCbOPAiN0Y/f6AL/4DxwLEEIE27pQc9wR428W6tvQ10QrgYOaL+CMhdO9btw5O07XNyfAcT28gf6V953d+J5/97Gc5duwYN99882nPd+3axX/9r/+V1dVVUkr8rb/1t/iP//E/8sIXvhCAO+64gzvvvJNHPepR/NAP/RA/9VM/xdve9jZe85rX8KM/+qO8+MUvBuDnfu7neNWrXnVWMQ2HQ37v936PT37yk1x77bW89KUv5Yd+6If45Cc/yYEDB3jta19LVVW84AUv4LrrruOjH/0oDz30ENdddx2XXXYZKSWOHz/OFVdcwU/91E8BcOutt3L33XfzoQ99iPX1dS655BKOHj3K7bffzqFDh7j00kt52ctexsc//nGOHDnC/v37AXj3u9/Na17zGj74wQ/y1re+lbe97W3cfvvt7Nq167S4/+E//IfM53M++tGPMp1OecYznsFll13Gt3/7twPwmc98hg996EPUdc3ll1/O7/zO7/C1X/u1D5uHD37wgxw7doxPfOITADz00EMP2/bhxv47f+fvcOmll/K+972Pw4cP86QnPYknPOEJvPGNb+Tf/tt/yy//8i9z4MCBhx3XzPj93/99PvvZz/LkJz+Zr/u6r+OSSy4B2r9r77jjDgBe+cpX8sxnPpOf//mfx915xStewc/8zM/w8pe/nH/2z/4ZX/jCFxiPx2xubhJC4NixY7zyla/kAx/4AOeffz4PPPAAT3ziE3n6058OwPHjx7n66qv5sR/7MT74wQ/ymte8hm/4hm/4kntwJmeqp6I49U/Qc845hx//8R/n1ltv5dZbb/2Sfc2MF73oRfzSL/0Sl112GZubmzztaU/jqU99Ktdee+0XjeXh3pfv/u7v5pZbbuGGG24A4Bd+4Rd42cteBvCwe/i0pz1ty9jf8R3fwXOf+1ze+973AnDkyBEAfuAHfuCMe/P3/t7f+6KxvuQlL+FlL3sZ3/u938unP/1pnva0p3HNNdfwyEc+8mH7nKmubr31Vm6//XY++tGPct555/F93/d9vOENb+Df/Jt/87DjfLE96XTvFdDXTeemm27i5ptv5rd+67d4whOe0N/vvhs///M/z/XXX89v/uZv8q3f+q3cddddvPWtb+XAgQPceeedZ5zvi30Lb7zxRm655Rae/OQnA+3+vf71rwfgpS99Ka973esA+N3f/V1uvPFGPvnJTz7s2gGuv/56XvSiF2FmHDx4kKc97WncfffdDIdDAD7xiU/w27/929R1zbOe9Sz+w3/4D/23tvPF9v1nfuZnzpi3zr/8l/+Sj370o7z2ta/lm7/5mzl8+DAvfvGLue2227jqqqt417vexQ033MDHP/5xAP7oj/6If/Wv/hXveMc7Thvr4fL6cN+sh1v7y1/+cn7pl36pj2m77X9HbPdd3/Vd/PAP/zDPfvazaZqG5z3vebznPe/h277t27a0e+lLX8pNN93E93zP9/Cxj32MJz/5yaflVkRERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/vIpzrZhCAUpJzw7ZmAWCCEAkHPGCGBg7R/gYDi+uMg5A1AWBRYgJWc4HDAcDgjRqKoKM6OuG9wzZTEghEjbzSmKkt0ru8iW2djYIDUJxmNiiJgFyqKgShkzI8ZICAELjplhRj8/Du7t/S7+EAJmhrvTNDVgmC0WgVGWBe5O8kzTNGRPpNQwn8+IQAgjQoC6qQjBMHOcjHsmk/Hcrj/Szk3OEMOW/Lp7+4xTsbaxnzr654u2y8eyru2ZxlueL+fc31sev8vP9j45Z1JKYIbF03PXHU3TMBgMtsSzZazF3PhijUBOba6apiHnNmeY4Ut9bGk863K59Nvt53I+cs59XA+3/uX7yzF3a1vOf0qJpmlIIVCG2MaeM3kxRCwKYghkd1Jq6Gtp2zyG4d7FkUhmGEZe1IpHJ8TAcDhg79697N61k+FwwGg8xHOmaSowI3tbo906u1iHw8GibmE0GtE0DeDMZlPW19eJMTIajajrmpQSo9GIc845h9XVVUIIFEWxyA/s2LGDq666kksvvZSmaSiKSIxFn/MQAv8/+3Ueb1dV3///tdba+5xzxwwkJCQYkoAECIEEwqSAYAOIUhSKFQU0WKhWWqFqpQ5Va6tfq9XWqg8nqpSpRRwCVpSvKHwFgTCUMBMIJEACIdPNTe5wztl7rfX7Y5+zc24GCHb6tb6fPPbjnLP3Gj7rsz5r3xDyDGshYqFd4+08GjARYqt+jDEYW5zLGCKBiLWG0MplO0+d+9rew/Z85X4Ej/cei8FaV8wTY/HmKUqoNZ6BVl0ZinmLl0ERV7SRPORgA8Z0ns1AEUb7PIXWWyG21hoIMRb7UK47Ymwxt7XFHsW8eK8V703XmqN4V1hrcc6SJCmZzzC7/1qW3xIhBC699FJuv/12YoysW7eOgw8+mLPPPhuAY445hlmzZpXfv/KVrwBw0kkncckll3D//fczceJE7r77br73ve/t1pznnHMOAAcccABJkrB27Vr23nvvMW2WL1+OtZYrrriivHfooYfyta99jb333pv999+fc889d0yfs846C+ccEyZMYPbs2Zx22mkYY5g+fTqTJ09m1apVzJ8/n5///Od85StfYevWrYQQ2LRp027FffPNN/PFL34Ray09PT28853v5Oc//zlve9vbAHjb295GkiQkScL8+fN56qmnOOaYY3Y53qGHHspjjz3G+973Pl73utfxxje+cZdtdzX2zTffzH333QfAnnvuyZlnnsnNN9/M0UcfvVtruuCCCwCYPXs2xx9/PL/61a+YOXMmAO9+97vLdkuWLOHOO+/kS1/6EgCjo6M45+jv7+fVr3415557LieffDJvetOb2HvvvfnlL3/J008/zamnnjpmvuXLlzN79mxqtRpnnnkmUNTVU089tVvx7szu1NMr6btlyxYeeeSR8gwAbN26lUcffZQjjjjiJcfb1Xk544wzeP/7388LL7xAX18f//qv/1rmcnf2cGhoiNtvv52bbrqpvDd58mRg13vzUrZu3cq//du/8etf/xqAV7/61Rx77LHcdttt7LPPPi+TtR296U1vYurUqQD84R/+Ybm3/1nSNOWv/uqvuPTSS/nZz35W3m+/N0455RQAjj32WKZMmcKyZctetiZe6l34zne+kwULFvDFL36RNWvW8MQTT5S1ff/99/OZz3yGjRs3kiQJy5cvZ3R0lK6url3OtXLlSs455xxWr15NkiRs2rSJ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AVdccQUAjzzyCLfffvsrnk9ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERP7r2d1taEz7WyCEQAg5eZ6T502yLCPG0Hoed/iMMRKCJ/dNvM8JwRNjaN0PxAgxwMhwHbCkaQpAljXwISPEjBBzgs+JwRNDDgQInug9Pi9iSdMUay0h5HifEQm4xOCcxRgDBiLtOSPWGpxzOOcwxhBjBCLGmPKZdQbrir5FHtqJKBNSJMcYjLXl8/bqQ4iEEPE+kOce79v5C3jv8d635i3GbsdjrW31D2Pa2I45ALz35HmO974cN0kSnHPlmNZakiQp70fGMsaU62/vSXu89mfnWEWOww592+tpP4sxtmpk29V+FvIcn+Xkzax1NQlZTmiN0ZnrXX12jut9kQMffLmOdh6NMa21tC+P95GsmZUxheB3iL/dd2xOivFNa89DDOTBg4GkkpJUUkKMNPMG9WaDen2Een2ERn2UZqNB7vOyZBJrIMQxteC9L+ucGIgEoglF3RLwIeBj8buYH2KIVCtVjLEYoFarEWNkeHgrwefkWY5zlka9zuDmzcQYqdVqgCFrZsQQSdO0aNNoUK+PErzHWkicJbRicdbgrMEQicFjDFQqKWklJZpAHnICkSRNqVar1KpVarUaXV1d5HlOV1cXAPXGKEmSgDU08yZpJaFSrZT7FWOkXq8zODjIyMgIxhgajQZZluFs8X4wxpTnIk1T0jTBmOLcxdY7JwLGGmziSJKkuN86mzFGQuskRAMRAxgirVoOlPWSh4D3Rb6JtOqlfWYdtnVmt53HjDzPxpzbdg0V9cSYd1ClklKppCRpMuZsi7RdfPHFLF26lLlz53LeeeexaNGiXbYdN24cABMnTsQ5R3d3NwCzZs3ioYce4oYbbuALX/gC8+fP57LLLgPghz/8IUNDQxx22GEcf/zx5ViXX345ixYtYuvWrSxatIjXvOY1bN68mX/8x3/kwAMP5LTTTuOqq67ik5/8JIcccgiXXHIJ3//+9+nt7S3HmDlzJp/4xCc45phjuOuuu/je975XPnvxxRd5z3vew/z58zniiCOo1+sAzJs3j9HRUaZNm0ZfXx/XXnstzWaT7373uxxzzDFYazn66KOZP38+69atY8OGDXzta19j4cKF/PSnP2X16tXMmzePo446ikmTJvH7v//7TJ48ebdyPW7cuPId09XVxUMPPcRnPvMZbrnlFhYsWMB5553HOeecw/LlywG46aabOPbYY7nvvvv4sz/7M2655RYA1q9fz8c+9jHe97738dBDD/GVr3yF/fbbjxNPPJH3vve9nHLKKXzyk59kcHCQk046idmzZ7Ns2TIA7rnnHl7/+tezcOFCAB566CEWLFjAcccdR19fH1dccUX5Pk3TlPe+97309vZy+OGH87Of/Yw99tiDWq3Ga1/7Wm666SZOOeUU9t9/f7q6uthnn33IsowTTjiBWbNm8aY3vYkzzjiDarXKrFmzeMtb3sLChQs5+eSTy7+Fa9eu5dRTTwVg7ty5/PEf/zEf+MAHOOmkk7jgggvIsmynufyzP/szDj74YAA+/OEP02w2ARgaGuIjH/kIixYtYtasWbz73e/m7rvv5ktf+hJ33nknkydP5r3vfW85zoknnljWSJ4Xf0OTJGHLli185jOfobu7m0mTJnHeeedx2mmncfjhh5dxlv/mCIH3ve99/Pmf/zm/+tWv+OAHP8gJJ5xQzvHJT36S/fbbj4suuoiNGzfy61//mpNPPhmAyZMn8w//8A9Ya5k3bx4nnngiH/vYxzjqqKN2WPOVV17Jvffey9y5c5k/fz5f/epXAfi7v/s7urq6mD9/Pocccgi/8zu/w6pVqwB49NFH2WOPPXaaw6uvvpprr72WQw89lLPOOovLLruMGTNmlGNefPHFHHbYYdx///1jxnj/+9/PhRdeyPz588u6Ou6443jHO97BAQccwDPPPMNnP/tZAM4880ymTZtWnukFCxaU4/zO7/wOjUaDQw45ZMyevBKnnHIKs2fPLn9XKhV++MMf7vS9MXHiRN75zndyyCGHlPXf6eXehW9+85u55557mDJlCgceeCAA/f39/PVf/zVHHnkkhx9+OJVKZbfi/vKXv8xZZ53FggULuP/++8u8tx144IG89rWvZd68eRx33HGcffbZO4zxUvv+Sk2ePJmrr766zM/Xv/51rrvuut36d8PL5XV7L7X2P/zDP+Szn/0s8+fP58Ybb3xFa7j66qtZsWIFBx98MPPmzePMM89k48aNO7S74oor+Na3vsXBBx/Mxz/+8TF/l2644QYuuOCCVzSviIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiI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G264gfe///309/dz0EEH7bTN9ddfzwMPPMBRRx1V3tu0aROjo6MAHHPMMcyYMQOAhQsXkmUZU6ZMAeCII47gySeffNk43vGOdwAwadIkZs+ezcqVK5k+fTr3338/n/nMZ9i4cSNJkrB8+XJGR0fp6uoC4G1vexsA++23H7VajbPOOquMY9OmTWzevJk77riDp59+mlNPPXXMnMuXL2f69Ok7jefTn/70y8a8vVtuuYX58+cDcNhhh/HFL36R733ve6xYsYLjjz++bGet5dlnny3jbuf1mGOO4W//9m/LdrVajTPPPLN89tRTTwG85Hp2x2te8xrmzJnzsmPNnj2bWq3GW97yFqDIaW9vLyeeeCIARx55JFdffTVQvLcuvfRSbr/9dmKMrFu3joMPPpizzz4bgDlz5rBs2bIxc9x8880sXryYarUKwIUXXsjXvvY1Lr30UgDe/OY3U6vVAJg3bx6nnHIKaZqSpikHHXQQTz75JHPnzn3ZGlm8eHH5fn6pOH/xi19w7rnnkqYpAO9617u47LLLAPjFL37BW9/6Vvr6+gD4gz/4A2655Zbdyvd/hNtvv/2/bC4RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERGR/yzJ7jaMMZaXMQZrbfndGPOy/bzPCdFjTNGvXq/z/PPP8+STK9g8MIi1liRJGBkZIUkdWdagq6tKV1cXta5qORZAe7oYTet3EUOWZTjnSJIEsPiQEYLHWoO1BjDEYIhEoBgrhIAxjFlbe47WdBR3bKtH0aYdS/uzLc/z8ns7T535Mcbu0L/zKuIp+rVz3L7f7tP+3nntOM+2PWo/a18+9wTCDjF02tm+ds7LTra8c13e+zHr71xHnuf4fFvt7KyNtRbnXLkn2+c7xtixj2ODaf9qNputcRKstXifEYLBe1/ElxisA2MiMQbAE6MnRAghYowtxrMGawymNVuMkRgCIXhiMCRJSpqmWGtpNg1Z5smbHp95ksThfST4AGzbC2siIRb10l5rZw6992UtdO5F+3sIgdGREUa2DjM4sIWh4RHG9fXhEsfmzRupddV41fTpJJWEvu4+Qh7xzYwYYaQ+wuo1L7B1cJBxE/rpqlUZGtnK8NYhuvt6mTF9b9JqlZB7qtUKzlpy78l9gBhx1mKdJRIJwZNnnmiLfXO2iDFJipxXXEoIgUajwYYNG3CVhEotpdEYJa1V6OnroV6vk4UmvT09GBMZHR0lxgbVShfOuXIfi72PxFisP4SItcVcxlhCYMw5aNdSu24773d+jzG2Dnv7xQIxxI5a63z3GIw1OOvK/j4EfJ4TDbRKZoezHUIAwDmHtUWj9r4XtenJvSfLcrLM73i4RH4Dp59+OqeffjonnHDCLtvEGHnXu97FZz/72Z0+r9Vq5Xfn3A6/O//m7crO+jSbTc4880xuueUWjjjiCLZs2cK4ceNoNBp0dXW95Nzt92Ce58QYmTt3LnfcccfLxvHvceKJJ7JkyZIx92KMnHTSSVxzzTU7tF+zZs1L5qparZbvIecc3vtyzF2tJ8bIV77yFZrNJpVKZadx9vb2jmm/q7FWrVpFtVodE9+u4v3Sl77EunXrWLp0KbVajQ984APU6/Wdzr8r2/97YnfqandqpHO9ryTOl/p360s9+5/qU5/61H93CCIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIvK/nH0ljWOM5XdjDNba8upkjBnTJ8ZIpVqhu7ubSqWCtQ7vA94H0jRlypQp7LPPPowbN47Zs2ez55578uKL67nnnvt4+OGHeXHtejZv3kyMxXghRLyPtMNpxwJgrcU5R5KkJC7FWYdzCc65MfGEEMhzT5ZlZFlOCLFjBdvGHrteg3MOa+2YNXby3uO9J4TQmouOuMOY8Tqvzny127XX1X7ebpvneTnH9nlu71GSJKRpSqVSIUmSMXO096yzT7tf55yd+9vu346vfS+EQAhhp+vpHHNn/bcfv/Nz+zXtcOFb+xSJMRBjIAS/7XssaitJir3ffn7vc4yh+B5yfPCE6IlEQsjJfY4PeXEvBiCCAWNiMS+eyLY8ZFnG6Ogo3ntq1RpdXV0kSUrWzMmyjOADYFq1mRTrNpC2fifOlbXVChQ68lfujTEYoNFosGnTJp584klu+9WvuP3/3cbNP7+Zn9/0f/l/t/6Kf7v333j22dVkjQxjHPXhOs1mDj6yYf1GHn34YW655RZ++IMf8P3vf5+f/uRGfvnLX3L/vffxwgsv4JtNnLVUkhRrLKZYPs5a0iShWqlQSyukSYq1pthrY8r9MK04h4eHWbNmDQ888CB33HEHN/7kp/z4hp/w85//krvuWsqzz64u89FsNhkdHcVaR093H8YYnnvuOe68805uvvlmli5dyurVq2k2MtKkQppWAEOM4H0Ycy68L852s9mk0WjQbDbLWm0/7zynBsp3Uui4YoiEHc7ItvrMW+PEGIkhEsO2uo8x7vg+CJEik2PfFSEUdZnlTfK8udN3i8h/hP7+fgYHB8vfp59+OldddRXPPvssULwT77333v/0OOr1Os1mkxkzZgDwla985Tca5zWveQ0rV67k5ptvLu8tW7aMZvM//xydcsop3HzzzTz44IPlvbvvvvvfNeZLref1r389s2bN4v3vfz/1eh2APM/51re+xdDQ0Csa65UYGBhg6tSp1Go11q5dy3XXXfeyfRYtWsQVV1xBs9kkz3Muu+wyTj755Fc07yutkZeK8/Wvfz3XXHNN6998GVdcccWYZz/4wQ8YGhoixsh3vvOdl43tIx/5CF/96ldf0XpERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/jdLftOOMcbdbhNjJAbwIdJs5tTrDer1BjFGxo8bz9Sp05g5cxbd3d0kiWXjpg08/vjjvPjiC2zcuJE999yT8RP2xhiDMQai2fYdsNYV97AYAyH4MgbnHMYajHEYA8YaLIYQAiF4YowYG7E2wRgLBNpLKz6LH+25ksQRo8F7TwihnKcdT5JUynvW2vK+98VYIYRyrPYza215lfmKsRy//WmtxVhL9MWzdvvOXLTHd87hnAMYE6sxhqTVb/t9tNbinCOEgPd+THzttsU4sWzXmQPnXNmmM572Z3suYwxpmmLKfRibR2vtmHFijOVnkcWIMbTahTJf2waJGCBN0441bnueJAnWGrARCB35pVUDbUUtFM/H5iyEiDHF/oYQyLKMrJlRSSvY1DI4uIW1a9cysGEj1hqqlYT+/n7Gjeujp6eHtOIwxlCtVstctQbHAtY5Ysf+lrkDYgiMDg+zft06XnhhLXnmmTh+Aj7k5HlOX08fo8OjPPfMc+w5aTKNWoMQApVKheHhUZ579lnWr1sHAWKA0eERurqqjAwP89yzzzJ92jQmjB9PX18fsbVvppW3sh5aObcGEuuIGKLPi/2MkYSEZpaxZs0aHn30MZY//gQ+ZKzfuJFoYPLkSax69hmef+FFXnfCcey3zyzy3JNlOcZYNm/ezNNPP83SpXezYsXTDA0N0d1dY8aMGRx66CHMOWB/Jk4cT5qmxBjxPsf7ItZ2/XTWffsstvPZaczZCa13S9x2WWuJxFadGUKE0DG+MRabOGJszWVcWZMxGAJAtBggBFrvqKK/t5FKxRZjWEsIOT7kiPxnOe+881i8eDFLlizhoosu4oILLuDzn/88Z5xxBnme02w2edOb3sTChQv/U+Po7+/nr//6rznyyCOZNGkSZ5999m80zoQJE/jJT37Chz70IT74wQ+SZRkzZsxgyZIlu+zziU98gmnTpvHe9773N4y+sN9++3HNNdfwnve8h5GREZrNJgsWLOCaa675jcd8qfUYY/jJT37Cxz72MebOnUtXVxchBN70pjdRq9Ve0VivxMUXX8xZZ53F3LlzmTZtGosWLXrZPn/4h3/IU089xWGHHQbACSecwCWXXPKK5n2lNfJScb7nPe/hoYce4qCDDmLChAksXLiQ559/HoDTTjuNpUuXMn/+fMaPH8/rXvc6xo8f/5JzPfDAAxx++OGvaD0iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi/5uZGGPcnYaX/8NnsNZirS3vxRgxxpQXUH7GGMur/bt4bgkhsn79Bp56aiVbBrcybdp09t13X/r6+mg0GjQao2weHOCpp55iw4Z1vOpV0zn00EPp6+8pxokWY9qXw2AxxuC9J4SADzkQsNbinMFawFjoaO+9J89zvPdYZ0lTh7WWEDwxhla87QvAYIwlSSqEEIp5vC9z0F57+/v2v9tzbcuDKfNZxFnM385ZO88xRkIIGGNwzuGcI/PFvc6xOtuGEEiShDRNCSGQZRl5ngNgrSV1CWa79u1nSZKUa2vH6JzDGEMIgTzPCcFTrVXw3uO9L/sC5XjOOYByTzprASBNqsQYy7y019ieb2zNbMtpe1+MjaRpUq4BIu3hjXGteojEEDvW50jTFGstxkAwOZhQ7mF7nW2d+9UZe7tNCAYfoFqtYTDkPiexCVu3bmXZsmXcd999DKwfoKu7yh4TJzBt2lRmzNibvfbai3Hj+0jTlCStEqMZk6fO2mnH1M6fMYY8z1m7di3LH1/Opg0DzHzVLA6YMwdjDFmWAfDggw/y4osvcvjhC5g5czbOFWtfuXIld999N81mkwMOOIBp06ZhTAATuP/++3n88ceZMWMGhx12GFOnTqW3t7fc323rDtviJYAzhASyLCcGsMZSdTWazSaPPvQId999N5s2bmbOnDnUsybVrgp7v+pVLHtwGWvXvcgb3/gGDthvX2q1GpVKjSzLeGbVc9x//zLWrdtAT09x7rds2YL3GdOm7cVBBx3EPjNnUKtVyPMMMDiXlHHGGMfUcOe7a2evvHZekyQpv7fruN0vz/NyXzrPv3OOSlqB6Muz267L7c9yu3+e52RZhjGGWq1GmqbEGHnhhedZtuwBvvJPP9whRhER+c1t3bqVvr4+sizjnHPO4fDDD+fSSy8d8yzGyAc/+EFGR0f5+te/vtNxvPccffTRLF26dMy/iUVERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+myW729A5B0CMEWNMeT+EUN631pIkCcYYjDHls3b/GCN57mk0Mur1BlkzK8dzzmGtpVqt4n2Gc448zwHo7+8HoFqtMjw8jAGstWzdOkS9Xidr5oyOjtLb20tfXx9pJSVJEqrVCiHkNJt1jLFYV6HRqFOv18nzHGMM1WqFiqkwPDTKaH2YarVKrVbFWtOKK8F7TwiBSsWRZRnWWpxzOOfw3uO9J8ZICAFrLSEEQggYY8bko31Za8vvO9POm7W2vFfkLsd7j00qZbt23juvGCMxRprNZvl9zFghEDvma/cJIdBsNsv1ee/LPUiSpIw7RvDekyQJaZqW+emMs73f7XXG2Dkj5bjtHLW/b9++Hf/2/dvPvM9aayjq03sPhPK3dQbn0nJ9WdZs3YdKrQKGcr+892UtttfbXsP2cbTHD97TVa2xadMAw8Mj9Pb08cyq53jw/gdZv3Y906ZO59Wv3peZs17F5s2beO6ZZ7DA+P5ems0mSVrBWlfmqx1HZy2EEKjVagBkWcbo6CirV69m46ZNzJ41i4PmHEhXrZuuri6MMWRZxsyZM9m6dSsrVjzNxAl70j+ul5GREV588UVqtRr7778/c+bMoVar4Jyl3hhln332IYTA888/zwsvvEBvby/OOWq1WivXfoc98e0z7hzWOayzWCzDQ8MMDg6ycuUqiJbjjnsdBx98EN19vbi0qNN6s87QyDCPPfYYe0+dQk9PDwMDA8RgWLlyFZs2beLYY49l4sSJZZ2tX7+Oxx57lOXLl1OrVdlr2hSSxOF9oNFoUK1Wy3pq12Lne6kzr+01tXOcpimNRqPc43b77c9Y+17nWW5mTRJnscaUY3bWcPv91t6fdlxpWtRmvV7Hh4xKNSX3jR1qXURE/n0WLVpEo9GgXq9z7LHH8v73v7989s53vpNVq1ZRr9eZO3cu3/jGN3Y5jnOOe+65578iZBEREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZH/MZJX2sEYM+azLcYIQAihfBZjJMaIMQbvPTGCMY4kAWcdxpjyuXMO5xzNZhPvI91dPUycOJEsaxICjIyMUB/txeAAy8DAAE8/vYrnnnuOgU2bGRgYYNy4cRx88MHMmjWLaq1KpZJQrVZI0wrWWpqZZ8OG9Tz//AuEEJg4cQL9/f2Mjo6ycuVKVq9ZTU9PF3PmzGHmzJlUKgnNZpNKpUKapjQaTax1hBCIIRKBGEOZD2stlUqFEAJ5nhNCaK077pCrzvzFGHfable5bzabhLBt3u33onPcEEJ5tVmXlP0697P9PYRAlmXEGLHWjpk/SRKstWR5Y0z7dn9rLc65cr72mnYWo8GMabOz+Dvn3hYrGAvwUvmK5HmOtY7E2TK2dlzBB5pZE2u37V1Rr5T71553V9vinMVgqddHijGM4cknn+Suu+5mcPNWDjxgLocecggTJ44nTR3r1q1jYNMgfX0bCGFfJk+ezMDgVqLJcW7beehcc6VSodFoUK/XybKMer3Oli1baDQa9Pf3MXnyJKq1CkliaTbrNBoZSZLQ3d1NmlQZ2jrExo0b6erqotlsUq/X6erqYvKee9DT00UIniS1TO6fRE9PN/39/WzYsIFnn32WCRMmsNdee2GtxXtfxteuqyLWCBhC8GRZRuJS0moXzWadtS+spT7aYMaMGcyYMYMJE/agntXZvHkLvb297LPPTDZs3MTA5k2sWvUsEydOor9vPE899RRPPPEEQ0NDZFlGd3c3vb19OGex1vL000+zYcM61q/fwJQpU+jq6ybLMprNbEwOrbVlPXauoX3PGEOaptveXbnftj4iBjPmnHTuTft77LjyELFEiKH1rjNj4gDKc945pjEGYw3OOGIMhJC/RF2L/P/Ppz/9aX74wx/ucP8HP/gB++67739DRCI7Wrp06S6f/ehHP/ovjERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETkf59kdxvGGDHGjPkExtxrt2t/dt631gGG4rHHB0+W5eR5wPuI95FGo4m1llqtRr0eyLKMer0BQE9PD9ZaQghs2bKF5cuXs2zZg2xYv5EQoNlsMjAwSJqmhBCYMnUKe+wxHucsIXiSJCX4IqYsyxgcHGTz5s045xgaGuLFF9eyceNGQvDkeU5XVxfTpk0jhEgIkKatcVyKMa6dFMBgDFhrcc5BBIPBEAk+4H0o81C0MTjnsNbuNGftnLav9u9OIYTye+ezEAIhBJIkGTOGtbYcu5ho7N5uP1fn3rXvhxC2tbFFm857MUacc2WfLMt2mGNsPTE2Jsb+7vzeGVtxASYSY+iosdhxteeKGBMxFowpt4vgi6d5luMSR5IUtVm0CYQQ8d639qmdg9YcMbaGL3bZGBgdHSWr5wxs3MiDy5bxxGOPM3XPvThg/wN51d77UK2lVBNHzyE19ps1k57eGrVajU2bNmFcijMWZ1r1YBiT+5B7fJZjjKGSpITEkzczGqN1fJbTbDao10fpm9xHmlZwwyMkSYWeep20mtAYqBNNIKk4tmzYygtr19Lb141LHNFEAp7hkSaDW7YwNDTEho0bSSsVpk2fzuQ992R4ZATn3JiabWcZY3AuBQfGFXkx0ZaxN5oN8jxn/PgJTJ48mVqtRlKtkFZqVCoVJk7ImDBhD9asWcPIyCibNm3C2ZTHHnuM0dFRDjroYGbP2o899tiDLMswRMaPH8+rXrU3w8Nb2bRpE+vXr8dYSJIE5xwhjD1v5bkE8jwva6uzpqy1AFhcWde2s/6wEIv9JhoCELDEVl9jDCF4QvDF2LTr1JYxtM+V9zlgyznBFr8NYCyNxijNrI7I/ySf+MQn+MQnPvHfHYaIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiPw3SXa3YYyRGCPGmJ0+N8aU1/b3rLVY6wgh4r0nzz0xGKx1OGcBCCFgjCWEwNDQEBs3bmTzwCDOOfr6+ujq6sEYQ4yR0dFRNm/eQrORMWnSJKZO3YtqtcaWLVvYunUry5cvJ4TA+HHj8D6QZRlgGB1tUK83GBkZYeXKlWzYsIEkSejv76e/v49Xv/rVeO9pNDI2bdrE3nvvTZqmeO/x3uJcCtgx62vnpv2Z53m55jRNsdYSY8Q5h3MOTMQYcM6Vz0IIhBDKcXalPZ9zboccxxhbcfod9qjIvy3b+mZWzrX9Gtr32rF3rmv7GNrxd97vjGf7uDvjiiHSbtI5RmeN7Sy2bYp6jESIO7YxxlCtVlvrduU4MUaKZVlCq18MYBzEADEWn0WMEA3QjhOIGAxAtGAsxkScdTRjk4GBLQwPjTJ71n4smL+A/fefw5QpU2g0hvFZk+7uHvr6ekgrhhA8zWakWqlgbVKu1Xtf1oQxhjzPCSFQq9WoVqtUKhUajQaTJ09mdHSUaq1GpatKPaszPDLE0PAo3V3dNPIMYwxJtVKM7Yr9r3ZXmTBhPEk1odEYxaYJ1WqVtFal1tXFxoFNeO8ZGByk0WgwbuIEgg/E4EmtBWMw1mIMGAxJ4gg2AIGkklAfbVCv10mTlJ7uXowxjI6OEELgxRdfxFVS0kqFLMvwPrLffvuz556TmDppErWuCpsHtrBhw0a6u3t59atfTa1WY+vWraRpWoxbcUybtjcbNmxk8+YBXlz3It09XYwbN66sn3bunHNFvbdyuv1ZGVMvGCo2BQwYSzSxrJft332xVXtljbauWBQIxow9c51jbH9G2ufeWoMxkOeBPHvp94CIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIjI/5/Y3W0YYxxz7TCQtWMuYwzGmPJ3CIEsy8jznBgjSeJIkoQsy9m4cSPPPfccq1ev5rHHHmPp0qXcd999DA4OMmnSJMaPH8/Q0BDNZpMYI319fey7774cddRRnHDCCRx//PEcc8wxvPa1r2XGjBlkWcbGjRvZsnVra66EJHH09PQwbtx4kqRCs5lTqVTZf//9ef3rX8+b3nQap5xyCq95zWvY/9WvZvz48TjnyvUZU3zP85wQQrm+dm7yPC/js9aSpim1Wo3u7m66u7upVqtUKhWcc2VOdpbjXf3elvt2PGaHXLfbee8JIZSX937M1e7b2aezLUCSJLtsE2MYE1+7X57n5bV9nWwfY/tRZ011xtzu07n+ch7v8T4nRk+MgUgA2vNFjCmuarXaWocp98h7X7Q34JzD4IjR4nMIAWIo9traFHDEYIixdQUD0UC0gMUAlSShWkkxxpLnOZVKhZmzZrLffvsxbtw4bIRapYs0rQKQNZsMbx0izzLGjx83Jn/b5zDLMqy1VKtVjDE0m03yPGfcuHEceOCBLFiwgH32mUFXVxUfc4yD8XuMY9yEcfiYMzi0leGRYZo+p5lnTJg0gcOPOJwFCxcwYY/xRBtJKo60ViUQyYMn8zl5DGwc2MjmoS0klRRXSTCJwziLcRacIRoIBoKJ+BDIfRFvlmX4PCfLc/KsOCvOpXR19ZAkFdKkSpJU8KHYn7322ov99z+Avr4+kiQtazpNEwBGR0ex1tLd3U2apgRf1EaWZQwPDxNjpLe3l66urjHvH+dceX6992UuO2tuzBkJvrxvYsR2HMV22x3OpTVgDcYawGCtwbmxZ7Kzbr33L3FmA3keiMESw7b3jsgrNXPmTABOOOEEVq1aBcAFF1zALbfcAsCSJUu46667/pui2z2XX345b3nLW/5dY6xatYoTTjgB2JaTl9PO2eLFi7n11lv53Oc+x9/+7d/u9pwf/ehHOeCAAzj00ENZuHAhN910U/kshMCf/MmfsO+++7Lffvvx1a9+9ZUsZwdf+9rXmDdvHvPnz+fggw/mH/7hH3bZdmBggHPOOYf999+fuXPn8ud//ufls6VLl3LooYeW/xZas2ZN+aydt93Nn4iIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIj89kr+owaKMWKMwRgDgLWWGON2rQzGOKyJxAijo6OsWbOalStXsWLFCrIsI8bAli2DhBDo7e2mr6+PZjMnSRKcS4kx0t/fTa3Wzd7TX0VPTw89PX1kWcbWrVtpNBp4nxW/t2xh0qQ96OnpwRjDli1bGBgYYOvWrXjv6e/vZ++992batGn09vZiraVWq7HHHntQraVYa6nX61QqlXI9ziU453DOYYwhhFBeMcbyCiFgrQUY89xYsNbgvd+hfzuPnblrj9f+DpFWU6y15QXgnCs2NUnG9O28jDE4zEvuYzv+zrmNMeU8AD5kGGPKtp198zwv+3R+vpJaesn7MRJNwNr4su1jjHgfybIM7/22HDgHxpVr6FyrcwZjbOserTUAZd6Kz4ghz3NGhkfYvHmADRvWs2bNGtav30TeDEyaNAl8oFJ1OGcYP6GX6dOm0NVVJRJoNhrEYIrhWmenXVftvHWeqTzPCSGQJAldXV1AJMsajDbqrTpwDA1t4ZlnnuGxR5ezfuM69tprOlP2mkqtVsG6Kn3je6hWU+r1EXzMcc4wuHUzWeZ55plnuOPOO3HOsWDBAl69//6Mjo6SpumYMxCBECMxBnzmMYnBOkez2SBNE2qVLoYGh9iyZQsxQm9vL+vWraNerzM0MsLg1i2EEJgybS8mT5lECDkVW5yToaFhjDH09PSSpilpmtLT08Po6GhRf8YxOjrK8PAwIQSqlRoGSwihzF37DLW/76oG221MsZlj6mhXNdX5zLBtf4rycNhWrWxfV+0z0nmG2nEVz4taazQ8zWbY5dwiv4nLLrus/L5kyRLmz5/P0Ucf/d8Y0f8Mb3nLW7jgggv40Ic+tFvtjzvuOP7iL/6Crq4uHnjgAY4//nief/55enp6uOqqq3j00Ud54oknGBwcZMGCBZx44onMnTv3N4rt3HPP5aKLLgJgy5YtHHzwwRx33HEsWLBgh7bvfve7ee1rX8vVV18NwNq1a4HinXvOOefw7W9/mxNPPJG//du/5ZJLLuG66677jWISERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERkd9edncbGmOw1o65nHPlFWMkxli2bV8AIQSMMSRJQpIkOOeASLPZZGRklOHhEYaHRhkeGiVGGDduHBMmTKDZbLJ69Wo2btxItVpt9SukaUoIgfXr17N8+XIeeOBBHn/8CV588UUajUYRD7FsH6MhSSt0dXXR39/P9OnT2X///XnVq15FrVZrxeew1tLX10dXrQeDJUkSjDHkeY6zrrUmQ4xQLNe0cuNIkhRrHSFEsiyn2czIshzvA94HsiwnhFDmKoRQXp15bj/f+bVtTzr7d7bp3Jf2XnXuR+yYq3NvOz9jjHjv8d4TQhiz3+3n29dF5/3OOuicq73u9rPOvtv36RxrzFzOYa0b87xzr9vyPMd7T4weY+IOdRljO3+x3M8YIYRICGWWdnnFGMmyjNF6nfXr17N69WqeX7OGp55cwV133cUvfvELbrvtNn7205u47rofcONPfsYTTzyxrT7bZyZEHAaHITGWikuoJim1tILDEHNPzH1xP03BB+rDIwxt2crWoSGaeZPnXljD7XfewVX//M9895/+idvu+DWuknL4kYczdfpUXCXFx0jmPQNbBtkyPEQWc5ohI4+Brp4ejHOM1Ov0jRvHlL32om/cOFyaEo0hD4FmntPMc/IQCEAAfAxApJVS0jQlaZ1N7z0jI8M89dTT3HLLLdx0001cd933+Zd/uZYf//jH/OpXv2LVymdJkgqTJk1mwoSJeO8BqNVqADSbTTZt2szAwGDxLBb7mKYp1lryPKfRaJJnfkxO27UbY8Ta4hx31tfYq6jBGCMxxNYBMa3/LCa2vhtL6Nh/g8EahzGWaAy0xipeq4YY220txjiMcYAlBCiOvMXaBOeK90YMkDWLS+Q3NXnyZAAmTpxY/s084YQTWLJkCTfeeCM33HADX/jCF5g/fz6XXXYZAFdeeSVHHXUUhx12GMcffzwPPPAAAJdffjmLFi3i7W9/OwcddBCvec1rePTRRznjjDM48MADOfnkkxkaGtplLFdffTWnnXZa+TvGyOzZs3nggQdYu3YtJ554Iocffjhz587lj//4j8f8LWy79dZbmT9/fvn74YcfZubMmeXvm266iWOPPZbDDz+cI488kltuuQUA5xwTJ04ck5OX087ZuHHjqFQqHHDAAQwMDLBu3bqyzcyZM1m2bFn5e+HChdx6660AnHrqqXR1dQEwb948YoysX78egGuvvZYLL7ywjOttb3sb//zP/wzANddcw1FHHcWCBQs49NBD+fGPf1yOv2bNGs466yzmzZvHIYccwl/8xV8Axb+T2oaHh8mybKdrWrFiBffeey8f+MAHyntTp04F4L777iNJEk488UQA3vOe9/DjH/+Yer0+Jm+7mz8RERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER+e2V7HZDazHGYIwBa3HGEIHYep7nOSEErLVlnxjbTw3FV4MhYq3FuYTu7m723HNPqtUa06ZNY+rUqQwPDzMyMoT3njVr1jAyMsTw0Aj1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gvd5WdONRoMtW7ZgjGHKlCmMGzeOJEmw1pa1NX36dCZNmsSLL75IjJHNA4M8v+YF1q1bz9DQMKOjdbIsJ0awxgKGkAeijxgsziYYLD4P5LkfU1+dddzOYYyhPAN5npPn+Zi6L8pkW/101nZ7z4r+eXn2yue+2ENjTHugbedqu/dmcdmyrg0QQvFOSCoprlLdab2KvBILFy7k2muv3eF+f38/g4OD5e/TTz+dq666imeffRYo6vbee+/dod+SJUtYtWrVK47jqKOOAuBDH/oQixYt4vOf/zz1ep2BgQGmTp1KrVZj7dq1XHfddTvtP3v2bJ555hnWr18PwJVXXlk+O+WUU7j55pt58MEHy3t33333K47xpRhjeMMb3sBPf/pTAPbbbz+WLl1azrV8+fKy7a9+9SvOO+88rr/+eg499NAx47z1rW/l29/+Nt57Nm3axLXXXsvb3vY2AAYGBpg1axYAV111FQMDAwD09vZy/PHH88UvfrEcp52HRx99dMy9X/7ylxxyyCEA/OhHP+Kd73wnAIcffjj9/f1lju6++25ijLzqVa/i8MMPJ8sybrnlFgC++c1v8ru/+7vUarVd5uMjH/kIX/3qV19RDkVERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERETkf79kdxt67/He44wFwBhTPIgRH0LZzmCIHc9brYgxllf7dwiB4APee7Isp16vk6Yp3d3deO8ZHh6h2WwyPDxMpZKwdetWJkwYR7VWYcKECcyYMYOpU6fiXEqtVqNer9PT08PEiRMYHR3FWgMGqtWUrq4aQ0N1YIjcN2k06jQadbIsI8RImjisNcQYOqLuWFVrPUmSEEIgEjHGYkzxzISAMYbQ+tyB2fYRQijX75wjSYptCK08OufKNu12nTkz2DFDO+fKufM83zZlRxzGGKxtxWttkfuOccv9an3GGMv2MUa892W79ljWWpxzZX10Pm9r7/f299lunM5523F1zgWUn+370RQ5IsQxc3XOGULAxLG5oD2HMRhb1GyxN5ZIOdy2PbJuh3XHEPB5xtZ6g5GhYTZt2sTIyDBpmhJj4IUX1pDnOT09vThnGBkdYurUSewxaTw9vTW8zwBDCOnYOjKtvXIOKPbAe0OWNWk2m3ifY23R1jmH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VMorzzNCCGVbYyjWSARi677BmM7VRUIMRQ5yT57nZV7aOfHeE2PE2vbcCc45TMdA7TzmeT4ml+3f7f7eF3PkeU4IobW2bfsWWuNsvwftmNrtO+Pbfi+dcwCtPd+2t1mWUa/XO/bVjPnevmzrs3PuXdlWa9v2olat0tXVRa1Wo1KpkCQJxpgy5jzPx6x5Z1cEAhBiGLMPRW5Ca72BED0hZASfE7wn+hx8wBKpphVihO6eLvbaaypTp06lv78P5wxbtgySJAlZ1iT3GTEGvM9xNqFarRa1njVpZnWyvEGeZzvsbTtHxT4X+W00mjSbOUlapVKpMjQ0RKPRIIRAlm0bY2hoiI0bNxJjxFnL8PAwa9asYWBggFqtxoQJE+ju6mK0XqeR5/SN66e/fxxZlhFjpFqpMjIyQrPZxFpLpVolhMC6det44okneGL54zz37HMMDGym0aiT5xnWWmq1Gmma4oMva6XRaFCtVqlUKmW9tPeqs64qlQrd3d34PGfjxo0MDw/T3d1NmiQQI3mWkWXFGXStfTRFAUEsztq2WivOcvvd1b7f+f4yHXWYpimVSoU0Tcv27diMMSRJQpqmJEnxLM/zYj+aTZrNZrFf1mCtG/u+NLaco9lsEmKRk2q1SrVaxTmH9zkj9fqYeETaarUab33rW/nUpz7FU089xRve8AYAjj76aB566CEefvhhAP7lX/6F6dOnM3369DH9TznlFG666SYef/xxALIsY3BwkNe85jWsXLmSm2++uWy7bNkyms3mDjH09/czODhY/j799NO56qqrePbZZ/nEJz7Bv/3bv3HZZZexbNkyvvOd75AkCQ8++CAAn//858t+fX19Y8YREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZH/+ZLdbRhCwBiDsQ5jDN57vPdEYzHGEGMEIEbK70DRx1iCz4FIjJ7R0ToxBiqVClu2bGHjxo0MDm6mu7uHLMvwecB7z4YNG9m8eYDp0/dmr2lTGT++n5GRIfr7++jt7WHzwCCPP/4469ZtAGDr1q1s2rSJoaGtGBN58cUXGTeuH+eKmEK0RALVaoVqtYpzDussIQTyPKNarWCswec5IcQy9mIdFgOQO6y1ZU7aazXGFnOEUFyAcw7ninxleUaW54QQcK0cttt25jjGYt4kKbbGew+tsWKMEKHaXSPPc/I8L9saY8jznHq9Tq1WI8syarUalUqF4eHh8rcxxfowBmttOX97vnZM7bir1SrWWqwt1tfe9/bc7THav9M0pVKpjBmr/T3LMowxVCoVojWt/Jqyfjrb71hDpsx7W2Rs7rz3hBCwrT6d/Tv3IuQ53gdi8IQYx8xVjh1jue5iDMCAMRFjwFiDiRbvAz09PTQaDXp6e5gzZ382bx5g9ernmDp1Kt3dXYTgsRkMDW1haGgL48aNY49JE4o5XFoMvN1Za3POkWUZeZ5TqVTK/I0bN47e3l6cS7DW4pxj8+bNOOdI05QXX3yR4eFhpk+fTrPZpNFokCQJmzZtYvXq1fT19TFz5kwmTpxI3/jxjI6OMjQ8TJK4sp58CCRJQoyxtb9FDQ4MbOahhx5mw/oNvOpVr+Kggw9ij0kT6O7uJsuKumzXTZIkZfztevbe09fXx9q1a8uxCYFatcqkPfagr7eXkeFhtmzZwsQJE0mTBBMhbzbZuGkTy5cvZ3BwkOnTplGrVos9jxZjDSG2ashEbKvG2ueqXavtOrYmkiQJ3ge8z3GJAWJZO865MfXYHst7T4yxrKcYwLffBa06JlKemUgkhKLOYizmjMGPOSO1agVrGwwPD++0HkXOP/98jjzySC699FKccwBMnjyZq6++mne+853kec6ECRMYGBjAGMMll1xCs9kE4HOf+xyXXHIJ5557Lhs3bqRSqXDllVdy5JFH8pOf/IQPfehDfPCDHyTLMmbMmMGSJUt2mP+8885j8eLFLFmyhIsuuogLLriAz3/+85xxxhnkeU6z2eRNb3oT+++/P2effTbf+c53mDp1KldccQVHHnkkxx57LK997Wv54Ac/yEknnUR3dzf/9//+X+666y5uuOEGLrvssv+QPC1ZsoSpU6dy9NFHA3DvvffyhS98gWuvvZbNmzfzjW98gz//8z/frbFmzpzJqlWrys+Xs3jxYhYvXsytt97KzJkzWbx4Mffccw8XX3wxy5Yt4+STTx6T28svv5xVq1ZxwgkncPnll3P55Zf/BisWERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERH5/9i77/goyvyB459nZnY3CUkIvQgIiPSQhA4CShEQFbuIFbunnmI7O2I9z3LKiYqeIJ7YFT27ByJ2BZRQRKoUkU4I6bs7M8/vj90dErIJGwjo3e/7fr0WsjvPPPP0eebZfb0eIYQQQgghhBBCCCGEEEIIIYQQQgghfn9WogGVUhXea63RWoOhUEpF/gYUCiqEVYDGtEx8lonWLuFwGKUUrutSWFjItm3b2L27AMvyUVRUTFlpiLS0OjRr1ox27drRslVLkpOTcV2X5ORk2rVrB8CSJT+xceNvbN26lbp169GwYUNatWrJzp1JbN+xnS1bNnPYYU0xjEaxlHlpVwpM0yAQ8OP3+3BdG9d1cW0Hx3VAq2iedYX/TdOsUBaxvGutcRwH0zTx+/0o08RxHILBILZtowHTMkGDYRjeKxZX7H/HcbBtG9u2vbTGrqmUQhmKsrIylFIYhuGFAfD7/SQlJeE4DqFQyDsnJpYewzS9c13X9V57p6V8PXv1HeW6LoZh4LpupXZiGAa2beM4jhfOMAwsy8IwDHw+HyHH9uLTWuO6Lo7jROtmTzrKl2/5NAFoFbm20ntdf6/zFBXjiLQEhatdyqd+7zYeuZYLaLQuF6drgNJoDeGwjW1Hyq5OnRSCZUHWrl3L2rVr6dixI4Zh0KhxQ7Zv3c7ixYuw7RAdO3YkKdlPampquXqueO3yabEsC8uy8Pl8uK4bPc8hFAyzY8dO6tVNp05KCpZlYds2hYWF7Ny5E8uyaNiwIU2bNsV1XX777TeWL1/Ojh07aN26NSkpKSQlJ1NcXIwyDUzTxHFstDawLBPlKlxXY1kWrutSVlpKcXEJxcVFlJSUUFRURFlJKbgupmEC2stPWloajRs1ZlfebjZs2EB6ejp+vx+fz49SipKSEjZu3EhpaSkNGjSgfv36mIaiXkYGTZs05qeflrFp0280bNCApICfYDCIaRoUFhSwa9dO0tJSadfuCJo1a0ogyY+LBgy0C4ahQeloW9Ro7e6pe6XQmuirYrtyHAeUy96tIBJEe+05dkqsrWsFKIVSsThdXLfc2OBqXDSGYXh9WTuReo21/dh4aNs2rrYrtUPxv2ndunXe33Pnzq1w7M0336zwvlevXhXaa8zIkSMZOXKk975169YAZGRkMH36dACee+45AG699VbGjRtHdnY2vXv3BqB79+7MmTNnn2nt1asXP/30U4XPzjrrLM4666xKYVeuXOn93aBBA9asWeO9v+uuu7jrrru896NHj2b06NH7vH6i3nnnHbKzs+nbty8APXv25LXXXgMgPz+fBx98kFtuuaXWrrcvzZo14/HHH2fhwoV89NFHh+y6QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEIeSlWhA0zQrvFdKRf43DAzDiH9MKbRWaDSu6+I4ADp6DAIBH+npaZSUlGBZJqZp0KRJIwL+ZBo0rE+bNm1o1LARhmFSWlqKz5eCRpOenkbHjh1JSkqhSZMmaBfq129AnTopJCcns33HNjZt2kRaWh3q1ElBa43PZ+K6BsnJyTRu3BifzyK9bl0cx6akpBilQKPR2kUpRTQLaK3RWnv5MZRGo9CujoaLhHW1g+tqbDscOdcwMEwT0zIwTB9hO0zYDmJiAqZ3bvky01pjmiZ16tTBtm0cx/Gubdt25G8NShlYloVpmmitcRwH13Vx3Uja/X4/SUlJWJaFZVle/SilcBwnUpdK4bquF0fsOoZheGmJxek4jve5UqpCfZcvGxWNMxwOA+C6rnfcNE1M08QwjMjfRK4ZO2fvdrN3+cTSE0urRmNae/JlGIYXJnZeLKy7Vx0qV4MClIkC0C5Ej2tARWoYrR1cNxpUgVYatAFKYSgDiOTFsvxePaSm1qH5Yc3Ytm0rW7ZuIRQO0bbt4fz666+sWrWCI444grp163r1FwoHo2krn3fD+z8UCqGUwjQtgsEwruOAVqAVeXn5lJUUszujLsnJyQTLytiVn8/OnTvJy8ujQf36BAIBAIqKiti+Ywfbd+xgx44daKC0rAzL76dBwyYYPpNgaSmhUBkNGjSgbdvW1K9fl3A4jG3bkbZkWDhhmyR/AJ9hEioLUrB7N6WlpdG2tae+A4EATZo2YcuWbWzdupXVq1dTVFRERkY9fD4fO3fuZNWqVRQVldC8eXOaNm1MMBgk4PfTsGF9cB22btnEtkaNsAzQrgY0Wzb/Rt7OnbRunUZKSjKOYxMMgumz0OXaDyrWnrTXhmJt2DSNCu0r8rmFY9vRzqhRVO6bsf64d/s0lEKZhjd+xK7otVWtvfHEMAwMpdDs6QuxPhYKhXBcG8exEWJ/NWrUCID69et79+1jjjmG8ePH4/f7effdd5k1axbTp0/n6quv5pJLLuHFF19k8uTJhMNhUlNTeeKJJ8jKymL69OnMmDGDRo0asWjRIjIyMnjuuee4/fbbWb58OS1btmTmzJmkpqZWmZ5vvvmGK6+8Etu26dWrFwsXLuTxxx/nmGOO8dJ18sknA3D66adzwgknMG7cOF5++WUmTZpEKBTCdV3uu+8+TjzxRC8/PXv25Pvvv2fTpk0ce+yxTJkyhQ8//LBS/tq1a8f48ePJzc3liiuuoLCwkOzsbCzLYsqUKZx77rn8/PPPXn/u378/d955J8cdd5xXlrH/96Vu3br4/X5SU1NJTk4GoEWLFrRo0YJly5ZVCp+cnExqaip+v5+6desmdA0hhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKIPyIr0YCGYQCgAa3LfaYUSqnIMa3R6EggiHyuov87Gq1dlFL4fD4yMjJITk6mYcOGlJSUYVkWSinS09NRysR1XVJTU0lJSUFhYJiKQMAkFC4jFAxhmoo2bVpz+OGH4zoa13UxDINAIEC9+hm0bNmClJQkfD4LZYBpGlg+P3U0NGnSmIyMNNLS06hXry5aO4TDQQxDobWBaZoAuI6L1hqI5A+tcXXkMx3Nt2maXv5BEwj4AbC1i+PYOI4DgGmZJPuTcUIOWkfSGyuzCuWnNaFQyDvPMAwvvFIK0zJxwi6OE4nHNE38fr8XxrZtryxM00RrjW3b2La9J61K4bqud75hGN57pZT3PpamvdMZq0OttZeOGMdxcByHQCBQIR5Vrp04joMZbTuxfJUPYxhGhfCxclHR8K7rotgTzmBPONd1K5RdrM0STatSCjNWn9H2CXuuhdYoNAoVzZe7p01r0Abo6DGNi8akTp06hEIhSktLSU5OJicnB5/P4tdff8Xv91FUVITrOrRt25bMzEwaNGhAOBymtLQUwzTRGrRW5fKp0TqSvD3tS2GHw7iui2lapKTUISUlhfxdeSxd9jOGAse2KQ2W4YRt6mZk0Orww8lo0ADDNMGMlJWLpqioiNJgGQUFBRg+i9RNWwg5NoX5+ThumCOOOILUtBSSkv1o18Xn80X6Q7RdpaQkk56eTmqdSBqSAkmROnEj/cG2bcLhMCkpdWjevDnBYJD169ezceNGDMMkKSkJrTWFhYU0adKMjh07YJomjhNC62QaNqhHi5aHsXr1SnIX/sjiRQrL8mEYioLdBdSrV5cjjmhLgwb1sHwmSUkBMExKykpxo3WG0hiGAlxc16nQvpQyvPzEyjYSNtYk9rSHSBtSaI3XliNh99QXXrygXYXa0x08Xthoi3IdJ5pnJ9pvNXYoiNYOrmtXjkCIBM2fPx+AmTNnVjo2atQoRo8eTXZ2NuPHjwfg66+/5pVXXuGLL74gEAjw5ZdfcvbZZ/PTTz958S1ZsoRWrVpx3nnnceKJJ/LNN9/QpEkTTjjhBF544QWuuuqquGkJhUKMGTOG559/nmHDhvGf//yH6dOnJ5SPESNGMHbsWJRSrFu3jr59+7J+/XoCgQAAa9as4bPPPiMcDtO5c2e+/fbbuPmbO3euF+eUKVPIzs4mNzfX+6xBgwbMmjWL4cOHs3DhQrZv387IkSMrlGXsf4AJEybQvHlzrrjiikppnjRpEgD9+/dPKI9jxozx/k70HCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQog/IivRgEoptNbee8MwIp8p5b13XRdccLXrnWOYFoZhYFgmlqlwXAfHNQATny+V5OQUXNfFsiyUMvD5/DiOi+u6+P1+tNbYtg2uwrY1pmni9xuEw2F8Pgu/Pwk77FBSUoLf7yclJYVAkp9QqA5+fyR7YTuE1hrtOJimSXp6Opo6+P2+aPxhXK1RWqMUKAVag+M6aBdM04p85mpUNL+xkihfJgDBYBDXdXG0C0phmiaGYaCBcDiM0oAycd1IHrXWe8Jo7X0OVPjcNE2UUliWhYH2rhsLW/5cx3FQSuE4TqU4/X4/yjBwHMc7Hil75YXVOpJPpZRXz7GX1to7x3Vd73PKlUfs/Fjay38WS4thmbDXNWPxlb/+3u3P+1yBYUTTpfe0v9g1Y20yUkh70uDVnQLHsdFKUS71qFidajcaUnvHFaBi9a0i/2itKSstAwWBQADDUFiWSfPmzWncuCGGYRAKhWjatDFpaWmkpaVF8omBZfrQymtJ0Vcsn5H0+ny+aF260fZgYpomlhX5PCUlmZLDmhMOh1Bem3VJz6hLowaNMCyTQHISht+iYePGHN6mDX6/H9Pvo0FGfZLrJFMWckAp7HAYZWga1q9PUlIyEMmTUopQKITSkTpNT02nfkY9tqen4/f7vXaobY1l+TAMg2AwiGEYNGvWDNM0Wb16NWVlZQSDIRzHIT09nUaNGnHYYS1p3LgRWtvUSUnGccKYpkHHju1RyuXXdRsoC5ZSLyMDcGnUsAFt27ah9eFtCPh9hEJhSksclGVFxg2tARdlRPowaLR2vbpXykBFy1y7ez4zjD2toHybi1V27M9I+zMqtHW0izZAEW2P5cLvLdIPNY5tY0T7oeu6mIYZqX/tRF5CHCL//ve/WbRoEX369PE+y8vLo7S0FIB+/frRqlUrAHr27Ek4HKZJkyYA9OrVi1WrVlUZ9/Lly7Esi2HDhgEwfPhw2rZtm1C61q5dyznnnMPGjRuxLIu8vDzWrl1Lx44dARgzZgyWZWFZFtnZ2axZs4Z+/frVOP/XXnstkydPZvjw4Tz55JNceeWVFe49e7vnnntqfA0hhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEKI/3VGogG11tFX9ETDQCkFgOu63nFXu7iu632GBhS4rkNZsIxwOIRS4PP7CAQCpKQkk5pah6SkJFJSUjAMA601pmlimiau6+I4DoahCAaDhMNhTNMkOTkZn89HOBxC41KnTh18Ph+2Y6O1i2VZuK7GcRyUUjiuiyaSeKVAoQiHw5SVleI4Dn6fH7/fh9YuWu9Jv2EY+HwWlmWhDIXrul7+DcPYUzZolFLeecow8Pv9JCUlkZSUhGVZkc9RKKW88qpYtpE4AoEAgUAAy7Ki6VWYponWmmAwGE2TzzseDAYpKyvDcRxM08Tn8+Hz+VAqcq3k5GSSkpK8OouFMQwD13UJh8O4rusdL58WwzC8uogdi53jOI6Xvlg4y4qUlW3bXhyxc7w24rq4e+U5Fk/59uY4Do7jVCirWDgFOI6zp51F66R8/mN1VD79e+qLSFvWkQahDAPDSwde2e15xdoNqMjZmIaBzxegpCTShtLS0vD7fYRCQZKTA7Rp05qmTZvQoEF9WrRoQePGjQEwTZP09Lr4fP5KeYhdL5ZO13WxbRs7bEfzuKeNJScn07hxY1q2akWbtm04ssORdOjUkSM7tKdFy5ak1U1DGYrSUBANNGzciJzuOQwbPpxjjz2WPv36kpmVRY+ePenZsyf9j+rPwIED6dK1K2lpqYSCIa/POY6DZVkYhkFRcRH5+fkEy4K4juv111i6fD4ffr8fn8+iTp06NGvWjB49enDUUUcxdOhQjj76aHr37k1OTg7NmzcnFArh2A5p6XUAl2ColGbNmtK9Rzb9j+rHqFHHccwxA+nZszs5OVm0bdsav98CXFJSkvD5LFzX2VNu5fpU+fZZvn3tLTZmlX/F2p/j2F5bL99fy793o+00nr37t9Z7rhdJWyR9hmmiXRftOnHjEf97lFJkZmby4YcfAjB9+nQmTpzoHV+zZg2nn346bdq0oUePHvTu3Zvnnnuuyvh++eUXDMPg3nvvrTLM7Nmz+fLLL733WmsuuOACtNZMmDCB3NxcNm/eTHJyMgBJSUlorWnTpg1PPfUUSUlJ3rmmaWLbtvd+3LhxPP744/vM81lnnUVubi6WZVXoW3l5eVx00UVkZ2dz1FFHsXz5curUqUNubi6pqamUlZV5YZ999lkOO+wwsrOzmT17Nk899RQlJSVxr5mXl0fdunUZNWoUhYWFZGdnc9VVVwFw6qmnsnjxYhYuXMi7777LY489Vm3645k7dy7jxo0DYN26dZimSXZ2NllZWWRlZfHBBx/UOM79kZuby6uvvnpIrvV72lc+9+5HiTrmmGNYt24dANOmTSMzMxPLsvbZpt9//306duzIkUceyamnnkpBQUHccAcjzr0ppcjPzwdg165d9OvXj/Hjx8e9Py1ZsoRjjjmGTp060alTJ2bOnBk3ztatW5Obm5vQ9Q+2devWkZGRUevx3nXXXXTs2JE+ffrUetx/NHPmzME0zSrb4Lp16zjmmGNqHO/EiROZPn06U6ZMITs7m+zsbOrXr++N09nZ2Xz22WcHlvgqjBs3rsJ1brrpprjhioqKGDFiBA0bNtxnO7r99tvJzMz04qxuzPnb3/5G586dyc7Opm/fvsybNy9uuCeffNKLs2vXrvzjH/+IG27Tpk2MGDGCDh060K1bN0477TS2b99e5fXvu+8+jjjiCI444ghuv/32KsO1bt26ymNVid3fFixY4JVFq1atqFu3rvf+4YcfrnRednY2hYWFNb5eTUycOJHx48cnFPaBBx6gQ4cOGIbBO++8U23YqVOncuSRR3LEEUdw6aWXEg6H44Yrf89IVKx/bdq0ySu/du3akZyc7L2/7rrrahRnTcydO5ePP/54v8+fNWsWgwYNom3btvTs2ZPevXvz7LPP1mIK45s4cWKFOWB5mzZtYuDAgQc9DTH7KsMJEybw0ksvxT12IH0wJtHxZm8vvvgiWVlZdO3alaFDh7Jhw4Yqwx6KMQUqz5l79Ohx0O4TfwS2bXP33XfTsWNHunbtSnZ2Npdddpk3b/tfUL5OY68pU6b83sn6rxabX9VU+f65bds2Ro4cyZFHHknXrl354osvqjwv0ecDrTUTJ06kffv2ZGZmMnjw4Ljhvv32W68tdOnShcsvv5xgMBg37IHcV2OKiooYP3487dq1Iysri5ycHG688cYq7+Ui4sknn6Rr16506tSJ7t27M3bs2Lj3iUTWew6VQ3n/r431hVNOOaXC2GgYBu+++26lc4qLi+nTp4+3ljRy5Mgq+4Xruvz5z3/miCOOoF27dkyePLnKtOzPPbt8vmN9LfYMsC8LFizguOOOq/T59u3bOfHEE+nWrRudOnXiggsuoLS0tMo0d+jQgezsbDp37syTTz4ZN9wll1xyyOYP69atO6D72urVqznjjDNo06YNOTk5ZGVlcdNNN1U5LlantvrAqFGjWLFixQHFcaBzwrVr19KjRw/vOfmMM85g165dCcWzYcMGTjzxRDp06EDnzp154okn4oYrKSlh7NixtGvXjvbt2/Pmm2/GDXeg6yExP/zwAyNHjvSem4466qh9Pof+kRyMeWtNnt+rUhvj8W233UbHjh3JysqiZ8+efPLJJwnFsXXrVk499VRv/Krufrhq1Sr69+9P+/bt6dWrFz/99FPccLWRnyVLljBkyBDvWa9Xr14sXbq0xnHuHX8i7bWoqKja71sTURt97u2336Zbt27e/eL222+Puw5eVlbGySefTPv27cnKyuLYY49l9erVCV0v0bkvHJo1pdjf8dY2y3838Ed0oOtSiajJ+m+i94e1a9fSp08funTpwgMPPOB9/vPPPzN69Oj9Smdt3csT/e6mqnC10Q9fffVV7z7etWtXHn300SrPS7Q/1WT+megz795rbIkaN24cc+fOBSL5Vkrx9ttvV8hTmzZtqmxvU6ZMibt+DvD555/Tr18/bww76qij2Lp1a6VwBzIPPRhlGfuuoHPnzrzwwgve53PmzOHyyy/fZ1pqan/bW3k1WZ/o06ePF7Zr164opVi8ePFByU+8OdL06dM5+eSTaxzvwfTOO+/w3XffVXm8JnOs77//nqysLNq3b8+QIUP47bffDkaSger7X6Lmzp2b0HNwTe4/ezvQZ3ZIfE2vvLlz51b4bio7O7vKZ/RDOdbWZO0g0bn3/Pnz6d+/PykpKfvsX8OHD/fmlwMHDmThwoVxw9XGfL7899uZmZkMGjSI5cuX1zjOmjrQNleTMfXCCy/05uBHHXUU8+fPT/iaTz31FJ06dSIzM5OsrKwqvydM9Hc15dtZTcTKqybPFHPmzKF379507tyZLl268Je//MX7rfn+2LZtG02aNKm2/X744Yd0797du3+Vv0fHo7VmyJAhNRqzXnjhBe+3Djk5Od7vHPelJu3gYPz2qqr1o/L38tLSUrKzs0lNTf2vWsMRQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYT4b2AkGtB13ciGhFqjlPJeWmscx8G2bS9M7BiARqNdF9jzmWVZKKUoLi5m69atrFu3jtWrV7F27Vry8nZi22EcxyY/P5/169ezcuVKVq9eRTgcIhwOEw6HsW07+n8YrTWGqQgk+SktLSEUCmGaJqFQkMLCQoJlZYTDIfLz81m9ejXz5s1nwYIFrFu3jlAoRFJSEqZpEArt2eRQKYVpmFiWhWX5AAiFQuTn76KkpBhXOxgGGAagNKAxDPD7fdSpk0LA7yMvbyeLFuUyb973/PLLGsLhEETLQCmFYRjeC8BxHEpKStixYwfbtm1j8+bNbNmyhcLCQq+cCwsK2bBhA5s2bWLXrl0Eg0EMw8Dn82EYBq7rUlhY6JVRWVkZxcXF5OXlsXnzZjZv3kxRURFaa/x+P4ZheBtNmqaJaZpevZbfgDL23nVdXNf16jt2LPa51hrDMLBt22sL5duP1zaiccfyHynnyMs0TS+/ruviOI73isXjutpLU/m0xuKK5c2yLHw+H5ZleeXshVeAofbURTT/hmFiGEaFduy1ZVw0kfqO5TvWJkOhEFprkpKSSEoKEA6HUQbUSU3BtAyCwTKUUiQnJ6O1pqCgwEuHYaho+VvRNKhy9QAqWk6qXPuxLB9+f4BAUhLJKSn4k5LwBwL4AgGUYaCVwh8I4GhN2HEwLJP6DRrQolVLDmvRggaNGpKalkbz5s3JyMggJSWFlJQ6pKWmEggE0FoTDAYJh8No18WxHbZu3crSpUtZv349KcnJtG3bhqZNmmCZZoW25Pf78fv9mKZJUlIShx12GC1btqRVq1Y0a9aMunXrUrduXTIyMkhOTqa0tBitHQIBH0lJflKSA9TPyKBZ8yYcdlgzMjLSadSoAQ0a1MPnt9DawfKZJKcEsCwDpYiWm4GK1nFkzIm0CdM0o23L8Oo71jZi5RprV7G2HGtztu147Tny2Z62H2lTKtoe3Ur9pPyrfPuPpSnW3pRSKMB1bVzXTnRYFv8DvvzyS0aNGlXp8y1btjBgwABGjBjB2rVr+eGHH/jkk0+w7arbx7Rp0xgyZAjPP/983A2EAbp168a3337rvR89ejTTpk3jt99+48QTT8R1XRYsWFDhnE8//ZSMjAw2bdpEYWFhwnnr2LEjtm17m9zPnj2bNWvWeMfbtWvH999/D0Q2p12wYAFJSUnk5uaSmprKW2+9xffff8+MGTPibqp+0003kZuby7Bhw9i+fTuTJ08mPT2d3bt3Vwo7ePBgvvrqKyzLYt68eTz55JNAZD5yxRVXMHr0aE455RTvPnEg0tLSyM3NZdGiRdx///2MHTv2gDZKS1Rubi6vvvrqQb9OVWJj3cF2KPLZo0cPXn/9dc4+++xqwxUVFXHxxRfzzjvvsGrVKpo3b8699957yOKsyubNmzn66KMZNWoUjz/+eKWNzktKSjjppJO47777+Pnnn1m6dGmtbORc26ob72rTQw89xGeffeaNR/+rdu/ezS233BL3nlNbrrjiCnJzc8nNzWX06NHeOJ2bm1vtxvMHqvx1qtoo1+fzcfPNNzN79uyE4luyZAm5ubl88MEHXHbZZezYsaNSuNzcXJ566inmzZtHbm4uV199NVdffXXcOM8991wvzm+++YZHHnkk7oaspmly5513smLFChYvXkzbtm256aab4sb5xRdf8Morr7B48WKWLVvGJ598wgcffLDP/NVUz549vfK95557GDx4sPc+Xtpyc3NJS0ur9XTsr2HDhvHRRx8xaNCgasOtXbuWO++8ky+//JLVq1ezdetWnn322VpPT/Pmzb3ye+655+jQoYP3/rHHHquVa8QbP+fOncvHH3+8X/H95z//4YILLuDBBx/kl19+YcGCBcycOTOhja8PdH5w9913V7lhbvPmzfnyyy/3O+6a2lcZ3nPPPZxzzjkH5do1GW/KW758OTfddBMff/wxS5cu5cILL+RPf/pT3LCHakyJKT9nvv322znzzDOrfIb5b3fxxRezYMECvv32W5YuXcrChQs59thjycvLq/a8QzUXqi2xOo29rrjiit87STXiOM7vnYRad8stt9C3b19WrVrF888/z9lnn004HK4UribPB//4xz9YvHgxS5cuZcmSJbzyyitxw2VlZTF//nxyc3NZsmQJ27Zt46mnnqrV/MVorTnhhBMoLi5myZIlLFq0iHnz5tGuXbsqN3Y/mP5b+u5dd93FjBkz+Pjjj/n555/58ccfueSSS9iyZcvvnbRqHer7/4F6++23K8z96tevz8iRIyuFS05OZvbs2SxatIhFixYxYsQIrr322rhxzpgxg2XLlrFy5UrmzZvHww8/zE8//XRQ0p+ens59993Hyy+/nFD4t99+m5NPPrnS5/fffz9HHnmkN35s3bqV559/vsp4XnvtNXJzc/noo4+47bbbWLx4caUwzz333EF9zixv3bp1TJkyZb/O3bx5MwMGDGDkyJGsXbuWhQsX8s0335Cenp7QOuveY0pt9YEPP/yQDh06HHA8B6J58+Z89dVX5ObmsnTpUpo3b87EiRP3eZ7WmlNOOYXzzz+fFStWsGzZMs4888y4YR955BECgQCrV6/mk08+4corr2Tnzp21nJOIn376iREjRnDVVVd5z01vvPFG3LXqP6r9nbf+Nxg4cCALFy5k0aJFTJ06lTPPPJPi4uJ9nnf99dfTuXNnFi9ezIIFC5g+fTrz58+PG/byyy/nsssuY+XKldx8882MGzeulnOxx9ixY/nzn//MokWLWLp0KTNnzqRx48YH7Xp/RMOGDavw/DFr1izeeeeduGEvu+wyVqxYwaJFizjppJO45JJLErpGonPfQ7Wm9N/sQNalElWT9d9E7w9PPvkkV111FYsXL+aFF17wfrMzfvx4Jk2atF/p/G+bz1anZcuW3prT119/zdNPP83cuXPjhk20P9Vk/pnoM29t6dGjB9OmTfPef/rppzRs2LDK8FdccUXc9XPbtjnllFN48sknyc3NZdmyZUybNo06depUCnsg89CDUZYPPvgg//jHP5g/fz533303AKWlpUycOJG//e1v+5XORNWkvZVXk/WJ77//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G8cC3HfffXTq1Ins7Gyys7NZv359pTDvvfce3bp1Izs7m65du/Lvf/87blwvvvgiffr0oXv37gwaNIhFixbFDQdw9dVXc8cdd9CgQYMqw5imSf369as8XpXU1NQqN1ytTk3Sf6ACgQBDhgypML5VZe8xMPb8sTelFOFw2Kvr/Px8WrRoETfO8veJ4uLiKjedbdKkidc3Afr06cO6devihn3ttdc477zzqFOnDoFAgIsuuqjK8aKmfRyqv79VR6nIs/jevvvuO3r06OG166effjru+R988AG9evUiKyuL7OzsSve8mM2bN3PiiSfSuXNnhgwZQl5eXtxwvXv3pm3btvtM95tvvsno0aNp2rQpSimuuOKKKsuz/D0jUfvbvxYsWED//v3p1q0bvXv35uuvv44bbty4cVx00UUMGjSIrl27VjiWm5vLlClTeOmll8jOzuaee+6pURruueceJkyYQP/+/b3PWrRoUeXYWlvzg9h9fuDAgWRnZ7Nt27YKx/ees+ydhjFjxiTURm688UZ69epFdnY2gwYNYsWKFZXCJFKG48aN4/HHH497jQPtgzUZb8pbunQp3bp1o1mzZgCMGjWKjz76iJ07d1YK+3uOKSNHjoys/cVJV6Lz5XHjxnH55ZczdOhQ2rdvz6mnnhp3vgGJzTtjHnnkEXr37k337t0ZOXJk3Pt2dVavXs0bb7zB888/T7169bzrn3HGGXHHpmOOOYZrrrmGfv36MXz48ErHazKvSnSu9vLLL9OnTx9ycnLIysrivffeq1Eea8JxHG666SZvjvbnP/85bvpj/fvOO++ke/fuHHnkkXz99ddcd9113n1k6dKlca/x97//3evTvXr14ttvv40bbvr06QwePJjTTjuNzMxM5s2bV+H4li1bGDx4MD169KBLly5cffXVcecDAN988433rHbRRReRlZXF3Llz44a96667aNeuHb169eKOO+6gdevWccPt7/yqfP98/fXXvbG0V69eNG/enM8//7zSOTV5Pnj44Yd58MEH8fv9ADRt2jRuuJSUFG/D81Ao5K2XxnOg99U5c+awevVqnnzySa/MfD4fV1xxRdxnw0TGfdhzPxsyZAgdO3bkxBNPjDtOQaRf33XXXfTq1Ytbb7210vFVq1Zx/PHH06tXL7p168bkyZPjxnMwngPiKS4u5qGHHmLq1KkV7idDhw6l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jNSt1hqUwrAicdqOg4vG1S6mz4cPP67rEgwFcdwwvkBStNwidRO07Uj/Tk6KlLVhYpgm2nVxXBelFHY075bli7RhV2NiRtqldkGBVuCo2Chk4CgXjcZxNahomlwH13UxLTPaBvaMZABKxeoEtFaRtoFCKQMVHeFiY6DrapRWxFoOWmFggNbggmEakfarIyGUMiLtXGu0qwgGHQK+xDYqF/97xowZ4/39ww8/cOyxxyZ87ieffEKLFi3o3LkzF198MVOnTmXo0KFAZAO1mH79+nHttdfiOA6XXHIJZWVlLFiwgG+++YZOnTpViHPcuHGMHj2aI444gqeffpoBAwZw/PHHe5vHVrURY3n9+/evsEl7z549vb/btm3L/Pnzvffr1q3jiCOOIDs7G4hsbta5c2ceffRRHn30US/c3LlzK2wKP3XqVIYPH+5t4PvTTz9VSMM999zDtdde68WblJTEOeec4x3//PPPGTx4MJmZmRXSE0+8zRL79+9P//7944ZfvHgxQ4YM4dNPP610LD8/n8suu4wPP/yQZs2asWPHDrp3707//v0rbIoNcMMNN7B8+XKaNWtGOBwmGAxWON64cWPuuece3nnnnSo3Me/evTtfffUVpmmSl5dHTk4OI0aMSHjDs6p8++23LFy4MO4G9q1bt/Y2KystLaV///4MGzaMvn37xo0rEAgwb948li9fTq9evTjvvPO8TdYSzWf5flQTM2fOrPE5GzZs4PDDD/fet27dms2bN2PbdoV0H8o4jz32WO6//34uv/zyKsMsW7aMQCDACSecwMaNG+nWrRuPPvpojTdSXL58OVOnTuWpp55iypQp3H777XzyySeVwt1www0MHDiQf/7zn2itufTSS5k0aRI33XRTpbA///wzTz31FFOnTo17zd27d9OtWzfuvvtuPv74Y6699lpvc/vy7r33XoLBIIsXL6a0tJQBAwbQsWPHSu3jm2++QSnFl19+GXfD0/POO48rr7ySCy+8kJ9//pmcnBzOPvvsSuFM0+Tll1+mQYMGaK258soreeKJJyptSLhr1y4eeeQRNm/eTHJyMiUlJXE3/Lvjjjt45pln6NevH67rUlBQUCnM119/zSuvvMIXX3xBIBDgyy+/5Oyzz640BkJkc3fDMBg9enS1bb1ly5b71RduvPHGGp9Tk/RPmDCB5s2bexu37m3SpElMmzaNVq1acd9993nj/YH4xz/+wZNPPsnGjRt57rnnaNy4caUwWVlZXHfddbRp04b69esTCAT44osvqozzzTff5K677mL16tU88MAD5OTkVJsGx3GYPHkyJ510UtzjGzZs8DbLhch48eqrr8YNu6/7WzzV3d/2x1//+lduvPFGxo4dC0T6w95WrlzJhRdeyBdffEHHjh0Jh8OUlJTEje/777/nhx9+oEGDBpx11lk888wz3Hrrrfudvnjj74YNG+KG3Z9+sj/9KxQKceqpp/LPf/6TESNG8NVXX3HaaaexevXquJv2/vDDD3z11VekpaVV+Dw7O5srrriC/Px8Hn/88Rqn/ccff+SJJ56o0Tm1MT+YMmUKzzzzTJVj9L4k2kZuvvlmb6PuV199lWuvvZaPP/64QpgDLcMD7YM1HW9isrKy+PHHH1m5ciXt27dnxowZaK1Zv349DRo0qBD29xxTXnnlFVq1akXDhg0rfF6T+TJAbm4un332GYFAgEGDBvHWW295Y87e9jXvhMiG1StWrODbb7/FNE1efPFFrrzySj744IOE8/3jjz9y5JFHVspbdVauXMkXX3zhbVBdXk3mVYnO1UaMGMHYsWNRSrFu3Tr69u3L+vXrE9psvLzCwsIK9+D33nuPli1bVgjz7LPPMn/+fH744QdM02T06NE89thj3HzzzZXi2717Nz169ODee+9l6tSpjBgxgvfee4/HHnuMhx9+mLvvvps33nij0nnnnXce119/PQDfffcd48aNY/ny5XHT/P3337Nw4UI6dOhQ6VhGRgbvvfceqampOI7DSSedxOuvv85ZZ51VIVwoFGLMmDH861//YvDgwXz22Wc8//zzca/3wQcf8NZbb7Fw4UJSU1O56KKL4oaD/ZtfwZ7+uXPnTsLhME2bNvWOVXVvS/T5oKCggK1bt/Lvf/+bN998E4Drr7++ymewdevWcdJJJ7FmzRqOP/54rrzyyrjhDvS++sMPP9CjR4+EN0dPZNyP+fLLL1m8eDFNmzblyiuv5NZbb+XZZ5+NG9Y0zbjjo+M4jB07lhkzZtCxY0dKSkro27cvffr0oVevXhXC1vZzQFV++ukn/H4/nTt3Tvicqjz++ONeW3nwwQeZOHEiU6ZMqRRuX+sakNh8sTp//etfWblyJT/88AOBQIDt27fHDZdoG6jN9YXS0lJeeeUVvvzyy2rPHTZsGEuWLKFRo0Zxx2yIP2/97rvv4obdn3v2/uZ71apVpKenVxh3Yu68805OO+00mjZtSmlpKWeffTajR4/eZ5xLlixh+fLlZGVl1Sgttb12MGXKFMaPH19hjTNRP/74Y43WeGHfayNVueeee0hOTubnn3+mqKiI/v3706NHjxrF8dFHHzFt2jS+/fZbMjIyuOyyy7jlllt4+umnK4WtjTlhKBSid+/erF+/nm7duvHuu+/uM45ly5bRqFEjzjrrLFasWEHr1q159NFHadu2baWwiT7n1cZ6yA8//MD999+f0HmJlnNeXh4nn3wyb775JgMHDsR1XfLz8yvFV9M12HhqOm8955xzuOiii7j88stZtWoVffv2JScnp0J578vvMR4DPP/887Rt2zahtPbo0YOXX36Zvn37snPnTj755JO4c8dff/2VZs2aec8USilatWrFhg0baNeuXYWwtZGfO++8k8GDB9O3b1/69u3L6aefHnedKdE1y+osXbqUu+66i4ULF9KsWTNuu+22KsMmOq7W1hrkN99847XBP/3pT1WuoZU3adKkhMLVZO77R1xTKm/BggX88MMPZGRkcMwxx3DJJZcwa9YskpOT6dmzJx999BHHH398hXNmzJhBmzZt+M9//gNExqN4amtNpbaeSxOVaJ1dc801jBs3jmeeeYYbb7yR3bt38+abb3rlcjDUZM3TdV2uv/561q5dy+zZs0lOTk74OrX9XcCyZcv49ttv4z4L1PRZMhE1eebd33XuSZMmVfrs3HPP5YUXXuDyyy9n/vz53HfffTVek65Xrx5XX301HTp0YODAgfTr148xY8bQvn37SmEPZB6aqJqU5YQJE7j88sspLi7m4YcfJjc3l19++YW//e1v1V7jULa3eBJdn4j59ddf+fzzz3nxxRfjHj+U36WVl5+fz7fffsuOHTs44ogjuPDCCyutkU6ePJkTTjjBa5fxxu9E11xHjRrF6NGjyc7OZvz48ftMX3VzrL3H3bS0NNLT09m0aVOFebxhGMyYMYNevXrRs2dPbrjhBh5++OG4868DkUhZxvz666+cfPLJXHvttZx//vm1mo4DfWY/kO/816xZQ/fu3TFNkwsvvDBuvzjUY22iawc1mXvX1Pnnn89nn30GwIcffhg3TG09nzz88MNMnz6d7du3Y5pmld/51GSetK/1hNpYJ6rpmAqReh41alRCv3dZtmwZCxYs4O677yYYDHL++edzzTXXVApXk9/VxLunJ6Kq8kr0mWLLli28+eabvP/++3GPT5kyhU2bNsX9HdratWuZMmUKX3zxBa+99lqV11BK8dprr3HqqadSp04ddu3axcyZM+OulYfDYS699FKmTp2KaZpxYouvYcOGTJkyhe7du1O/fn1KS0uZPXt2wufHVNcODsZvr6pbPzrQZywhhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgiRmIR3ntCYKMPAMBQaF9fVaDSmaeAzfLiui9YarV3ABa1RKJQCw1C4rgZMTGVg2yGcsItlWqSmpJKcnEJGRgZbtmyhtLSUYDBEUlISSisy6tajaZNmlJWWEAoHKS0to7i4BMMwsG2bgoICfD4flmVh22F8PouSkhKKi4txHJdQKExZaRDbdvBZftJS69G8+WGAZsuWzbiug2trHBtMpbBMP7btAJH0hUM2jmsTDoXYunUbhbuLaNrYxXU0PtOH1i7hUIjk5ACOHUZrsMNhQqEgyYEADRs2JqNefdZv2EhZWRklJcWk1knGMk201igVqQLXdXBdG9DUqZNMenoaSYFktm3fSmFBEXl5ebiOi88yOax5axzHYf36DZSUFFFcXITf7/c2n/L7InkIBkOUlQXx+QK0bHk4aWlp7Ny5k+LSYgzDh9YACqUUWmscx42mKVJve+oewEUphWWZGIaBUopwOIzt2AD4fD4Mw8B1XVzXxTAVruugIxeJnGNEIzTAdA1sJ3ZcoUwDQyl09Goa7Z0baVegyiVIo9CurhC/1i6Oo3GVA4aFC4TDNirs4PNZaBS2o3G1xjJNLG14+VRA5I2KXKBc/hUKVCQd0YDRVEaDKwjbIZRS+Py+yMfKQGuN5fNTWlqGUiaWz4/tOCilMC2LYDCM1iqSdkfjupEyVoZCa4XruGg0rrunFpShARfHtSGWdx2pQ8MwUNrFtkORctQax9ZYlh+tXWzXRmsXpQwMw0QrBx09Dx0tV61BGXuKInJRTJ8PlKJBw4Y0aNgQ04jUlzJiZRFpQ4YRKQNXKy+9GlCmGbmEhrAdRmGgzEgZKcPEdhxMy8K0TAxlRMK6Lk60oJXlw9EarQy0EU2YoTAMEzda1oahImk3fWgdqWdXu2gFjorUnVIGGApcjeNGxioFGKYRqTM3MobF2qVhGJGXUrhE2qFGYxgmisi4FmuDSikM9rQplAalME0zOi6CoWJ9BBwnWugoXK2xHQiVuSQF0hCipqZOncpFF10ERDa1njBhArt27aJevXqVwl588cUcffTRPPTQQ8ycOZNOnTrRqVOnuPG+9NJLHHfccWRkZJCRkUGTJk345JNPOO644w5KPtLS0hLeHPThhx9m2rRprFy5kuOPP57BgwdXGXbw4MG88847lT4fOXIkK1eu5O23397PFFdWWFhIdnY2eXl57Nixgzlz5sQN98033/DLL79UKssVK1ZU2rhx6NChnHfeeZx44okcd9xxcTdX3ZedO3dy8cUXs3LlSizLYufOnSxdupQWLVrUOK7yRo0aRZMmTeIeKy0t5corryQ3NxfDMPj111/Jzc2tclP3c845B4COHTtiWRZbtmw54PT9f3P88cczbdo0zjrrLOrWrRs3jG3bzJ49m++++47mzZtz22238ac//cnb0DhR7dq1o0+fPgD069fP20B7b++88w7ffvstf//734FIu6hqo762bdty9NFHV3nNpKQkTj31VO+aa9asiRtu9uzZPProoxiGQZ06dTj//POZNWtWjTa6LCgoIDc319sktVOnTgwYMCBuWK01jz32GB988AG2bbN79+64m4emp6dz5JFHcu655zJ8+HCOP/74uG186NChXHvttZx++ukMHz6c7OzsSmH+/e9/s2jRIq8OILJBbmlpaYUNtLds2cJ9993H3LlzE877oZBo+oG4m0nG3H///TRr1gzDMHj77bc57rjjWLVqFampqQeUvmuuuYZrrrmGRYsWefXVoEGDCmHWrl3LzJkzWb16Nc2bN2fy5MmMGTOGr776Km6cp59+Oqeffjrr1q3jlFNO4YQTTqhyM2CtNVdeeSX16tXj2muvPaC8/FEMHjyYe++9l1WrVjFkyJC4/WnWrFmMHDmSjh07ApFnzKrGspEjR3p10q9fP5YsWXLwEv87WbFiBYZhMGLECAAGDBhAkyZNyM3NjVt+Z5xxBmlpB/9Z4pxzzuGnn35iy5YtrFy5kvT09EphanN+sL8SbSOzZs3iiSeeoLCwENd14242/nur6XgTc+SRRzJlyhTOP/98bNvm+OOPJyMjY783oa1NsTkzwGGHHca7775bKUxN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6NKlCzk5Obz44otMnDixUpiBAwfy0EMPccopp5CVlUWXLl149dVXa5zHqjiOw6JFi2jRokWtxVleTdI/YcKEKtvouHHjyMzMJDs7m+uuu4433niDunXrxg3brVs3+vXrR0FBAS1atOC8886LG+4vf/kLXbp08e4XkydPplOnTpXCnXLKKYwePZqePXuSlZXFpEmTePnll+PGOWnSJDp37kx2djbDhg1j/PjxcTdm/vrrr3niiSdYt24dffr0ITs7m1NOOSVunMcccwxjxowhMzOTTp06ceyxx3LCCSfEDVtebdzf9sfkyZO9dn3HHXfw6KOPVgrTrl07nn/+ec4991yysrLo06cPK1asOKDr3nfffbRo0YJvv/2WSy65hBYtWrB9+/ZK4dq2bcvdd9/NUUcdRbt27WjUqBGXX375PuNftmxZ3I1ua4Pf72fmzJncdddddOvWjfHjx/Pmm29WOXerzimnnEJubi7Z2dncc889NTp35MiRTJ06lZtuuokjjjiCvn37ctxxx/HEE0+QlpZW47TUZH5www03cOyxx5Kdnc22bdtqfK19yczM5KyzzqJLly706tWr2k1dD6QMy9ufPljdeLOv8fqiiy6ic+fOtG/fnrp16/LAAw/EDfdHHFMSnS8fLOeccw7jxo1j8ODBZGVlkZ2dzZw5c2ocz7Rp07wxrUuXLnTu3Jn//Oc/+9yUO56DMa+aNGkSp59+Ojk5OSxcuLDafnCgLrvsMrp370737t3Jzs6mdevWjB8/vtbiT09P57777qN379706NEDv9+/33Fde+21fP/993Tp0oXzzjuPYcOGxQ0XCAR49dVXueaaa8jMzOT555+nQ4cOceeMJ5xwAieddBLZ2dnevLK6Tbhj1q1bR3Jyco3z8Le//Y1vvvmGI488knHjxjFjxoy4awo1eT7461//yscff0zXrl0ZNGgQN998M717964Ubs6cOeTk5JCVlUVOTg5NmjSp8lmpvP25ryql+OCDD/D7/XTp0oWuXbvSrVs3Vq1aRVJSUoWwNRn3ITJnPfvss+nYsSPr16+vcgytjmVZvP/++8ycOZNu3brRpUsXLr74YkpLSyuFPZTPAffccw9nnnkmI0aMoFOnTnTu3Jl//vOfNGvWLOE4Ro4cSYcOHejQoQMDBw4kOzs7brhE1zUSmS9W5+abb6Z9+/beGBPvWaumbSBmf9cXIHIfOO2000hPT68yzIYNGxgyZAjdunUjMzOTzz77jBkzZsQNe95559GxY0eOPPJIevXqxfXXX09mZuY+07FgwYKENrwvr6SkhBYtWnDGGWewbNkyWrRowa233lop3L///W9Gjx5dZTyTJk3i+++/JzMzk6ysLBo1asR1111Xo7QcDImuHcT6bteuXavNZzzNmzfnyy+/5L333qN169b06NGDAQMGcPTRR1e5drC/JkyYQGFhIZ06dWLkyJFkZWUldJ8p77jjjuPCCy+kX79+ZGZmUlBQwF//+td9nrc/c8LFixfTt29funXrRrdu3di+fTv/+Mc/ANi2bRs7d+6MO1+qU6cOU6ZM4fjjjycrK4snnniiynHwpptuorS0lCOOOIIRI0YwefJkGjZsWG269nc9JDMzk48++ohJkybRtm1bMjMzOfXUU6lXr16lsImWc7169Xj77be55ZZb6NatG927d+frr7+uFK621mBrMm996aWXeO2118jKyuL000/nueeeq9E88lCPxxdffDHBYJALL7zQ+45gyZIlAKxatarKMXrevHl07tyZTp06cfnll/P6669Xea985plneOaZZ2jfvj0PPvggzz///EHLz8yZM705T1ZWFoFAgLvvvrtSuETXLKvTtWtXJk6cyMCBA8nJySEQCFQZdn/WZPe3z7322mt07dqVrKws+vXrx9ChQ7nkkksqhdu4cSM33HAD+fn5DB48mOzs7ArfjVQ3fiU69z3Ua0ovvvgiH3/8MdnZ2WRlZbF48WKeffbZGsdTnblz59KjRw+ys7Pp378/Dz/8cKU119pcU6mt59JE139ren+4+eabmThxovdcdscdd9CzZ0+uueaauHOjQ+n000/n0UcfZfjw4Sxfvny/4tjffjhhwgQ2bNjApEmTvLG1qrEv0f6U6PwTEn/mLa+6OUaievbsyWWXXbbf52utmTJlCh06dCArK4sePXrQo0cPrrrqqkphD2QeejDL8tprr+Xxxx9HKUXdunU5++yzyczM5Mknn+Tqq6+uNl0Ho71Vdz+t6frE1KlTufDCCyv8PuJg5Kdjx4488cQTnHrqqWRnZzNgwADGjh3LaaedVqN49vbmm2+SmZlJTk4OY8aMibu+U5M11/POO4/XX3+dnJwcnnvuuUrHq5tjlWcYBjNmzODaa6+lffv2vP/++zz2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3jspOyMd4JTNFem9PHYIdWxysn7tyHf79u3o2LEjFixYgOTk5CJ78bPT3H777UhPT8euXbswefJk3H///SFdZ/HixZg5cybWrVsX1Hn+sXTeMbXhxGo/rh2WL1+OefPm+ezRDYYPP/wQu3fvRnp6OiZNmhTRl94wHl5++WX8/fff2LVrF3bt2oUdO3agR48eAAo3t4rkem1UVBSmTp0asO+Z/WbGvffeixdffBG7d+/Gxx9/jJiYGNPjW7RooY9bjz32GDp37qx/NptDdOvWDWvWrEGHDh0K/DZw4EDs27cPu3btwrRp03DzzTfbKrvL5cLPP/+sf164cCFatGhheZ5ZWYArdmV6erqevCsczJ49G++99x6+/PJL/Prrr9ixYwdGjx5t6t/o1q2bj+2wdu3aAnOYqVOnon379rbKYDZPf+ihh/DLL78gPT0dX3zxBcaOHWs5T7OK0dm6dSu2bduGOnXq2Cof4KmP+vXr2z5e49///jcef/xxbNy4EYmJiYbHmclg+fLluqzffPNNVKxYET179jS8FhHhjjvuwOLFi5Geno7PP/8c48aN019KZUSZMmV86tXqed977z3s27cPv/32G7Zu3YrnnnsOe/fu9Tlm3LhxBZLgGzFr1iwsWbIEa9aswf79+7Fjxw48+eSTli/JmzBhAjp37oxffvkFv/zyC9atW4cGDRro7UCzbx966CH9s9GaX+fOnX1iXzds2IDWrVvr38myjO+//x5dunQxLM8jjzyC1atXY/Xq1brv7dSpU3j33Xfxr3/9y1IOmZmZGDVqFFasWIGDBw+ievXqePzxxwF48lrMnz8f+/fvx65du3D58mU8++yzltf01pFawlsgNP/nww8/jDZt2uDgwYNYtGgRbrvtNrjdbgCe9r57927s2bMHv/zyCz744IOQnzWU8eTLL7/EuHHj8MYbb+DAgQP47bffEBUVhT59+uh++nD4b0PJO7N371706NED99xzD/744w9s374dH330ES5evFjo8ni39fT0dFPb4q233sKOHTuwY8cO/PrrrxBFES+//LL+e7B6YdKkSYiPj8fu3buxfft2LF68GNu2bTM83om9dVoccnElEvukIpVLI1z5WYDwxZMXhzwG/19zMxTFcxU2X4cRRb1fwBszv28w88VwyaQo8glcrdjd3+UkwY6r4dp3GC6CfT4nc2kA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8+fP69fcsWMHlSxZkho3bkwDBgyg2rVr0913361f67bbbqP4+HhKSUmhXr16EREFvO7PP/9MnTt3puTkZGratCn16NGDsrOziYhowYIF1KBBA0pNTaXHHnuMjMyJcuXK0W233UZERIsWLaL+/fvrv3322WfUsWNH/bP3cxARzZ07l+Lj4ykxMZFuu+022rVrF3Xs2JFmz55NZcqU0Y87fPgwlStXTv/8yy+/UJ06dYiIqGPHjvThhx9S+fLlacOGDfTnn39S9erVqXr16hQfH0+pqal0//33G8rAu0zbtm3Tf2/ZsiV99913Ae+fkZFhKI+8vDyqU6cOnT17NuC5/jKoVKkSHT58uMB11q5dS61btyYiTz116NBBb0vJycn03//+Vz82JyeHpkyZQvXq1aMmTZpQQkICvfXWW4byIyLq0qWL4TP4Hy/LMk2ePJkSEhIoISGB7rnnHsrNzSUiomHDhtGLL76oH7thwwZKSUnRP/u3gXfffZduvPFGIiLasWMHJSQkUFJSEg0YMID69eunX+uPP/6g1NRUSklJoUcffZSIiDZu3Ehdu3bVr/Xaa6/RrFmzAj6DGT///DM1b96ckpKSKD4+nsaMGUN5eXmGx8+ePdu0DRn1I7N2S0T03XffUUJCgmlZt2zZQvv27Qv6GYmIjh07Rl9//bXpMXv27KEtW7aEdH0jdu7cSTt27CBVValu3bqUkZGh/+bk8yxdupSysrKCvo4sy/Tll1/SyZMnKScnh66//npKSEiglJQU6tatG/31119ERLR69Wo6efJkSGXVZEDkqxfdbjfdeOONlJCQQH379iUiot9//5369Omjt8cOHTrQsWPHiMhXX/jrnb/++otKlSqlf3ZCHkT26mjixIm6fk1LS6P169cTka8+CNSH165dS23atKHk5GRq0qQJDR06lIiC0xtG97ZT7j///JPWr19PiqLYE44XGRkZ9NFHH5ke4y3LX3/9ldq3b6//ZqZ3nKg7//sROdeGnZLba6+9RjNmzLA8pzB66Z9//qFVq1YREdHUqVN9xsoLFy7QZ599ZqrviXz73X//+19q2LAhpaSk0M6dO8ntdtOsWbMoMTGRkpKSKCkpid577z0iKjge3nTTTbRo0SL9c9euXXVZrF+/no4cOWJajnDJ4amnntL7UHJyMi1btoyIiAYOHKh/365dO9q1axcR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N9UcYz9uecPXnaGtjddZl5a6F0Zb2y605Wufra2s2/r5kS3zt7byrU9L9D/Y1k28AZpLS/Q/2ZHxk1uLtrRv2paWrnftym07t6duX9d72nq/8e05rqzrPbvjOOPumbj9mrMNUWs7X9NcWnvbzvraUm46duvOvCdNXfv2lmgr0lIae9324x//eHHDDTe0TKhGWrZsWXH44Yc3uO3fldo5blpfa8x5Hm0FWr+mbk/a8m+xKHbsOmtLaOjzqG98yN2hfelGjWmn1dzH+K3hu9Na7pfW1q5vNlWSYu3atTseahPaUDWsrV8/au3ayjnDXeEcxK58vnFHtZXvYVs4fmtL28zGtlFrLfWc5rAz6r9lRVEUAQDavH79+mXZsmUZM2ZMrr766hx88MEZMmRIpk+fnj322COf+MQn0qFDh+y333753Oc+lylTpmTOnDm59tpr884776Rjx4655pprUl1dndmzZ2fu3LnZb7/9snLlyuy9996ZNWtWvvrVr+app57KwQcfnPnz56djx4515unWrVsWLlyYmpqaXHPNNbn55puzcOHCvPvuu/n85z+f1atX56233srpp5+eb37zm7ntttty3XXX5Sc/+UmS5N13381hhx2WH//4x3n/+9+f8847L/Pnz69dz4ZsLIcrr7wy48aNy6BBg3LllVfm4IMPTpL8/ve/zwUXXNA8hd9Ib7/9dq6//vp89rOf3a73n3DCCVm/fn3mzJmTD33oQ82crm1av359brjhhu0uUwCgZZxyyin5zW9+kwULFqS6unqnLOOiiy7K97///cyYMSMTJ07cKctg9zFz5szMmDEjn/3sZ/OVr3yl1HFoJfr27Zsrr7wyQ4YMKXWUJC2zbd3SBRdckI4dO+biiy9ukeU1xLa/7Vi+fHnOOOOM9OzZMwsWLEi7du1KHanVK8VvnO3jswLYPV177bVZvnx5Zs+eXeooSRzH7oiN11NHjRpV6iibmTRpUmpqajJ9+vQWW2ZrLQsAAEqrNdYTf/nLX+bss89OURR5++238+lPfzpf+MIXSh0LgE1s2o68ucyePTsLFy7MwoULm22e2+vSSy/NLbfcknfffTedOnXKtddem6OPPrrUsQAaZWdsowFaU12Ntqct7JsWL17cqPbDq1evTk1NTdatW7fTM7UGS5cuzf/+3/87HTp0yH333VfqOC1i9OjRefHF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zWPZsmVJkvnz52/12mmnnZaRI0empqYm06dPT5I89NBDuemmm/LAAw+kffv2efDBB3PmmWfm17/+de38Hn/88XTt2jUTJkzIxz72sSxZsiT7779/RowYkR/84AeZNm1avZnWrVuXhx9+OK+++mq6d++eyZMnp0uXLpkwYULOP//8JMnSpUszadKkPPXUU7Xv+/Of/5wlS5bkmWeeSe/evfPVr341Dz/8cJYtW5bTTjstZ5xxRtatW5dPf/rTufvuu/PBD34wr776ao4++ugMGjQoXbp0qS2Pjf8nyUUXXZQDDzwwU6dO3Srr1VdfnSQZNGhQvev0j//4jzniiCMyf/78vPzyyznmmGNSXV2dAQMGJElee+21PPLIIykrK8vixYszffr0rFixIkny6KOPpn379qmsrKx3GU8++WS++93v5vrrr6+d5/jx41NWVpbVq1dnwIABee655zJlypTMnTs306dPz6hRo5Iks2fP3mxeTz31VK6//vp897vfzcyZM/PVr3419957b9q1a5d58+Zln332SVEUOffcc3PNNdfky1/+cmbOnLlZ7u0tKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDXV1HqAABAadxxxx1ZuXJl+vfvX/vc66+/nrfeeitJMnDgwHTt2jVJ0rdv37zzzjvZf//9kyT9+vXLb3/72waXceaZZyZJ9t133xx22GFZtWpVunTpksceeywzZszIa6+9loqKijz99NN566230qFDhyTJuHHjkiQ9evTInnvumbFjx9bmeP3117Nu3bosWbIkzz77bE499dTNlvn000+nS5cu28xzySWXNLp86nLfffflf/7nf5Ikf//3f58xY8bkvvvuy4ABA5IkkyZNSllZWZ3v3/S1t956KwMHDszbb7+dAw88MPfdd1+S5LDDDssJJ5xQO92qVaty1lln5fnnn09FRUVef/31rFq1KpWVlQ3m7dGjR+1nPHDgwFx55ZVJkqIo8u1vfzv//d//nQ0bNuSNN97IoEGDmlgaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwO6uotQBAIDSKIoiEydOzKWXXrrN1/fcc8/av9u1a7fV4w0bNjS4jG295+23386YMWOyaNGi9OvXL//v//2/7LXXXvnrX/+aDh061LvssrKylJWVZcOGDSmKIlVVVVmyZEnTVryZlZWVbfa4Y8eOdU7bs2fPrF+/Pk8//XSOOOKIdOjQIStWrMjixYszffr0Oudxxhln5LLLLsvYsWOTJJ07d8769esbla+uz23evHn5+c9/nvvvvz+dOnXKd77znfz85z9v1DwBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANiovdQAAoGV06tQpb7zxRu3jkSNHZu7cuVmzZk2S5L333svy5ct3eo7169fn7bffTteuXZMk11xzzXbNZ9CgQVm1alXuu+++2udWrFiRt99+u1ly1mXYsGH5z//8zyTJK6+8kvnz5+ekk07a5rRblnnHjh1z/vnnZ8qUKXnhhRdqn//zn/9c7zLXrl2bQw89NEkyd+7crF27ts5lNNbatWuz7777plOnTvnTn/6U2bNn79A8H3300XzkIx9pcg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgbSsvdQAAoGVMmDAht956a/r06ZNZs2Zl8ODBufzyyzN69OhUV1enqqoqN998807P0alTp3zzm9/Msccem2OOOSZ77LHHds3nAx/4QP77v/87l156aaqrq9OzZ898+ctfznvvvVfney666KLMnDlze6MnSb7zne/kySefTO/evTN06NB89atfTf/+/bc57VFHHZWqqqr06tUrI0eOTJLMmDEjY8eOzSmnnJLKysocd9xxueaaa/Ktb32rzmVeffXVGTt2bPr06ZPHHnssXbt2rX3t05/+dC699NLU1NTk7rvvbvR6nH322fnLX/6SI444IqeeemoGDx5cb+6GrF69Oh06dGj08gEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBdQ1lRFEWpQwAA0LZNmzYt48ePz3HHHVfqKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEALKiuKoih1CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqeilIHAADarksuuSTz58/f6vnbb7893bt3L0EiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFpSWVEURalDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0PaUlzoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbVN5qQMAAM2jW7duSZIhQ4Zk9erVSZIpU6Zk0aJFSZKFCxdm6dKlJUrXOLNnz86oUaN2aB6rV6/OkCFDkvz/ZdKQjWU2adKkLF68OJdddlmuvPLKRi/zK1/5SiorK1NdXZ2+ffvm3nvvrX3tvffeyz/+4z+me/fu6dGjR6699tqmrM5WvvOd76RXr17p3bt3jjrqqMydO7fOae+555707ds3Rx11VAYMGJCVK1fWvvbyyy/nlFNOyeGHH55evXrlgQceqH1ty/IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqEtFqQMAADvPrFmzav9euHBhampqMmDAgBImahtGjRqVKVOm5IILLmjU9IMHD87Xvva1dOjQIStXrszxxx+fF198Me973/syd+7cPPHEE/nNb36TN954I3369MnQoUNTVVW1Xdmqqqry0EMPZa+99srvf//79OnTJwMHDkz37t03m27t2rU566yz8sADD6SqqioPPvhgzjrrrPzqV79Kknz5y1/OgAEDcs8992TZsmUZPXp0Vq1alb/7u7/brlwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADA7qm81AEAgOax3377JUk6d+6cdu3aJUmGDBmShQsX5u67786dd96ZK664IjU1NZk1a1aSZM6cOenfv3+OPvroHH/88Vm5cmWSZPbs2Rk2bFjGjx+fnj17ZtCgQXniiScyevToHHnkkRk+fHjefPPNOrPceOONGTFiRO3joihy2GGHZeXKlXnppZcydOjQHHPMMamqqsrnPve5vPfee1vNY/Hixampqal9/Ktf/SrdunWrfXzvvffmuOOOyzHHHJNjjz02ixYtSpK0a9cunTt33qxMGrKxzPbaa6/sscceqayszNq1a/Pyyy/XTtOtW7esWLGi9nHfvn2zePHiJMmpp56aDh06JEl69+6doijyyiuvJEluueWWnHPOObW5xo0bl5tuuilJMm/evPTv3z99+vRJdXV17rrrrtr5v/DCCxk7dmx69+6do446Kl/72teSJB/5yEey1157JUkOPvjgHHDAAfn973+/1Tr97ne/yz777JOqqqokyeDBg7NmzZr83//7f5Mkt956a6ZOnZok6devXw488MDcf//92ywPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgLpUlDoAANA8li1bliSZP3/+Vq+ddtppGTlyZGpqajJ9+vQkyUMPPZSbbropDzzwQNq3b58HH3wwZ555Zn7961/Xzu/xxx9P165dM2HChHzsYx/LkiVLsv/++2fEiBH5wQ9+kGnTpm0zy5gxY3LeeeflpZdeygEHHJDFixfnAx/4QKqrq7N+/frcdddd6dixY959992cfvrpufXWW3PGGWc0el2fffbZXHzxxbn33nvTqVOnPPPMMxk8eHBWr16dgw8+uLYMNpZJkkyZMiUjR47MyJEjt5rfxumvvvrq2udGjhyZO+64I+ecc06jcyXJDTfckMMOOyyHHHJIkmTNmjW1fydJt27dsnTp0iTJySefnPHjx6esrCyrV6/OgAED8txzz6V9+/b5xCc+keHDh+e2225LkrzyyitbLeu+++7L2rVr069fv61eO/zww/Paa69lyZIlGTRoUO6888786U9/yurVq3PIIYfknXfeyQEHHLBZrjVr1tRZHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADbUlHqAABAadxxxx1ZuXJl+vfvX/vc66+/nrfeeitJMnDgwHTt2jVJ0rdv37zzzjvZf//9kyT9+vXLb3/72zrn3aFDh3z84x/PnDlz8n/+z//J7NmzM3ny5CTJe++9ly996Uv5xS9+kaIo8vLLL6dXr14544wzGp39nnvuyTPPPJPjjz++9rny8vKsWbMmhx9++DbfM2vWrEbPP0lGjx6dr3/96znnnHMa/Z6f/exn+frXv56f/vSnKSsra3D6VatW5ayzzsrzzz+fioqKvP7661m1alUOOuig/OIXv8i9995bO+1+++232Xsff/zxTJ48Obfcckve9773bTXvvfbaK7fddlsuvPDCvPnmmxk4cGB69uyZigrVPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKD5VJQ6AABQGkVRZOLEibn00ku3+fqee+5Z+3e7du22erxhw4Z65//JT34ykydPzmc/+9n86Ec/yre//e0kyb/927/l5ZdfziOPPJI999wz559/ftavX7/V+ysqKvLuu+/WPt50mqIoctJJJ2XevHmNW9nt0K9fvzz11FP505/+lPe///315kmS+++/P5MnT85dd92VI444ovb5rl275rnnnsvAgQOTJKtXr07Xrl2TJGeccUYuu+yyjB07NknSuXPnbZbFlp544omMGDEi3//+93PcccfVOd3QoUMzdOjQJMlf//rXHHDAAenZs2f22WefVFRU5KWXXsoBBxywVS4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAxiovdQAAoGV06tQpb7zxRu3jkSNHZu7cuVmzZk2S5L333svy5cubbXn9+/dPklxwwQUZNmxYOnfunCRZu3ZtDjjggOy555556aWX8sMf/nCb7z/ssMPy3HPP5ZVXXkmSzJkzp/a1k08+Offdd19++ctf1j736KOPNlv2JCkrK8spp5ySH//4x0mSHj165JFHHqld1tNPP1077QMPPJAJEybkjjvuSHV19Wbz+Yd/+If853/+Z9599928/vrrueWWWzJu3LgkfyuLQw89NEkyd+7crF27NknSsWPHHH/88fnXf/3X2vlsLIcnn3wyp512Wq677rqcdNJJmy3r0UcfzUc+8pHax3/4wx9q//7GN76RE088MT169KjNNXPmzCTJsmXL8sILL+SEE06oszwWLFiQs88+u8FyAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHYv5aUOAAC0jAkTJuTWW29Nnz59MmvWrAwePDiXX355Ro8enerq6lRVVeXmm29u1mVOnjw53/ve9zJ58uTa584777w88sgjqaqqyoQJEzJs2LBtvvfAAw/MF7/4xRx77LEZMGBAOnfuXPtajx49Mm/evHzmM59JdXV1jjzyyFx11VX1ZpkyZUruvPPOJuUfNWpUFixYkCT55je/mX//939PdXV1vv/976eqqqp2uk996lP561//msmTJ6empiY1NTV5/PHHk/yt3CsrK3P44YenX79+Of/889O7d+8kydVXX52xY8emT58+eeyxx9K1a9faec6ZMyfLly9PVVVVampqcu211yZJPv/5z+eNN97Il770pdpl3XvvvUmS1atXp0OHDrXzuOiii1JZWZkePXrkueeey/XXX1/72r/8y79kyZIlOfzwwzNp0qTMnTs3f/d3f1dnWfz2t79Np06dmlR+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwK6vrCiKotQhAABao3feeSeHH354fvOb32SPPfYodZwGTZs2LePHj89xxx3X7PMeNWpUrrrqqnTr1q3Z5w0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0XWVFURSlDgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDbU1HqAABA23XJJZdk/vz5Wz1/++23p3v37iVIBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBLKiuKoih1CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANqe8lIHAACaR7du3ZIkQ4YMyerVq5MkU6ZMyaJFi5IkCxcuzNKlS0uUbufbcv2WL1+ecePGJUnWrVuXyy67rNHz2liWG/9vyKRJk7J48eJcfPHFmT17dpJk2bJlGTRoUP7X//pfGTVq1GbTz549OxdffHEWL16cSZMmNToXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQGtTXuoAAMDOM2vWrAwdOjRJsnDhwixdurTEiXaeLdevb9++ueWWW5Ik69aty2WXXdaieT74wQ/mqquuyre//e0WXS4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABASyovdQAAoHnst99+SZLOnTunXbt2SZIhQ4Zk4cKFufvuu3PnnXfmiiuuSE1NTWbNmpUkmTNnTvr375+jjz46xx9/fFauXJkkmT17doYNG5bx48enZ8+eGTRoUJ544omMHj06Rx55ZIYPH54333yz3jxLlixJTU1NevXqlcmTJ6empiaLFy/eLNdGY8eOzezZs5Mk8+bNS//+/dOnT59UV1fnrrvuqp1uyJAhueCCCzJ48OB07949U6dOTZJtrt/ixYtTU1OTJJk6dWr+9Kc/paamJn379s3y5ctTWVmZoihq5z1o0KD8+Mc/3qwsN/7fkL322it77LFHOnbsmA4dOiRJDjrooBx77LFp3779VtN36NAhHTt2zB577JG99tqrUcsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaI0qSh0AAGgey5YtS5LMnz9/q9dOO+20jBw5MjU1NZk+fXqS5KGHHspNN92UBx54IO3bt8+DDz6YM888M7/+9a9r5/f444+na9eumTBhQj72sY9lyZIl2X///TNixIj84Ac/yLRp07aZ5e233864ceNyww03ZNiwYfnJT36S2bNnN2o9Tj755IwfPz5lZWVZvXp1BgwYkOeeey7t27dPkvzud7/LokWL8s4776Rnz555+OGHt7l+ixcvrp3nzJkzU1NTkxUrVtQ+t88+++SnP/1phg8fnsceeyyvvPJKTjnllM3KcuP/SXLRRRflwAMPzNSpU7fKfPXVVydJBg0a1Kh1HDduXO3fjX0PAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQGtUUeoAAEBp3HHHHVm5cmX69+9f+9zrr7+et956K0kycODAdO3aNUnSt2/fvPPOO9l///2TJP369ctvf/vbOuf91FNPpaKiIsOGDUuSDB8+PIcddlijcq1atSpnnXVWnn/++VRUVOT111/PqlWrUllZmSQZN25cKioqUlFRkZqamvzud7/LwIEDm7z+5513Xq699toMHz48//7v/55zzz03ZWVldU5/ySWXNHkZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALu68lIHAABKoyiKTJw4MStWrKj994c//CEdOnRIkuy5556107Zr126rxxs2bGjS8srKymr/rqioyLvvvlv7eP369bV/n3HGGZkyZUp+9atfZcWKFenYseNmr+9ojo3GjBmTX/7yl3nsscdy5513ZvLkyds1HwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIDdWXmpAwAALaNTp0554403ah+PHDkyc+fOzZo1a5Ik7733XpYvX94sy6qsrMyGDRuyaNGiJMl9992X3/3ud7Wv9+jRI4888kiSZNWqVfnFL35R+9ratWtz6KGHJknmzp2btWvXNmqZW67flq+99dZbefvtt2ufq6ioyNSpUzNy5MiMHj06e++9d5PWEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICkvNQBAICWMWHChNx6663p06dPZs2alcGDB+fyyy/P6NGjU11dnaqqqtx8883Nsqw99tgjt9xyS77whS+kd+/emTdvXqqrq2tf/+IXv5hFixald+/eufDCC9O/f//a166++uqMHTs2ffr0yWOPPZauXbtu1/ptqnPnzjn77LNz1FFHpW/fvrXPf+pTn8oLL7yQz33ucw3O/6KLLsrMmTMb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\n","text/plain":["\u003cFigure size 1200x600 with 2 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["OCR Text:\n","[ ' C A V A L I E R E ' ,   ' R e s t a u r a n t ' ,   ' 1 0 1 0 . K 6 l n e r h o f g a s s e 4 ' ,   ' T e : 5 1 3 8 3 2 0 ' ,   ' T i s c h 1 0 ' ,   ' T o r t   G r a t i n a t i ' ,   ' 8 , 9 0 ' ,   ' P e n n e   C r e n a   F o m a r a g g ' ,   ' 0 6 6 3 ' ,   ' C a p r e s e   C l a s s i c a ' ,   ' 7 3 0 ' ,   ' 1 / 8 P i n o t   G r i g i o ' ,   ' 3 , 6 0 ' ,   ' C o c a   C o l a ' ,   ' 2 , 9 0 ' ,   ' S a l d o ' ,   ' 3 2 , 6 0 ' ,   ' U m s a t a   1 0 %   i n k l ' ,   ' 2 6 ...\n"]}],"source":["import torch\n","from transformers import AutoModelForCausalLM, AutoTokenizer\n","from datasets import load_dataset\n","import json\n","import matplotlib.pyplot as plt\n","import random\n","\n","class FineTunedDollyLLM:\n","    def __init__(self, model_path):\n","        self.model = AutoModelForCausalLM.from_pretrained(model_path)\n","        self.tokenizer = AutoTokenizer.from_pretrained(model_path)\n","        self.tokenizer.pad_token = self.tokenizer.eos_token\n","\n","    def generate(self, prompt, max_length=1024):\n","        inputs = self.tokenizer(prompt, return_tensors=\"pt\", padding=True, truncation=True, max_length=512)\n","        attention_mask = inputs['attention_mask']\n","        with torch.no_grad():\n","            outputs = self.model.generate(\n","                inputs.input_ids,\n","                attention_mask=attention_mask,\n","                max_length=max_length,\n","                num_return_sequences=1,\n","                no_repeat_ngram_size=2,\n","                pad_token_id=self.tokenizer.eos_token_id\n","            )\n","        return self.tokenizer.decode(outputs[0], skip_special_tokens=True)\n","\n","def extract_structured_data(content: str, llm):\n","    prompt = f\"Extract information from this invoice:\\n{content}\\n\\nExtracted information:\"\n","    results = llm.generate(prompt)\n","    return results\n","\n","def display_image_and_data(image, true_json, pred_json):\n","    plt.figure(figsize=(12, 6))\n","\n","    # Display image\n","    plt.subplot(1, 2, 1)\n","    plt.imshow(image)\n","    plt.axis('off')\n","    plt.title('Invoice Image')\n","\n","    # Display JSON data\n","    plt.subplot(1, 2, 2)\n","    plt.axis('off')\n","    plt.text(0, 1, \"Ground Truth:\", fontsize=10, fontweight='bold')\n","    plt.text(0, 0.95, json.dumps(json.loads(true_json), indent=2), fontsize=8, verticalalignment='top')\n","    plt.text(0, 0.5, \"Model Prediction:\", fontsize=10, fontweight='bold')\n","    plt.text(0, 0.45, pred_json, fontsize=8, verticalalignment='top')\n","\n","    plt.tight_layout()\n","    plt.show()\n","\n","def main():\n","    # Path to your fine-tuned model\n","    model_path = \"/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/fine_tuned_model\"\n","\n","    # Initialize the LLM with your fine-tuned model\n","    llm = FineTunedDollyLLM(model_path)\n","\n","    # Load the dataset\n","    dataset = load_dataset(\"mychen76/invoices-and-receipts_ocr_v1\")\n","    test_dataset = dataset[\"test\"]\n","\n","    # Select a random sample from the test set\n","    sample = random.choice(test_dataset)\n","\n","    # Extract data\n","    raw_data = json.loads(sample['raw_data'])\n","    true_parsed_data = json.loads(sample['parsed_data'])['json']\n","\n","    ocr_text = ' '.join(raw_data['ocr_words'])\n","    pred_parsed_data = extract_structured_data(ocr_text, llm)\n","\n","    # Display image and data\n","    image = sample['image']  # The image is already a PIL Image object\n","    display_image_and_data(image, true_parsed_data, pred_parsed_data)\n","\n","    print(\"OCR Text:\")\n","    print(ocr_text[:500] + \"...\" if len(ocr_text) \u003e 500 else ocr_text)  # Print first 500 characters of OCR text\n","\n","if __name__ == '__main__':\n","    main()"]},{"cell_type":"code","execution_count":7,"metadata":{"executionInfo":{"elapsed":338,"status":"ok","timestamp":1721589122986,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"OOAzBdHOhvEk"},"outputs":[],"source":["import torch\n","from transformers import AutoModelForCausalLM, AutoTokenizer\n","from datasets import load_dataset\n","import json\n","import matplotlib.pyplot as plt\n","import random\n","from PIL import Image\n","import os\n","\n","class FineTunedDollyLLM:\n","    def __init__(self, model_path):\n","        self.model = AutoModelForCausalLM.from_pretrained(model_path)\n","        self.tokenizer = AutoTokenizer.from_pretrained(model_path)\n","        self.tokenizer.pad_token = self.tokenizer.eos_token\n","\n","    def generate(self, prompt, max_length=1024):\n","        inputs = self.tokenizer(prompt, return_tensors=\"pt\", padding=True, truncation=True, max_length=512)\n","        with torch.no_grad():\n","            outputs = self.model.generate(\n","                inputs.input_ids,\n","                max_length=max_length,\n","                num_return_sequences=1,\n","                no_repeat_ngram_size=2,\n","                temperature=0.7,\n","                top_k=50,\n","                top_p=0.95,\n","                pad_token_id=self.tokenizer.eos_token_id\n","            )\n","        return self.tokenizer.decode(outputs[0], skip_special_tokens=True)\n","\n","def extract_structured_data(content: str, llm):\n","    prompt = f\"Extract information from this invoice:\\n{content}\\n\\nExtracted information:\"\n","    results = llm.generate(prompt)\n","    return results"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":38867,"status":"ok","timestamp":1721589185230,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"O8MOArHcpLFn","outputId":"7225bbc2-a2b1-4148-d9a5-b540eacf1453"},"outputs":[{"name":"stderr","output_type":"stream","text":["Special tokens have been added in the vocabulary, make sure the associated word embeddings are fine-tuned or trained.\n"]}],"source":["# Path to your fine-tuned model\n","model_path = \"/content/drive/MyDrive/invoice_processing_using_Dolly_7B/results/fine_tuned_model\"\n","\n","# Initialize the LLM with your fine-tuned model\n","llm = FineTunedDollyLLM(model_path)\n","\n","# Load the dataset\n","dataset = load_dataset(\"mychen76/invoices-and-receipts_ocr_v1\")\n","test_dataset = dataset[\"test\"]\n","\n","# Select a random sample from the test set\n","sample = random.choice(test_dataset)"]},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":522,"status":"ok","timestamp":1721589189209,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"NcLfHRtqpvWN"},"outputs":[],"source":["# Extract data\n","raw_data = json.loads(sample['raw_data'])\n","true_parsed_data = json.loads(sample['parsed_data'])['json']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"J1n_goMlp02O"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/transformers/generation/configuration_utils.py:540: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.7` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/transformers/generation/configuration_utils.py:545: UserWarning: `do_sample` is set to `False`. However, `top_p` is set to `0.95` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_p`.\n","  warnings.warn(\n","The attention mask is not set and cannot be inferred from input because pad token is same as eos token.As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.\n"]}],"source":["ocr_text = ' '.join(raw_data['ocr_words'])\n","pred_parsed_data = extract_structured_data(ocr_text, llm)"]},{"cell_type":"code","execution_count":9,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":611},"executionInfo":{"elapsed":978,"status":"ok","timestamp":1721588725995,"user":{"displayName":"Asheer Mogal","userId":"06246294887214736715"},"user_tz":240},"id":"j169JwGXry4c","outputId":"6a094cb2-270b-4e25-cca8-1dbbdf8c8e42"},"outputs":[{"data":{"image/png":"\n","text/plain":["\u003cFigure size 640x480 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Actual JSON:\n","\"{\\\"store_name\\\": \\\"57EXPRESS\\\", \\\"store_addr\\\": \\\"3111WTEMPLEAVE POMONA,CA\\\", \\\"telephone\\\": \\\"\\\", \\\"date\\\": \\\"03/08/2015\\\", \\\"time\\\": \\\"\\\", \\\"subtotal\\\": \\\"\\\", \\\"tax\\\": \\\"\\\", \\\"total\\\": \\\"$65.19 $65.19\\\", \\\"ignore\\\": \\\"\\\", \\\"tips\\\": \\\"\\\", \\\"line_items\\\": [{\\\"item_key\\\": \\\"\\\", \\\"item_name\\\": \\\"REGULAR\\\", \\\"item_value\\\": \\\"3.479\\\", \\\"item_quantity\\\": \\\"1\\\"}, {\\\"item_key\\\": \\\"\\\", \\\"item_name\\\": \\\"\\\", \\\"item_value\\\": \\\"$55.19\\\", \\\"item_quantity\\\": \\\"1\\\"}]}\"\n","\n","Predicted JSON:\n","Extract information from this invoice:\n","['5 7 E X P R E S S ',  '3 1 1 1 W   T E M P L E   A U E ',  'P O M O N A ',  'C A ',  '0 3 / 0 8 / 2 0 1 5 ',  'I N V O I C E ',  'A U T H ',  'R E F ',  'P U M P # ',  '7 ',  'R E G U L A R ',  '1 5. 8 6 3 G ',  'P R I C E / G A L ',  '3. 4 7 9 ',  'F U E L T O T A L ',  '$ ',  '5 5. 1 9 ',  'U l t i m a t e ',  '$ ',  '1 0. 5 6 ',  'T o t a l = $ ',  '6 5. 1 9 ',  'C R E D I T ',  '$ ',  '6 5. 1 9 ',  'B a t c h S e q   N u m ',  'T e r m   I D : 7 ',  'Z I P   E N T E R E D ',  'W o r k s t a t i o n   I D : 0 0 ',  'W A N T   F R E E   G A S? ',  'R E G I S T E R   T O   W I N   A T ',  'W W W. G A S V I S I T. C O M ',  '* * * * ',  'Y o u r   c a r   w a s h ',  'c o d e i s 6 6 1 7 6 0 ',  'E x p i r e s 4 / 0 7 / 2 0 1 5 ',  '* * * * * * *']\n","\n","Extracted information:__s_item_\u003e\u003c_name_\u003e_\u003c/_\u003e\u003c/\u003e\u003c\u003e\u003cs\u003e\u003citem\u003e\u003c\\\":\u003e\u003c \\\"\u003e\u003c\\\",_\\\":_ \\\"_key_/\u003e\u003c\u003e\u003e\u003cvalue_quantity_\\\",sitemss\\\": \\\"item\\\":item \\\"s \\\" \\\"\\\":s\\\",\u003e\u003ckey\u003e\u003cname\u003e\u003c\u003c/\u003e\u003c.\u003e\u003cquantity\u003e\u003c/_sep\u003e\u003c\u003e\u003c/_value\u003e\u003csep_00\u003e\u003clabel\u003e\u003c '\u003e\u003c':itemkeys\u003eitemvalues\u003c/item\u003eskeyitemitemnameitemquantitysvalueitem\u003c/s\u003e\u003c/item\u003e\u003c/sname\u003e \\\"\u003c/quantity\u003e\\\":\u003c/\u003e\u003e\u003c/\\\":\u003e\\\", \\\"\\\",item\\\",\u003c/\\\":\\\":\\\",\\\":quantity \\\"\u003equantity\\\":value \\\"\u003e\u003c/ \\\"quantity\\\",quantityitemsep\\\":label_labelsquantityquantity\u003c/ \\\"value\\\":\u003e\u003c/\u003esep \\\"key\\\":/s/itemlabel \\\"label\\\": '_':_._ 'item': \\\"':s':\\\":key \\\"sep\\\",\\\",value\\\",\u003ekeyquantitylabelitem'slabelquantityvaluequantitykey\\\",keysepitem. \\\"name\\\":names.item/\u003e\u003c/quantity\u003e\u003c/\\\",\u003e\u003c/value\u003e\u003c/key\u003e\u003evaluekey\u003c/name\u003e\u003c/label\u003e\u003c/\u003c/value\u003e\u003c/name \\\"'\\\"/ \\\".sseps '\u003e\u003c/sep\u003e\u003c/key\u003e\u003c/\u003e\u003c/.\u003e 'quantity':\u003e\u003ccription\u003e\u003c00_1_',_'},_store_total\u003e\u003cstore\u003e\u003ctotal\u003elabel\u003c/\u003e\u003c/store\u003e\u003c/00\u003e\u003c/ '\u003e.quantity.\u003e\u003c/':\u003enamequantitysep\u003c/sep\u003estores',sstore \\\"00\\\":.\\\":storeitemstorekeylabel\\\",storequantityname\\\",labelkeystorenamekeyvalue\u003c/store\u003e00s,_Store_addr_line_,\u003e\u003caddr\u003e\u003cline\u003e\u003cStore\u003e\u003ctime\u003e\u003cdate\u003e\u003c1\u003e\u003c5\u003e\u003c\\\"\u003e\u003c,saddr\\\":addrslineitemaddrquantitystore\\\":':\\\",nameaddritem-_-\u003e\u003c-s-itemStoresdate_time_5_trans_dates00itemtotal_cription_sub_items_ignore_tax_\":\u003e\u003csub\u003e\u003ctrans\u003e\u003c\":_B_0_\",_phone_ips_2_ {'_tele_10_:\u003e\u003ctele\u003e\u003cphone\u003e\u003c',\u003e\u003c\",\u003e\u003c'},\u003e\u003cB\u003e\u003cips\u003e\u003c:itemsubscriptionitemtimekeykeyname\u003c/\u003c/label\u003e':\u003c/.key.storevaluenamevalue':keyaddrkey-store\\\",/\u003c/sub\u003e\u003c/ips\u003e\u003c/line\u003e\u003c/Store\u003e\u003c/addr\u003eaddr\u003c/line\u003eStoreitem00 \\\"storeaddr\\\",addrvaluestore\u003c/date\u003e\u003c/time\u003e\u003c/trans\u003e\u003c/sub\u003etotals\":item,itemtranss\\\"_\\\"\\\":sepstorestore.\\\",sepkey00key/\\\":\\\"\\\",.\u003c/\\\",':sepvaluesepaddrstore/storesepnamestorelabel/key':storeline\\\":00\\\",00\u003c/':\u003e\u003c/\n"]}],"source":["from PIL import Image\n","import matplotlib.pyplot as plt\n","import json\n","\n","# Display the invoice image\n","img = sample['image']  # Directly use the image as it's already a PIL.Image object\n","plt.imshow(img)\n","plt.title('Invoice Image')\n","plt.show()\n","\n","# Print actual and predicted JSON outputs\n","print(\"Actual JSON:\")\n","print(json.dumps(true_parsed_data, indent=4))\n","print(\"\\nPredicted JSON:\")\n","print(pred_parsed_data)\n"]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyMCM/ciEuFzmf2jdiYHrKRx","collapsed_sections":["6t5hDoFTwKeE"],"gpuType":"L4","machine_shape":"hm","name":"","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"00950291acff47f0b45494eb5a86fe20":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"03322d28b9f74274bb8922dce0665b91":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0391bca041ba45a393594de698372a51":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"045a6bf116574f5a97c2bf901b2b6ee5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"047048751df4430e94dd64dd6fcb7c7a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"05fa40383a764f2aa18f120c9b2377bb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b27fc4089ed2490b8d35e5372cef415f","IPY_MODEL_642d9c4a4fb241638557d2539f40c813","IPY_MODEL_d8402ff822114a65a8aeb4e03f6249eb"],"layout":"IPY_MODEL_9159d8bb56ac42cdb2720956045f9e22"}},"06ea447b37db4be7b6d6e52bde1f5417":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0b006cce995d4dafafe486ed726811aa":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0cbadd20e07f40eb9fb94ad42c26a1e9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0dd1df1816e7428391bb745c3db3fe44":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0e43d85ad21c4bb39f355b1d20a57d8b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0f7731e00c1f430d85ae828668627222":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"107d9073363b46e4b0d73c491c59a273":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_50bb9ac33a4147e99b227b31e102b408","placeholder":"​","style":"IPY_MODEL_2afb48d892b44d5aa574f5a364583409","value":"Generating train split: 100%"}},"1082fc50d7954d4ab8e55176264da4ab":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1113299c996b43289d7a4260d8284707":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a5f3e7cada784c6b88a7de1fed668ace","placeholder":"​","style":"IPY_MODEL_d6a2fe9bdd534338bc99ad0bb5f02d6b","value":" 2043/2043 [00:03\u0026lt;00:00, 603.80 examples/s]"}},"123f163fcda3478087589c61e343e2bd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"131b4679c5214bd68b5a9835e2111a4a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"137920d44a414e0b91ebc8e33b1930a0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"138b0f5f60dd42b092c7e0d46df4ac09":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"140ded61fd4943799c0968c04381f930":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"16b17a533d1f4dc5849333f67f015a58":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fdc1fee90905496d8e1d06766c75e284","placeholder":"​","style":"IPY_MODEL_ee71c0b126b04dc79630ca3fd7d190ac","value":" 782/782 [00:00\u0026lt;00:00, 69.2kB/s]"}},"17d5e7c8230f4f7d98b9f90bff71b17a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"195cfda94b8d4910a6d216ac0f11cf96":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a3e6ec6573942a6a1bec9992a1c3368":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_559554c369b843b2be6d3080d9c03678","IPY_MODEL_3680f1f3e1404ed1858a0cf4b984f63c","IPY_MODEL_a505cbfa56c5447f8b596fda8670e420"],"layout":"IPY_MODEL_7e96edcf34624502b7c0c7c24d3198d8"}},"1ab26e3f55b1452486da4622b18b6b6f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_56c31c15141a453ab585864d6952e550","IPY_MODEL_420789bd9e0d425d97eec8582eab67ec","IPY_MODEL_1ebc83e7da8f4a2f82414380d23aa753"],"layout":"IPY_MODEL_06ea447b37db4be7b6d6e52bde1f5417"}},"1ab8045c37aa43a1b26526a939e564bc":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_451c1587d790403287073071e2938e25","max":125,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0391bca041ba45a393594de698372a51","value":125}},"1c978e4ddf2946e2ba2dc1aaf1bd83a4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f3e7332712b54681908c3cd336d404fa","placeholder":"​","style":"IPY_MODEL_b5f98ff7b61e43b3a18690b97e068c2a","value":" 228/228 [00:00\u0026lt;00:00, 18.8kB/s]"}},"1d95944d060a49138f6bc5dfdbab4229":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1dc56957b44c4177a23e3938ae664718":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2ca71517abac4b39a8039b34a59ad347","placeholder":"​","style":"IPY_MODEL_90cad2d652374c5eb351d5587d6dfbf8","value":"Generating test split: 100%"}},"1e45dd4bbf784803b4bbe434e18cf78e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1ebc83e7da8f4a2f82414380d23aa753":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7128abbf17904f2582cf4a80863b5349","placeholder":"​","style":"IPY_MODEL_9f76d64366ee4efbbc039b0a256ac96e","value":" 70/70 [00:00\u0026lt;00:00, 875.58 examples/s]"}},"1fbd56dac4cd4c27a3967c0a3626275b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"201b0b1b39dd4c718138133d210646cd":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2033b0138e614612992b758fb307ec99":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"206d34ed52034dada7cfa9111074888f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_a9367e269d6d470bb0ada769aed5fc71","max":2043,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d26f332d8385452288e2a47b6fb73201","value":2043}},"20c41f5894b3446db130db2b2936df21":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"225207df956b434eafd843b2a05348f9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b0d4658d9c444e5a87d56f227e49aae5","placeholder":"​","style":"IPY_MODEL_99e67e62152645fcbaae18711c07f698","value":" 125/125 [00:00\u0026lt;00:00, 1727.81 examples/s]"}},"22dc47b12c1542beb38ac5c8a70440e5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a4d5ed0070334ce394354c7563c68aae","placeholder":"​","style":"IPY_MODEL_f2260f39cced43b7a54e44cc3b1c1b18","value":"Map: 100%"}},"263cbac3ec97488f9c122aa280e17e2d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"27beaac4806740d9976bdf6c9879d5a8":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"295f196e97cd4cd3bba7da940c5822f8":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9ee5b9f4b22a49ac9317a65268dd4c42","placeholder":"​","style":"IPY_MODEL_9224f814f23841f4b315288e3f9efcfe","value":"Generating train split: 100%"}},"299f755879224c34bfba802eb2195f3c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_dbee3077c7da4e429fc30ed617a336a6","IPY_MODEL_b5972e537bfc4472aeb3f5e830d1923a","IPY_MODEL_225207df956b434eafd843b2a05348f9"],"layout":"IPY_MODEL_6aac3b8d8a854f8089897735de1c79b5"}},"2aa13a7a74d24b15890ebe03b5d9ee44":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6fa36d1a07ed43a296e87cd06ce98a74","placeholder":"​","style":"IPY_MODEL_d6e1e663a68c4b46890e9483556ea747","value":"Downloading readme: 100%"}},"2aafb47ba2cd45fb93bda225ecae9336":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a0d13cff00234eab99a380042b500831","IPY_MODEL_94686e687b484024809164e5ebaf342e","IPY_MODEL_dca91c994045402f888136a79d861eb5"],"layout":"IPY_MODEL_1d95944d060a49138f6bc5dfdbab4229"}},"2afb48d892b44d5aa574f5a364583409":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2ca71517abac4b39a8039b34a59ad347":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2d16bb67d3c448f8b581dabb214a95ae":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"2d3ba64e1d9441d398934319c79c553b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2d4f4bf4ae9c438b887373ed8600642a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ef91d76b442a4f23bcfb29bfc94b9818","max":248807407,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9e142f7af8454ba096c0a26c08e7074a","value":248807407}},"2ea57b951cbf424798cbf874675cff48":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1ba236512f8416ebc791ff356151da7","placeholder":"​","style":"IPY_MODEL_8e39f2427b1a45ba9b2cb8b6e70289ca","value":"Loading checkpoint shards: 100%"}},"3021a76779974aa09a23bceaaceb87b2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9d2c377c3f234d378065a76ff38bee67","IPY_MODEL_45eb2dd14a2f4875acf1ded99eff40bd","IPY_MODEL_930163ebbec54bfa9993b136d2cc1fd7"],"layout":"IPY_MODEL_b7a2020378ad49b7ab45051fe111054a"}},"3282531e8f1a4e1fb2a9904fe782de33":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_263cbac3ec97488f9c122aa280e17e2d","placeholder":"​","style":"IPY_MODEL_aeabf690a9f446318ee025d3c9fb69ec","value":" 14.1M/14.1M [00:01\u0026lt;00:00, 8.59MB/s]"}},"32f1bf9ed78847c2a04cfbf10405abcc":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3460071f0962401093ce816422995d65":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"34cfc963b1244f4c98c084d821d30607":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"34eb6d4fdee74ad684590cbf4922479b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"35551599bb3b4ec69af0efebd55fd225":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_cb99ffff65c44573aced4bfee7ad96dc","IPY_MODEL_7cae0972f5ad449eb9905aee1b61b146","IPY_MODEL_7a0a76910de0479d977aa8ec59f4e086"],"layout":"IPY_MODEL_47147bbe10b04691a569dfd7e7461f80"}},"35a8b86f383d4bf098b2dbfda2469194":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"35a9c7ec1df043ada6c736b638bc781a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"366d98eee446489fbbe406a5d55df205":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"3680f1f3e1404ed1858a0cf4b984f63c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f1d177c7a0304e8680d0a240bd80e9d1","max":248807407,"min":0,"orientation":"horizontal","style":"IPY_MODEL_6caea826b2554d618bcfbb2975e2245d","value":248807407}},"37206d247fc14818bfd08a288ce0d9df":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"37a9ce423bae45d485afa0f36857b707":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"37cb2ccafa2f4dcbb0baafede1e31330":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"37ce474173884129a31689d901321999":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_107d9073363b46e4b0d73c491c59a273","IPY_MODEL_6402930920b74457ab7ab3a1b6dd7b2f","IPY_MODEL_3d6b5ca5bb7448c2a5e166bf2e3ae561"],"layout":"IPY_MODEL_0f7731e00c1f430d85ae828668627222"}},"38efac11d6fc453691d481d2dbf6008a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8eb3a7169ca646fd8c3e7070f19f6d27","IPY_MODEL_43336c4b44a14a8fac63fc05bc10207a","IPY_MODEL_dd4f31494fb04a2aa7358162530c7b37"],"layout":"IPY_MODEL_d084e5e0d5a3485cb7f5154c10fb223c"}},"390f5a81d04140b998a587d1590b83fd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"394299ed143b4330a635e8a178109bd8":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"3d59dce7cfe44bc188d3f3d87b963193":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3d6b5ca5bb7448c2a5e166bf2e3ae561":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a0cb56c12dd54b80902dec300500e518","placeholder":"​","style":"IPY_MODEL_f6b6f8f38d5f420ab37ce1e078e6b58d","value":" 2043/2043 [00:01\u0026lt;00:00, 2772.83 examples/s]"}},"3d6c95d7ea704941938cbddfed5289be":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3e07637dff294f3193b504441d8115a4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_68994a3b9610409786eaa243822c37c2","placeholder":"​","style":"IPY_MODEL_86967a169a454e5cb9d31052da036744","value":"special_tokens_map.json: 100%"}},"3ede7b0a318a4715a853cdf941f0a649":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_03322d28b9f74274bb8922dce0665b91","max":782,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d92bc27036ae448eb4cda7d2fc8a0cd9","value":782}},"3fda983ae500466b96d5f4c868b493f4":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"404db0f5e4084c0383d5b275bf902cf1":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"41a1028bcfaf444991786687293c2357":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"420789bd9e0d425d97eec8582eab67ec":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2ce1f4136c74915bd0ae5c8ba0889e6","max":70,"min":0,"orientation":"horizontal","style":"IPY_MODEL_366d98eee446489fbbe406a5d55df205","value":70}},"43336c4b44a14a8fac63fc05bc10207a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_99571c31a21c44b2ab60508ca209b50e","max":13846492413,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c1fcef931d374160ad1a91376a721787","value":13846492413}},"45104160ae414b349228cfb46f78fa3f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"451c1587d790403287073071e2938e25":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"45eb2dd14a2f4875acf1ded99eff40bd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d8a1abe1307a481783b1ef0c5bf16009","max":450,"min":0,"orientation":"horizontal","style":"IPY_MODEL_131b4679c5214bd68b5a9835e2111a4a","value":450}},"465d20bfe8de456aa9d945f48078656b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"47147bbe10b04691a569dfd7e7461f80":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4862b73114144685a17e61ba3efa7bb9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4914b8faa51b454b80eb81f8b7e7668d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4a274aaa365b4fd5a2b83bccf98c2ae9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a74741310c2d43acaa0e8cabf9a8082d","placeholder":"​","style":"IPY_MODEL_e1ccbbe278294045a45ea47a68edab68","value":" 249M/249M [00:01\u0026lt;00:00, 232MB/s]"}},"4a4c61e342b84634a06e1adcfcb0b88d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4b6ac8253b90455db664844f73ac3770":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4bb13006fb1545adb0e07a0bda098fa8":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_32f1bf9ed78847c2a04cfbf10405abcc","max":782,"min":0,"orientation":"horizontal","style":"IPY_MODEL_54c2ca4034bf4fd08cc3e1d6d57aa8b0","value":782}},"4cfead4c3c9d4ed596811ec12d3eb864":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4d45e3924d5e4a88aa10fe337c5d497a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4eff947243e845da8322eb4274635cb9":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"50bb9ac33a4147e99b227b31e102b408":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5338ec17eca848bfb8449393702ae833":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c4f9bccb7bf1450b821462ce6da8899c","IPY_MODEL_fc992d31937246df922c290b1eaf5e5d","IPY_MODEL_a51e7f92814b4acbb23194a6f4771986"],"layout":"IPY_MODEL_6e9a85dcf5364472902e89b7b03a91d6"}},"53b027d494ad436683c47f45e714b15f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_96c68d22eba545758011a17ce922223e","placeholder":"​","style":"IPY_MODEL_4d45e3924d5e4a88aa10fe337c5d497a","value":" 18.8M/18.8M [00:00\u0026lt;00:00, 25.5MB/s]"}},"53b9b370b3434a82891af0246351cdc7":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"54c2ca4034bf4fd08cc3e1d6d57aa8b0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"54d7e8db3054433b9af752a79f7c9349":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5526a080e34149c09f090619916f5ec0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e8007b90fdd048aa9216f704def2bd33","max":782,"min":0,"orientation":"horizontal","style":"IPY_MODEL_891eaae9afd941568924490f57f73d14","value":782}},"559554c369b843b2be6d3080d9c03678":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3fda983ae500466b96d5f4c868b493f4","placeholder":"​","style":"IPY_MODEL_54d7e8db3054433b9af752a79f7c9349","value":"Downloading data: 100%"}},"56c31c15141a453ab585864d6952e550":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e49aad69922a415aa79d06a5aafedda7","placeholder":"​","style":"IPY_MODEL_4a4c61e342b84634a06e1adcfcb0b88d","value":"Generating valid split: 100%"}},"57204c7b18fa46d2a77ca61fefeede8d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"575206c367714686aff8d307b63ad772":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_138b0f5f60dd42b092c7e0d46df4ac09","placeholder":"​","style":"IPY_MODEL_be24d5fb231f40198a0b68fb8f9e4bea","value":"Map: 100%"}},"5849c93766e1416abe087df9b442937f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5860a2b1c61f4a318541a5b74fd711f1":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b5f3950d12ee41469f8258f4c93e5289","max":819,"min":0,"orientation":"horizontal","style":"IPY_MODEL_5849c93766e1416abe087df9b442937f","value":819}},"58701cae2eca451f96f5274c9a135c26":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2ea57b951cbf424798cbf874675cff48","IPY_MODEL_d364868b278f485ba82eea26eedb32a6","IPY_MODEL_898fbb07857d49d4beecc6cf6154b8a0"],"layout":"IPY_MODEL_35a9c7ec1df043ada6c736b638bc781a"}},"58c9342d31584accac820c3e39e53a91":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"591a154f625a483c8b0fd33babfe48d4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5929d72bd5c64798a2ff166dd0b56a42":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"597f5241a77e41deb39e324ef60311be":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_57204c7b18fa46d2a77ca61fefeede8d","placeholder":"​","style":"IPY_MODEL_1082fc50d7954d4ab8e55176264da4ab","value":" 14.1M/14.1M [00:00\u0026lt;00:00, 20.9MB/s]"}},"599986e55f4047cd92abea854e875e63":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"59a84a6f4aa048e392ab1e662e18c7b6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b77a13b3e4ff4124af768d06b21cb0c3","IPY_MODEL_75396c2b984f4e11b08f89054f120ec4","IPY_MODEL_f5158dd668924434b1f1309c49f44ea5"],"layout":"IPY_MODEL_c9cc5be93de34ed29fb86fcffafeb50d"}},"59eb4a82263643e08cd6a63795ab5549":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"5a50cf3a723a4682b7375a99514ce5c7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5e6bbec7ce5346b6a14c48cd08133813":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5e82cf0422e24df2a83f8c702815da46":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"60402bea384e414198984683acc1fb97":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"60cae75fa2f6474a9ff94b3badd62329":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"60ceed6bacbc44a4a0fa67c4b9968f5e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_34cfc963b1244f4c98c084d821d30607","max":248807407,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d9160c37d6074b96981e983d1c959c37","value":248807407}},"60ff01fe478741309143ccdae8a9aabb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f6c2f9610e0d4136a50bd0e856fd569f","max":2114274,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ff315f38376745368594b42dfe1e0831","value":2114274}},"61ad8c091ed243d29be12e968302a027":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"63950c28bed04ccd885eadfada100d2a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a53f6cfe2d2c49d6a8fdfd3851e52abe","IPY_MODEL_5860a2b1c61f4a318541a5b74fd711f1","IPY_MODEL_fb234870cc92487ba7be7a1b152e9e4b"],"layout":"IPY_MODEL_ac7c723a551742e59bb41b6e7ee552bf"}},"6402930920b74457ab7ab3a1b6dd7b2f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_aead74459a26465b9cd689205db69a0c","max":2043,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a28cac5587c541128668249edc11b729","value":2043}},"642d9c4a4fb241638557d2539f40c813":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9060eaa774ee44a585133acfbf697aed","max":70,"min":0,"orientation":"horizontal","style":"IPY_MODEL_74a6d5f5c05f4b86a7e7c44d9580a851","value":70}},"647a31d997104b5da9fe69e04da93b8a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_17d5e7c8230f4f7d98b9f90bff71b17a","placeholder":"​","style":"IPY_MODEL_eb33b27d0a2b4544afa6c65fab0ee09e","value":"Downloading data: 100%"}},"649fcafa7239439fa5ce0d0382c48d56":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"659c1b9075c042958d3b49e0a1dacd50":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"65a777af38b646478d7f36b6669a9d21":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"68994a3b9610409786eaa243822c37c2":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6a2fe3a6b59d44e5a00edec4829b406b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6aac3b8d8a854f8089897735de1c79b5":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6b4e1b773441491396ee782437db88ba":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6bdf8f54e1a044a890eea5b5aabba2ad":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6caea826b2554d618bcfbb2975e2245d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"6dea70364356422bb93a8f926f064a71":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_8960600f2a44449ca7c57b6d9c77aab9","max":18778462,"min":0,"orientation":"horizontal","style":"IPY_MODEL_88f416de6f6f4e88ad964cd9ba4a323d","value":18778462}},"6e355d6818d64ad2824a68b43c56ef7b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_201b0b1b39dd4c718138133d210646cd","max":125,"min":0,"orientation":"horizontal","style":"IPY_MODEL_aa1ee58620044ac79d1e667ef1bfee63","value":125}},"6e9a85dcf5364472902e89b7b03a91d6":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6ede1fa0d06846f4a0bc236aece853c9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b2ab19d10c1a494fbb9e27ae4537e9c2","placeholder":"​","style":"IPY_MODEL_884cc2676ebc4a2c8093a9e6550e2156","value":" 249M/249M [00:05\u0026lt;00:00, 38.1MB/s]"}},"6fa36d1a07ed43a296e87cd06ce98a74":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7128abbf17904f2582cf4a80863b5349":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"721f0151b28c4f3c9321265d324e78eb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"72459209da20432281ee30649efdca98":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_8d9d10cefa9a4696a9b6b9dfa532adbc","IPY_MODEL_d673214acb6a4914a5b0d1dfb506a1a3","IPY_MODEL_3282531e8f1a4e1fb2a9904fe782de33"],"layout":"IPY_MODEL_60cae75fa2f6474a9ff94b3badd62329"}},"72785a0f18bb453db071461d570bedc8":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"730f457aba6542e5aa42383289d38c09":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7334d4e6548c407ab31a50c7c49afad6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3d59dce7cfe44bc188d3f3d87b963193","placeholder":"​","style":"IPY_MODEL_5929d72bd5c64798a2ff166dd0b56a42","value":" 125/125 [00:00\u0026lt;00:00, 1391.27 examples/s]"}},"73db19da0b71422bb2ba5736e6f41a0f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"746bef72590d4ea8baad7fffead4cf2d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_61ad8c091ed243d29be12e968302a027","max":13846492413,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e4aeca8f4b3b44debf0f9f63d26fc6e3","value":13846492413}},"74a6d5f5c05f4b86a7e7c44d9580a851":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"74c110af80f74377b1f5db989ca61556":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4eff947243e845da8322eb4274635cb9","max":14079730,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a0c7a3ba574b42589b3300ba4186ade4","value":14079730}},"75396c2b984f4e11b08f89054f120ec4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_eb0e2fadf4e04cc0b6faea68ba94588c","max":14079730,"min":0,"orientation":"horizontal","style":"IPY_MODEL_390f5a81d04140b998a587d1590b83fd","value":14079730}},"75b09c8780354b4b88673fb5c6ef7bd4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_22dc47b12c1542beb38ac5c8a70440e5","IPY_MODEL_e1235ea7aefc446fa521bcd309e46c86","IPY_MODEL_b2ded191c8fb4d92bd8e08b2b339f620"],"layout":"IPY_MODEL_910afcba94034647a494b90800788d59"}},"787033939ca14a56b497399163e8b42b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"78e4025e078c416c998fc5bd4d873c77":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"796c7be9ac6747c59460cd1b9362295c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7a0a76910de0479d977aa8ec59f4e086":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_34eb6d4fdee74ad684590cbf4922479b","placeholder":"​","style":"IPY_MODEL_599986e55f4047cd92abea854e875e63","value":" 70/70 [00:00\u0026lt;00:00, 782.52 examples/s]"}},"7a6edc1bdd914c5b9c01ff7fab84a18c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_fc7db6797eb540c48477ed3e25274e63","IPY_MODEL_74c110af80f74377b1f5db989ca61556","IPY_MODEL_597f5241a77e41deb39e324ef60311be"],"layout":"IPY_MODEL_ac15ef96a263456bb4ccbb93a91344eb"}},"7b78cbe51a62490e9dd5d055af9fd9d3":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7cae0972f5ad449eb9905aee1b61b146":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_195cfda94b8d4910a6d216ac0f11cf96","max":70,"min":0,"orientation":"horizontal","style":"IPY_MODEL_0e43d85ad21c4bb39f355b1d20a57d8b","value":70}},"7cf8336e6ff9424aaab8f942263c48ee":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7e7d51ced1ee443c89eff598de596a2a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7e96edcf34624502b7c0c7c24d3198d8":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7e9ff01b77f3484a905bd20c14b2e73d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7eae8bb5c7c046fca074738bc87616ac":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7f468050a20f4f7d89aee93c8bee114b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7f5fe75b6da94eac80de28e5cf72ed07":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"805edf7f34154b4a9533a4b2af64cff5":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"81eecadfbb7b454aafe6cf50babf35ab":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a8388c14b4d2450c8399585db9f72f89","IPY_MODEL_2d4f4bf4ae9c438b887373ed8600642a","IPY_MODEL_6ede1fa0d06846f4a0bc236aece853c9"],"layout":"IPY_MODEL_b28a3ba7218c46fcbfef2b636ee6a654"}},"830de334465e4e6b895d1844b094a726":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"83fb22643aac4b58bb4a6f62b5acadf5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fff23e4b9d2a4d9aa6d5701b34d3377e","placeholder":"​","style":"IPY_MODEL_bd2d4bdd5cc14a65aa3b4361614f2ef0","value":" 125/125 [00:00\u0026lt;00:00, 544.57 examples/s]"}},"8501ed8c9e8c4223b656a7f78b02c56f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_659c1b9075c042958d3b49e0a1dacd50","max":2043,"min":0,"orientation":"horizontal","style":"IPY_MODEL_123f163fcda3478087589c61e343e2bd","value":2043}},"86967a169a454e5cb9d31052da036744":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8788f7d28c78436692194baa75adcad5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"884cc2676ebc4a2c8093a9e6550e2156":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"88bf66ddc2cf4716be085484620516f1":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"88f416de6f6f4e88ad964cd9ba4a323d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"891eaae9afd941568924490f57f73d14":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8960600f2a44449ca7c57b6d9c77aab9":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"898fbb07857d49d4beecc6cf6154b8a0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ea44be94b8b04eceaa5a1557390ee6bf","placeholder":"​","style":"IPY_MODEL_140ded61fd4943799c0968c04381f930","value":" 3/3 [00:07\u0026lt;00:00,  2.04s/it]"}},"89fdd408bbab40628e85f5dec3e18ebd":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8a23b27b40de4faca3f058f4a847ac61":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3e07637dff294f3193b504441d8115a4","IPY_MODEL_bcd63723a8cd426dac3553169d2e96e5","IPY_MODEL_1c978e4ddf2946e2ba2dc1aaf1bd83a4"],"layout":"IPY_MODEL_4cfead4c3c9d4ed596811ec12d3eb864"}},"8c160140e64d4995ba44a0cbb97e6ee9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b672fddacc494245b3b902237bec3818","IPY_MODEL_1ab8045c37aa43a1b26526a939e564bc","IPY_MODEL_dd28c7fa7a5a4e4ca6ee70cb4e3490d4"],"layout":"IPY_MODEL_730f457aba6542e5aa42383289d38c09"}},"8d2bc9fddd454940bfe6cb5d5264991c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8d9d10cefa9a4696a9b6b9dfa532adbc":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6b4e1b773441491396ee782437db88ba","placeholder":"​","style":"IPY_MODEL_dca52ae59366437fa1bb21ab54fad88d","value":"Downloading data: 100%"}},"8e39f2427b1a45ba9b2cb8b6e70289ca":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8e950284f2ec4ad183d17fbee1d0c894":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8eb3a7169ca646fd8c3e7070f19f6d27":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7e9ff01b77f3484a905bd20c14b2e73d","placeholder":"​","style":"IPY_MODEL_72785a0f18bb453db071461d570bedc8","value":"pytorch_model.bin: 100%"}},"8f3270b73b374719b8c858baed4dd017":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9016d5d2af78485fb18dbf9cd89d00e2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9060eaa774ee44a585133acfbf697aed":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"90cad2d652374c5eb351d5587d6dfbf8":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"910afcba94034647a494b90800788d59":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9159d8bb56ac42cdb2720956045f9e22":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9224f814f23841f4b315288e3f9efcfe":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"930163ebbec54bfa9993b136d2cc1fd7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f43a6fa38cab4cbb87099d9192dbd076","placeholder":"​","style":"IPY_MODEL_9016d5d2af78485fb18dbf9cd89d00e2","value":" 450/450 [00:00\u0026lt;00:00, 37.4kB/s]"}},"94686e687b484024809164e5ebaf342e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_787033939ca14a56b497399163e8b42b","max":18778462,"min":0,"orientation":"horizontal","style":"IPY_MODEL_649fcafa7239439fa5ce0d0382c48d56","value":18778462}},"96c68d22eba545758011a17ce922223e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"97efa9d6514c44e89ce559a7d19fd05a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_404db0f5e4084c0383d5b275bf902cf1","placeholder":"​","style":"IPY_MODEL_00950291acff47f0b45494eb5a86fe20","value":" 2043/2043 [00:01\u0026lt;00:00, 2816.35 examples/s]"}},"992c718ee0804ba0a8c1ce98726598e2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_2aa13a7a74d24b15890ebe03b5d9ee44","IPY_MODEL_4bb13006fb1545adb0e07a0bda098fa8","IPY_MODEL_16b17a533d1f4dc5849333f67f015a58"],"layout":"IPY_MODEL_c3eba09b9e194495b33fb266ea1e76de"}},"99571c31a21c44b2ab60508ca209b50e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"99e67e62152645fcbaae18711c07f698":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9c91ea74f91e45b0960bf1d833f3b02e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9d2c377c3f234d378065a76ff38bee67":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9c91ea74f91e45b0960bf1d833f3b02e","placeholder":"​","style":"IPY_MODEL_f34da6e571fc44998c32793246c59be5","value":"tokenizer_config.json: 100%"}},"9d4974737ae1465facf871bd41fda78f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_88bf66ddc2cf4716be085484620516f1","placeholder":"​","style":"IPY_MODEL_d8ac029ddca34261842d1ab84540ecf5","value":" 2.11M/2.11M [00:00\u0026lt;00:00, 7.16MB/s]"}},"9e142f7af8454ba096c0a26c08e7074a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9e55087299ad4dae815fcb89b5477ac9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9ee5b9f4b22a49ac9317a65268dd4c42":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9f3559881ce844168b4427bb910bea56":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b4654049c3df46a597a30539543d43e3","IPY_MODEL_5526a080e34149c09f090619916f5ec0","IPY_MODEL_eb3eae7e1a614e47a4155cf5c8ee640a"],"layout":"IPY_MODEL_ff1dbb1d10464d32b3a3423e57a0f7bb"}},"9f76d64366ee4efbbc039b0a256ac96e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"a0c7a3ba574b42589b3300ba4186ade4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a0cb56c12dd54b80902dec300500e518":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a0d13cff00234eab99a380042b500831":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8f3270b73b374719b8c858baed4dd017","placeholder":"​","style":"IPY_MODEL_1e45dd4bbf784803b4bbe434e18cf78e","value":"Downloading data: 100%"}},"a208b57bb8574d4893ab595cdb6a69fc":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e8a67c68d15f4674aabee2494bba2e7d","placeholder":"​","style":"IPY_MODEL_4b6ac8253b90455db664844f73ac3770","value":" 2043/2043 [00:00\u0026lt;00:00, 3308.13 examples/s]"}},"a258e49acd8142c39fa7d148821661e4":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a28cac5587c541128668249edc11b729":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a35d6bdac51940c88222b72c7bc2e722":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_647a31d997104b5da9fe69e04da93b8a","IPY_MODEL_60ceed6bacbc44a4a0fa67c4b9968f5e","IPY_MODEL_4a274aaa365b4fd5a2b83bccf98c2ae9"],"layout":"IPY_MODEL_bd8e1f10f65f4e30a2da5e8c98f448a0"}},"a38eb016f91d42538e74d8922b8d9f49":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c50481b9c1a64130822d3417c1911c63","placeholder":"​","style":"IPY_MODEL_37a9ce423bae45d485afa0f36857b707","value":"pytorch_model.bin: 100%"}},"a4d5ed0070334ce394354c7563c68aae":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a505cbfa56c5447f8b596fda8670e420":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_58c9342d31584accac820c3e39e53a91","placeholder":"​","style":"IPY_MODEL_591a154f625a483c8b0fd33babfe48d4","value":" 249M/249M [00:02\u0026lt;00:00, 238MB/s]"}},"a51e7f92814b4acbb23194a6f4771986":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3d6c95d7ea704941938cbddfed5289be","placeholder":"​","style":"IPY_MODEL_394299ed143b4330a635e8a178109bd8","value":" 18.8M/18.8M [00:01\u0026lt;00:00, 8.81MB/s]"}},"a53f6cfe2d2c49d6a8fdfd3851e52abe":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1aa0d838b4d45d295a7ace4b3ba2344","placeholder":"​","style":"IPY_MODEL_7e7d51ced1ee443c89eff598de596a2a","value":"config.json: 100%"}},"a548fc8699b749d4b9290142f7adea97":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a5644b0e44fd46c69e08583f4ba1d47f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"a5f2bc40845f4de8a9f604402385ed97":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bf6eef93378e4e20b9dff7a8c038c567","placeholder":"​","style":"IPY_MODEL_b042d44d622246e8b1525fa2d9b03c12","value":" 782/782 [00:00\u0026lt;00:00, 53.0kB/s]"}},"a5f3e7cada784c6b88a7de1fed668ace":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a74741310c2d43acaa0e8cabf9a8082d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a8388c14b4d2450c8399585db9f72f89":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6a2fe3a6b59d44e5a00edec4829b406b","placeholder":"​","style":"IPY_MODEL_60402bea384e414198984683acc1fb97","value":"Downloading data: 100%"}},"a9367e269d6d470bb0ada769aed5fc71":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aa1ee58620044ac79d1e667ef1bfee63":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"aa3ea163dfe542899ccb1e19b39ac694":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"abb41ff953514c1590a93c18a3103a14":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ac15ef96a263456bb4ccbb93a91344eb":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ac7c723a551742e59bb41b6e7ee552bf":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aeabf690a9f446318ee025d3c9fb69ec":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"aead74459a26465b9cd689205db69a0c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aeb6dceeb4b145fc8862c82a5198b8cb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b03e5a3358274cc7b7f3ecc822572cde":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_37cb2ccafa2f4dcbb0baafede1e31330","placeholder":"​","style":"IPY_MODEL_35a8b86f383d4bf098b2dbfda2469194","value":"Downloading data: 100%"}},"b042d44d622246e8b1525fa2d9b03c12":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b0d4658d9c444e5a87d56f227e49aae5":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b25823c6d1484d9b8279de519119d94b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b27fc4089ed2490b8d35e5372cef415f":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_78e4025e078c416c998fc5bd4d873c77","placeholder":"​","style":"IPY_MODEL_465d20bfe8de456aa9d945f48078656b","value":"Generating valid split: 100%"}},"b28a3ba7218c46fcbfef2b636ee6a654":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b2ab19d10c1a494fbb9e27ae4537e9c2":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b2ded191c8fb4d92bd8e08b2b339f620":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a258e49acd8142c39fa7d148821661e4","placeholder":"​","style":"IPY_MODEL_aeb6dceeb4b145fc8862c82a5198b8cb","value":" 70/70 [00:00\u0026lt;00:00, 515.29 examples/s]"}},"b4654049c3df46a597a30539543d43e3":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4914b8faa51b454b80eb81f8b7e7668d","placeholder":"​","style":"IPY_MODEL_0cbadd20e07f40eb9fb94ad42c26a1e9","value":"Downloading readme: 100%"}},"b4aafd4bfd934c9a944327b51e39da04":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_295f196e97cd4cd3bba7da940c5822f8","IPY_MODEL_be962b95712c40c5bc7d249823ae0212","IPY_MODEL_97efa9d6514c44e89ce559a7d19fd05a"],"layout":"IPY_MODEL_aa3ea163dfe542899ccb1e19b39ac694"}},"b5972e537bfc4472aeb3f5e830d1923a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_5e6bbec7ce5346b6a14c48cd08133813","max":125,"min":0,"orientation":"horizontal","style":"IPY_MODEL_bf7b2f2508324ee6a7ca397cbeb18871","value":125}},"b5f3950d12ee41469f8258f4c93e5289":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b5f98ff7b61e43b3a18690b97e068c2a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"b672fddacc494245b3b902237bec3818":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_3460071f0962401093ce816422995d65","placeholder":"​","style":"IPY_MODEL_cece5fb43e6c4299a39684f6f074bdbe","value":"Generating test split: 100%"}},"b77a13b3e4ff4124af768d06b21cb0c3":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_805edf7f34154b4a9533a4b2af64cff5","placeholder":"​","style":"IPY_MODEL_137920d44a414e0b91ebc8e33b1930a0","value":"Downloading data: 100%"}},"b7a2020378ad49b7ab45051fe111054a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b828cbc2a5034e469e202341cd4c3cbf":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d17e621afa014d71a789f18e011b741b","IPY_MODEL_60ff01fe478741309143ccdae8a9aabb","IPY_MODEL_9d4974737ae1465facf871bd41fda78f"],"layout":"IPY_MODEL_6bdf8f54e1a044a890eea5b5aabba2ad"}},"b9ab517b9e3a4f76808d386472a78b3e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ba7808e4152e442d9d66405430345895":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7b78cbe51a62490e9dd5d055af9fd9d3","max":125,"min":0,"orientation":"horizontal","style":"IPY_MODEL_59eb4a82263643e08cd6a63795ab5549","value":125}},"bcd63723a8cd426dac3553169d2e96e5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_53b9b370b3434a82891af0246351cdc7","max":228,"min":0,"orientation":"horizontal","style":"IPY_MODEL_8788f7d28c78436692194baa75adcad5","value":228}},"bd06cd482f734479b7b693036838fc40":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bd0d336e14f74621b77a917e6bf41937":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bd2d4bdd5cc14a65aa3b4361614f2ef0":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"bd8e1f10f65f4e30a2da5e8c98f448a0":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"be24d5fb231f40198a0b68fb8f9e4bea":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"be962b95712c40c5bc7d249823ae0212":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_eeb86a3690fa492fb277dc60e60133c2","max":2043,"min":0,"orientation":"horizontal","style":"IPY_MODEL_045a6bf116574f5a97c2bf901b2b6ee5","value":2043}},"bf6eef93378e4e20b9dff7a8c038c567":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bf7b2f2508324ee6a7ca397cbeb18871":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c14f984fc3ff41c8b8197b5d0a0933cf":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_37206d247fc14818bfd08a288ce0d9df","placeholder":"​","style":"IPY_MODEL_721f0151b28c4f3c9321265d324e78eb","value":"Generating train split: 100%"}},"c1fcef931d374160ad1a91376a721787":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c3eba09b9e194495b33fb266ea1e76de":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c4f9bccb7bf1450b821462ce6da8899c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_45104160ae414b349228cfb46f78fa3f","placeholder":"​","style":"IPY_MODEL_abb41ff953514c1590a93c18a3103a14","value":"Downloading data: 100%"}},"c50481b9c1a64130822d3417c1911c63":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c80a5c1fc0504f1297d5510868d81d83":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c8c5a471d0234ad29405890e4e03654a":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c9cc5be93de34ed29fb86fcffafeb50d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cb99ffff65c44573aced4bfee7ad96dc":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b9ab517b9e3a4f76808d386472a78b3e","placeholder":"​","style":"IPY_MODEL_796c7be9ac6747c59460cd1b9362295c","value":"Generating valid split: 100%"}},"cd08260a39ab4c1686db09b1ed4189b2":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c14f984fc3ff41c8b8197b5d0a0933cf","IPY_MODEL_8501ed8c9e8c4223b656a7f78b02c56f","IPY_MODEL_a208b57bb8574d4893ab595cdb6a69fc"],"layout":"IPY_MODEL_5e82cf0422e24df2a83f8c702815da46"}},"ce80838b44914a91ad6b3658d2cdedbd":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cece5fb43e6c4299a39684f6f074bdbe":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cfdb139bb0c4401c9be9a8aaaab3ee81":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_a38eb016f91d42538e74d8922b8d9f49","IPY_MODEL_746bef72590d4ea8baad7fffead4cf2d","IPY_MODEL_e7dc89870aa04f91ba18dc3e2a2f7d50"],"layout":"IPY_MODEL_8e950284f2ec4ad183d17fbee1d0c894"}},"d084e5e0d5a3485cb7f5154c10fb223c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d17e621afa014d71a789f18e011b741b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_1fbd56dac4cd4c27a3967c0a3626275b","placeholder":"​","style":"IPY_MODEL_7eae8bb5c7c046fca074738bc87616ac","value":"tokenizer.json: 100%"}},"d1aa0d838b4d45d295a7ace4b3ba2344":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d1aeed3c531842e1958c9c27f41fc9e1":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d1ba236512f8416ebc791ff356151da7":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d26f332d8385452288e2a47b6fb73201":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d2c4a5ea234c4da0b5d671cacbbfae5c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_1dc56957b44c4177a23e3938ae664718","IPY_MODEL_6e355d6818d64ad2824a68b43c56ef7b","IPY_MODEL_7334d4e6548c407ab31a50c7c49afad6"],"layout":"IPY_MODEL_bd06cd482f734479b7b693036838fc40"}},"d364868b278f485ba82eea26eedb32a6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0b006cce995d4dafafe486ed726811aa","max":3,"min":0,"orientation":"horizontal","style":"IPY_MODEL_20c41f5894b3446db130db2b2936df21","value":3}},"d44bd2617b484211a7c2a90a9a9df375":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d4a3c96c5a8640a080e34e7dfd9dd042":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e7fc9f8a53cf46a093493d31ed18569b","placeholder":"​","style":"IPY_MODEL_ce80838b44914a91ad6b3658d2cdedbd","value":"Downloading readme: 100%"}},"d4b2b25a809b4245bc8319b8784f3f52":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_d4a3c96c5a8640a080e34e7dfd9dd042","IPY_MODEL_3ede7b0a318a4715a853cdf941f0a649","IPY_MODEL_a5f2bc40845f4de8a9f604402385ed97"],"layout":"IPY_MODEL_7cf8336e6ff9424aaab8f942263c48ee"}},"d673214acb6a4914a5b0d1dfb506a1a3":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_73db19da0b71422bb2ba5736e6f41a0f","max":14079730,"min":0,"orientation":"horizontal","style":"IPY_MODEL_a5644b0e44fd46c69e08583f4ba1d47f","value":14079730}},"d6a2fe9bdd534338bc99ad0bb5f02d6b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d6e1e663a68c4b46890e9483556ea747":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d8402ff822114a65a8aeb4e03f6249eb":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bd0d336e14f74621b77a917e6bf41937","placeholder":"​","style":"IPY_MODEL_2d3ba64e1d9441d398934319c79c553b","value":" 70/70 [00:00\u0026lt;00:00, 686.71 examples/s]"}},"d8a1abe1307a481783b1ef0c5bf16009":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d8ac029ddca34261842d1ab84540ecf5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d9160c37d6074b96981e983d1c959c37":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d92bc27036ae448eb4cda7d2fc8a0cd9":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"da25db9a32734921ac37a81732bc7ac4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_b03e5a3358274cc7b7f3ecc822572cde","IPY_MODEL_6dea70364356422bb93a8f926f064a71","IPY_MODEL_53b027d494ad436683c47f45e714b15f"],"layout":"IPY_MODEL_a548fc8699b749d4b9290142f7adea97"}},"dbee3077c7da4e429fc30ed617a336a6":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_89fdd408bbab40628e85f5dec3e18ebd","placeholder":"​","style":"IPY_MODEL_4862b73114144685a17e61ba3efa7bb9","value":"Generating test split: 100%"}},"dca52ae59366437fa1bb21ab54fad88d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"dca91c994045402f888136a79d861eb5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_eb1d8adf85e04c2cb4387ee5eeed46ef","placeholder":"​","style":"IPY_MODEL_8d2bc9fddd454940bfe6cb5d5264991c","value":" 18.8M/18.8M [00:07\u0026lt;00:00, 2.77MB/s]"}},"dd28c7fa7a5a4e4ca6ee70cb4e3490d4":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_41a1028bcfaf444991786687293c2357","placeholder":"​","style":"IPY_MODEL_047048751df4430e94dd64dd6fcb7c7a","value":" 125/125 [00:00\u0026lt;00:00, 1651.62 examples/s]"}},"dd4f31494fb04a2aa7358162530c7b37":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2033b0138e614612992b758fb307ec99","placeholder":"​","style":"IPY_MODEL_5a50cf3a723a4682b7375a99514ce5c7","value":" 13.8G/13.8G [00:50\u0026lt;00:00, 422MB/s]"}},"e1235ea7aefc446fa521bcd309e46c86":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7f5fe75b6da94eac80de28e5cf72ed07","max":70,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e737733ad3b249ba8404026deb8569c8","value":70}},"e1ccbbe278294045a45ea47a68edab68":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e49aad69922a415aa79d06a5aafedda7":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e4aeca8f4b3b44debf0f9f63d26fc6e3":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e5a6627aebed47149540dcea90fe262c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e737733ad3b249ba8404026deb8569c8":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e7dc89870aa04f91ba18dc3e2a2f7d50":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d44bd2617b484211a7c2a90a9a9df375","placeholder":"​","style":"IPY_MODEL_f5d554d56fa9493ab5504e2a217d1e2c","value":" 13.8G/13.8G [00:30\u0026lt;00:00, 258MB/s]"}},"e7fc9f8a53cf46a093493d31ed18569b":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e8007b90fdd048aa9216f704def2bd33":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e8a67c68d15f4674aabee2494bba2e7d":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e911541c0ba44edbb6fb79a45f039a6c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e92d338ddb2f4c4d8accc779a3a4e4de":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d1aeed3c531842e1958c9c27f41fc9e1","placeholder":"​","style":"IPY_MODEL_830de334465e4e6b895d1844b094a726","value":"Map: 100%"}},"ea44be94b8b04eceaa5a1557390ee6bf":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eb0e2fadf4e04cc0b6faea68ba94588c":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eb1d8adf85e04c2cb4387ee5eeed46ef":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"eb33b27d0a2b4544afa6c65fab0ee09e":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eb3eae7e1a614e47a4155cf5c8ee640a":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e5a6627aebed47149540dcea90fe262c","placeholder":"​","style":"IPY_MODEL_7f468050a20f4f7d89aee93c8bee114b","value":" 782/782 [00:00\u0026lt;00:00, 72.3kB/s]"}},"ebde60f4f4834c0e9f3b6fa31c69b25b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_e92d338ddb2f4c4d8accc779a3a4e4de","IPY_MODEL_ba7808e4152e442d9d66405430345895","IPY_MODEL_83fb22643aac4b58bb4a6f62b5acadf5"],"layout":"IPY_MODEL_e911541c0ba44edbb6fb79a45f039a6c"}},"ee71c0b126b04dc79630ca3fd7d190ac":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"eeb86a3690fa492fb277dc60e60133c2":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ef91d76b442a4f23bcfb29bfc94b9818":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f1d177c7a0304e8680d0a240bd80e9d1":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f2260f39cced43b7a54e44cc3b1c1b18":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f2ce1f4136c74915bd0ae5c8ba0889e6":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f34da6e571fc44998c32793246c59be5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f3e7332712b54681908c3cd336d404fa":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f43a6fa38cab4cbb87099d9192dbd076":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f5158dd668924434b1f1309c49f44ea5":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_27beaac4806740d9976bdf6c9879d5a8","placeholder":"​","style":"IPY_MODEL_9e55087299ad4dae815fcb89b5477ac9","value":" 14.1M/14.1M [00:01\u0026lt;00:00, 8.82MB/s]"}},"f5d554d56fa9493ab5504e2a217d1e2c":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f6b6f8f38d5f420ab37ce1e078e6b58d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f6c2f9610e0d4136a50bd0e856fd569f":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f9da26f0fe6b4a2fa33652c080cc5db7":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"DescriptionStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fb234870cc92487ba7be7a1b152e9e4b":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c8c5a471d0234ad29405890e4e03654a","placeholder":"​","style":"IPY_MODEL_0dd1df1816e7428391bb745c3db3fe44","value":" 819/819 [00:00\u0026lt;00:00, 50.4kB/s]"}},"fc7db6797eb540c48477ed3e25274e63":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HTMLModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_65a777af38b646478d7f36b6669a9d21","placeholder":"​","style":"IPY_MODEL_f9da26f0fe6b4a2fa33652c080cc5db7","value":"Downloading data: 100%"}},"fc992d31937246df922c290b1eaf5e5d":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"FloatProgressModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_b25823c6d1484d9b8279de519119d94b","max":18778462,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2d16bb67d3c448f8b581dabb214a95ae","value":18778462}},"fdc1fee90905496d8e1d06766c75e284":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fe345c09588b476ca153f6f67cc1e168":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"HBoxModel","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_575206c367714686aff8d307b63ad772","IPY_MODEL_206d34ed52034dada7cfa9111074888f","IPY_MODEL_1113299c996b43289d7a4260d8284707"],"layout":"IPY_MODEL_c80a5c1fc0504f1297d5510868d81d83"}},"ff1dbb1d10464d32b3a3423e57a0f7bb":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ff315f38376745368594b42dfe1e0831":{"model_module":"@jupyter-widgets/controls","model_module_version":"1.5.0","model_name":"ProgressStyleModel","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"fff23e4b9d2a4d9aa6d5701b34d3377e":{"model_module":"@jupyter-widgets/base","model_module_version":"1.2.0","model_name":"LayoutModel","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}}}}},"nbformat":4,"nbformat_minor":0}